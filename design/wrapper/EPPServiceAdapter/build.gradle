apply plugin: 'maven-publish'
sourceSets.main.java.srcDirs = ["src/main/java", "${buildDir}/generated-sources/main"]
jar.baseName=jarfilename
jar.version=version
configurations {
    jaxb
}

task sourcesJar(type: Jar) {
	baseName jarfilename
	version version
	classifier 'sources'
	from sourceSets.main.allSource
}
artifacts {
	archives sourcesJar
}
ext {
	artifactoryBaseUrl = rootProject.artifactory_contextUrl
	artifactorySnapshotRepoUrl = "$artifactoryBaseUrl/proj-rnam_cac-dev-local"
	artifactoryReleaseRepoUrl = "$artifactoryBaseUrl/proj-rnam_cac-release-local"
}
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			groupId "com.ericsson.cac.sprint.adapters"
			artifactId jarfilename
			version version
			artifact sourcesJar
		}
	}
	repositories {
		maven {
			name 'ericssonArtifactory'
			url project.version.endsWith('-SNAPSHOT') ?	artifactorySnapshotRepoUrl : artifactoryReleaseRepoUrl
			credentials {
				username = rootProject.artifactory_user
				password = rootProject.artifactory_password
			}
		}
	}		
}

task genJaxb {
    ext.sourcesDir = file("${buildDir}/generated-sources/main")
    ext.classesDir = file("${buildDir}/classes/main")
    ext.schema = schemaDir

    outputs.dir classesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
            mkdir(dir: classesDir)

            xjc(destdir: sourcesDir) {
                schema(dir: schemaDir, includes: "**/*.xsd")
            }
        }
    }
}
dependencies {
    jaxb("com.sun.xml.bind:jaxb-xjc:2.2.4-1")
	compile("org.apache.axis:axis:1.4")
	compile("com.amdocs.mfs.common.security:transit:1.4")	
	compile project(':adapters:EnterpriseWalletProxyService')
	compile project(':adapters:EnterprisePaymentProxyService')
}
genJaxb.onlyIf { !(new File(buildDir, 'generated-sources/main').exists()) }
compileJava.dependsOn genJaxb
