package com.sprint.msdp.commandservice;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.15
 * 2015-02-19T13:07:51.293-05:00
 * Generated source version: 2.7.15
 * 
 */
@WebServiceClient(name = "EsbCommandServiceService", 
                  wsdlLocation = "EsbCommandService.wsdl",
                  targetNamespace = "http://sprint.com/msdp/commandservice") 
public class EsbCommandServiceService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://sprint.com/msdp/commandservice", "EsbCommandServiceService");
    public final static QName EsbCommandServicePort = new QName("http://sprint.com/msdp/commandservice", "EsbCommandServicePort");
    static {
        URL url = EsbCommandServiceService.class.getResource("EsbCommandService.wsdl");
        if (url == null) {
            url = EsbCommandServiceService.class.getClassLoader().getResource("EsbCommandService.wsdl");
        } 
        if (url == null) {
            java.util.logging.Logger.getLogger(EsbCommandServiceService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "EsbCommandService.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public EsbCommandServiceService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public EsbCommandServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public EsbCommandServiceService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public EsbCommandServiceService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public EsbCommandServiceService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public EsbCommandServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns EsbCommandService
     */
    @WebEndpoint(name = "EsbCommandServicePort")
    public EsbCommandService getEsbCommandServicePort() {
        return super.getPort(EsbCommandServicePort, EsbCommandService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EsbCommandService
     */
    @WebEndpoint(name = "EsbCommandServicePort")
    public EsbCommandService getEsbCommandServicePort(WebServiceFeature... features) {
        return super.getPort(EsbCommandServicePort, EsbCommandService.class, features);
    }

}
