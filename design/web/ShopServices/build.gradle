apply plugin: 'war'

group = 'com.sprint'
version = '1.0.0'

war.archiveName "ShopWebApp.war"

description = """Sprint and Family"""

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
	mavenLocal();
	maven { 
		url "https://arm.mo.ca.am.ericsson.se/artifactory/proj-rnam_cac-release"
		
	}
}

dependencies {
	compile("javax.validation:validation-api:1.0.0.GA")	
	compile group: 'org.springframework', name: 'spring-core', version: '4.1.1.RELEASE'
	compile group: 'org.springframework', name: 'spring-aop', version: '4.1.1.RELEASE'
	compile group: 'org.springframework', name: 'spring-context', version: '4.1.1.RELEASE'
	compile group: 'org.springframework', name: 'spring-beans', version: '4.1.1.RELEASE'
	compile group: 'org.springframework', name: 'spring-test', version: '4.1.1.RELEASE'
	compile group: 'org.springframework', name: 'spring-web', version: '4.1.1.RELEASE'
	compile group: 'org.springframework', name: 'spring-webmvc', version: '4.1.1.RELEASE'
	compile group: 'org.springframework', name: 'spring-beans', version: '4.1.1.RELEASE'
	testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version:'1.0.2.RELEASE'
	testCompile group: 'org.hamcrest', name: 'hamcrest-library', version:'1.3'
	providedCompile group: 'org.springframework.boot', name: 'spring-boot-starter-tomcat', version:'1.0.2.RELEASE'
	providedCompile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-jasper', version:'7.0.53'
	providedCompile group: 'javax.servlet', name: 'jsp-api', version: '2.0'
		
	compile(
		[group: 'ch.qos.logback', name: 'logback-classic', version:'1.1.2'],
		[group: 'org.slf4j', name: 'slf4j-simple', version: '1.6.1'],
		[group: 'org.slf4j', name: 'slf4j-api', version: '1.6.1'],
		[group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.6.1'],
		[group: 'com.google.code.gson', name: 'gson', version: '2.2.4'],
		[group: 'log4j', name: 'log4j', version: '1.2.14']
	)
	
	compile project(":workflows:ShopWorkflow")
	compile project(":adapters:QueryMediaProxyService")	
	compile project(":adapters:PromotionManagementProxyService")
	compile project(":adapters:QueryCsaProxyService")
	
	
}

task copyWar(type: Copy) {
	ext.warDir = file('build/dist/'+binaryReleaseFilename+'/war')
	warDir.mkdirs()
	from("build/libs")
	into warDir
}

task prepRelease(type: Copy) {
	ext.releaseDirName = file('build/dist/'+binaryReleaseFilename)
	from("."){
		include 'config/**'
	}
	into releaseDirName
}

task makeRelease(type: Zip) {
	baseName = binaryReleaseFilename
	version = ""
    from file('build/dist/'+binaryReleaseFilename)
}
copyWar.dependsOn build
prepRelease.dependsOn copyWar
makeRelease.dependsOn prepRelease