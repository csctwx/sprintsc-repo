<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:cdm="http://integration.sprint.com/v2/common/CanonicalDataModel.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://integration.sprint.com/v2/common/CanonicalDataModel.xsd" elementFormDefault="qualified" attributeFormDefault="unqualified" version="2.14">
	
<!--Canonical Data Model Version 2 Publication 015: updated salesChannelId from 8 to 20 length-->
	
<xs:element name="abaRoutingNumber" type="cdm:AbaRoutingNumberType">
		
<xs:annotation>
			
<xs:documentation>American Bankers Association Routing Number primary purposes are:

(a) to identify the bank which is responsible to either pay or give credit or is
entitled to receive payment or credit for a financial transaction, and

(b) to provide a reference to a designated presentment point of the bank at
which the transaction can be delivered or presented.

The Routing Number is intended primarily to serve the needs of sending or collecting
institutions by providing the capability for transactions to be transmitted and delivered for settlement in an efficient and timely manner with minimal processing and float costs to sending or collecting banks and payment system participants in general. In certain cases, special classes of routing numbers have been defined to facilitate either the presentment or processing of certain payment transactions.

Receiving or paying banks may use the routing number to enhance the efficiency of their payment processing operations or services provided to their customers so long as these enhancements do not significantly increase check collection costs or delay collection of a significant number of items or dollars.

The routing number serves a secondary purpose for most items/transactions by
identifying the Federal Reserve office serving the presentment point of the bank.
Therefore, the selection of the routing number to be assigned will be based on the location of the presentment point within a Federal Reserve district, territory or availability zone.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="accountHeirarchyMemberFlag" type="cdm:AccountHeirarchyMemberFlagType">
		
<xs:annotation>
			
<xs:documentation>Account Hierarchy Member Flag

Valid Values:
Y - Indicates the account belongs to a hierarchy of accounts. 
N – Otherwise.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="accountCode" type="cdm:AccountCodeType">
		
<xs:annotation>
			
<xs:documentation>Account Code is used to allocate processing costs back to the department for whom the processing was performed.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="accountTypeCode">
		
<xs:simpleType>
			
<xs:restriction base="cdm:AccountTypeCodeType">
				
<xs:maxLength value="20"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="activeExpiredCode" type="cdm:ActiveExpiredCodeType">
		
<xs:annotation>
			
<xs:documentation>The Active Expired Code is provided to limit the search for active and pending active or expired subscriptions on the account. The search defaults to all subscriptions if value not specified.

A - active, pending active
E - expired</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="actualOrderTotalCost">
		
<xs:annotation>
			
<xs:documentation>Actual Order Total Cost holds the total cost of the Order including taxes.  The format of the field is 999,999,999.99 rounded up two decimal places.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ActualOrderTotalCostType">
				
<xs:totalDigits value="14"/>
				
<xs:fractionDigits value="2"/>
				
<xs:pattern value="999,999,999.99"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="actualShipDate" type="cdm:SimpleDateType"/>
	
<xs:element name="actualShippingCost" type="cdm:ActualShippingCostType"/>
	
<xs:element name="actualShipmentDateTime" type="cdm:SimpleDateTimeType">
		
<xs:annotation>
			
<xs:documentation>The date and time the shipment actually occurred.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="actualShipmentMethodCode" type="cdm:ShipmentMethodCodeType">
		
<xs:annotation>
			
<xs:documentation>Actual Shipment Method Code identifies the shipment method actually used to ship the Items.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="actualShipmentRouteSegment" type="cdm:ShipmentRouteSegmentType"/>
	
<xs:element name="actualShipmentSegmentArrivalDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Actual Shipment Segment Arrival Date holds the calendar day the shipment arrived at the To Location of the Shipment Route Segment.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="actualShipmentSegmentArrivalTime" type="cdm:SimpleTimeType">
		
<xs:annotation>
			
<xs:documentation>Actual Shipment Segment Arrival Time holds the hour, minute and second of the Actual Shipment Segment Arrival Date the shipment arrived at the To Location.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="actualShipmentSegmentStartDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Actual Shipment Segment Start Date holds the calendar day the shipment began traversing the Shipment Route Segment.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="actualShipmentSegmentStartTime" type="cdm:SimpleTimeType">
		
<xs:annotation>
			
<xs:documentation>Actual Shipment Segment Start Time holds the hour, minute and second of the Actual Shipment Segment Startl Date the shipment  began traversing the Shipment Route Segment.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="actualTotalDollarsAtFinish">
		
<xs:annotation>
			
<xs:documentation>Actual Total Dollars At Finish holds the total dollar amount spent to complete the WORK EFFORT.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:decimal">
				
<xs:totalDigits value="14"/>
				
<xs:fractionDigits value="2"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="actualTotalHoursAtFinish" type="xs:decimal">
		
<xs:annotation>
			
<xs:documentation>Actual Total Hours At Finish holds the total number of hours expended to complete the WORK EFFORT.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="addressSequenceNumber" type="cdm:AddressSequenceNumberType">
		
<xs:annotation>
			
<xs:documentation>Address Sequence Number is used to identify the address to be updated, changed, or deleted.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="addressTypeCode" type="cdm:AddressTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Address Type Code distinguishes an address as either a Military address, Rural address, Street address, PO Box address or a Foreign address. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="addressValidationCode" type="cdm:AddressValidationCodeType">
		
<xs:annotation>
			
<xs:documentation>Code to indicate results of address validation.
0 = System unavailable
1 = Address was formatted and validated with different results
2 = Address was formatted and validated with same results
3 = Address was already formatted but was validated
4 = Address was already formatted and validated
5 = Address was formatted but could not be validated
6 = Address was already formatted and could not be validated
</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="addressValidationMessage">
		
<xs:annotation>
			
<xs:documentation>Will contain error message when validation of address was unsuccessful (validationCd = 0, 5 or 6)</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ErrorMessageType">
				
<xs:maxLength value="80"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="addressVerificationSystemDeliveryPointBarCode" type="cdm:AddressVerificationSystemDeliveryPointBarCodeType">
		
<xs:annotation>
			
<xs:documentation>Address Verification System Delivery Point Bar Code Addon contains the delivery point bar code add on and check digit from CODE ONE address verification software.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="addressVerificationSystemOverrideCode">
		
<xs:annotation>
			
<xs:documentation>Address Verificaton System Override Code is used to add an address that cannot be formatted into the exact same format as the address validation produces or to add an address if the address validation system is not available.

Values:
1 = TRUE -- Override the address verification system and add the address
0 = FALSE -- DO NOT override the address verification system. DO NOT add the address.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:AddressVerificationSystemOverrideCodeType">
				
<xs:length value="1"/>
				
<xs:enumeration value="0"/>
				
<xs:enumeration value="1"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="addressVerificationSystemRuralRouteTypeCode">
		
<xs:simpleType>
			
<xs:restriction base="cdm:AddressVerificationSystemRuralRouteTypeCodeType">
				
<xs:maxLength value="20"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="addressVerificationSystemReturnCode" type="cdm:AddressVerificationSystemReturnCodeType">
		
<xs:annotation>
			
<xs:documentation>Address Verification System Return Code holds the error or completion code returned from the address verification system.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="adjustmentReceiptTypeCode" type="cdm:AdjustmentReceiptTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Adjustment Receipt Type Code contains a value identifying the origin of the Adjustment.

Valid Values:
'1' -- Purchase Order Receipt
'2' -- Repair Vendor Receipt
'3' -- Brightpoint Receipt
'4' -- Cycle Count Adjustments
'5' -- Manual Inventory Adjustments
'6' -- Material Status Changes e.g.  damaged, hold, triage, etc
'7' -- VOI Ownership Transfer
'8' -- Return Warehouse Transfer</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="advancedShipmentNotificationId" type="cdm:AdvancedShipmentNotificationIdType"/>
	
<xs:element name="advancedShipmentNotificationLineId" type="cdm:AdvancedShipmentNotificationLineIdType"/>
	
<xs:element name="advancedShipmentNotificationLineQuantity" type="cdm:AdvancedShipmentNotificationLineQuantityType"/>
	
<xs:element name="advancedShipmentNotificationFromLocation" type="cdm:InventoryLocationType"/>
	
<xs:element name="advancedShipmentNotificationLine" type="cdm:AdvancedShipmentNotificationLineType">
		
<xs:annotation>
			
<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="advancedShipmentNotificationTypeCode" type="cdm:AdvancedShipmentNotificationTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Advanced Shipment notificaiton Type Code identifies the the data as either a Purchase Order or an Advanced Shipment Notification.

Valid values:
'P' =&gt; Purchase Order
'R' =&gt; RMA
'S' =&gt; Advanced Shipment Notification</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="affinityPartnerMembershipEffectiveFromDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Product Deployment Affinity Partner Membership Effective From Date contains the first calendar day the Subscriber's Affinity partner membership is associated with the specified Price Plan.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="affinityPartnerMembershipEffectiveThruDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Product Deployment Affinity Partner Membership Effective Thru Date contains the last calendar day the Subscriber's Affinity partner membership is associated with the specified Price Plan.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="affinityPartnerMemberId" type="cdm:PartyOtherIdValueType">
		
<xs:annotation>
			
<xs:documentation>Product Deployment Affinity Partner Identiier uniquely identifies an instance of Product Deployment Affinity Prtner within the context of the specified Product Deployment.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="affinityPartnerMember" type="cdm:AffinityPartnerMemberType">
		
<xs:annotation>
			
<xs:documentation>Product Deployment Affinity Partner Member holds the name and or membership identifier of an individual Subscriber particpating in an Affinity Partner program Price Plan.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="affinityPartnerMembershipIdentifier" type="cdm:PartyOtherIdentifierIdType">
		
<xs:annotation>
			
<xs:documentation>Affinity Partner Member Identifier holds the Subscriber's  Membership Identifier in the Affinity Partner program.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="affinityMembershipIdentifierNameFlag" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>AffinityMembership Identifier Name Code communicates identifies the Affinity Member instance </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="affinityPartnerMemberName" type="cdm:IndividualNameType">
		
<xs:annotation>
			
<xs:documentation>Affinity Partner Member Name  holds the name of the individual member in the Affinity Partner program.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="agreementEffectiveFromDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>The Agreement Effective From Date is the date the contract or agreement became effective. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="agreementEffectiveThruDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>The Agreement Effective Thru Date is the date the contract or agreement will be fulfilled. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="allocatedQuantity">
		
<xs:annotation>
			
<xs:documentation>Allocated Quantity represents the number of items (SKU) reserved for an order.  Only items in "Main" can be Reserved.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:AllocatedQuantityType"/>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="apartmentDesignator" type="cdm:ApartmentDesignatorType">
		
<xs:annotation>
			
<xs:documentation>Apartment Designator is an Address Component that holds a value identifying the address as an apartment. 

Examples:
"APT"
"UNIT"
Etc.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="apartmentNumber" type="cdm:ApartmentNumberType">
		
<xs:annotation>
			
<xs:documentation>Apartment Number is an Address Component that contains the identifier of the apartment within the context of a bilding's postal address.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="applicationError" type="cdm:ApplicationErrorType">
		
<xs:annotation>
			
<xs:documentation>Application Error is a text field provided by the responding application providing user-comprehensible error feedback.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="applicationErrorString" type="cdm:ApplicationErrorStringType">
		
<xs:annotation>
			
<xs:documentation>Application Error String is a text field provided by the responding application providing user-comprehensible error feedback.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="applicationFlexData">
		
<xs:annotation>
			
<xs:documentation>Application Flex Data contains application defined information.  It has a  maximum length of  1024.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ApplicationFlexDataType">
				
<xs:maxLength value="1024"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="applicationGroup">
		
<xs:annotation>
			
<xs:documentation>Application Group is a unique Application Id that identifies the application that generated the request.  The application that generated a request needs to be captured within the message context.  This helps in tracking the source of errors (when messages start arriving with flawed contents), and in reporting on system usage patterns (what apps are sending messages where).  In cases where the messaging system has been architected with clearly defined component naming conventions, it should be possible to take the originating requester’s ‘name’, and relate it back to a particular responsible party.  This is three-part name of which ApplGroup is just the first.  Alphanumeric only.  Should usually be a Sprint ApplID.  If there is no Applid assigned the EAI Development staff should be contacted to define a unique applicationGroup.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ApplicationGroupType">
				
<xs:maxLength value="10"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="applicationIdentifier">
		
<xs:annotation>
			
<xs:documentation>Application Identifier uniquely identifies an Application.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ApplicationIdentifierType">
				
<xs:maxLength value="3"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="applicationReference">
		
<xs:annotation>
			
<xs:documentation>Application Reference holds an application specific unique identifier that has its origin in some business process, like an ‘order number’.  For example, in an audit log it could be included, and used as a search criteria.  A particular application reference value may appear on a number messages if, for example, several transaction messages are generated in the process of completing the overall business process to which it is related.
This is a 1 - 24 character optional field, with no restriction as to content, beyond the requirement that values be text based.  Imbedded spaces and periods are acceptable
</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ApplicationReferenceType">
				
<xs:maxLength value="96"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="applicationUserId">
		
<xs:annotation>
			
<xs:documentation>Application User Identifier uniquely identifies the PARTY invoking the service.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:UserIdType">
				
<xs:maxLength value="64"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="approvedQuantity" type="xs:decimal">
		
<xs:annotation>
			
<xs:documentation>Approved Quantity holds the number items requiring approaval tha have been approved.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="areMoreAccountsIndicator" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>JRH 5/29/07: Deprecated.  Use MoreRecordsAvailableFlag.

Valid Values:
"T" (TRUE) when the number of account instances returned exceeds the specified maximum.  
"F" (FALSE) number of account instances returned within limits.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="areMoreInventoriedEquipmentImplementations" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>JRH 5/29/07: Deprecated.  Use MoreRecordsAvailableFlag.

Are more Inventoried Equipment Implementation Records

Valid Values:
"T" (TRUE) ) indicates more Inventoried Equipment Implementation Records exist that could not be returned in the reply.
"F" (FALSE) indicates there are no more  Inventoried Equipment Implementation Records to return.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="areMoreMarketingProgramEnrollments" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>JRH 5/29/07: Deprecated.  Use MoreRecordsAvailableFlag.

Are more Marketing Program Enrollment Records

Valid Values:
"T" (TRUE) ) indicates more marketing program enrollment records than what could be returned in the reply.
"F" (FALSE) indicates there are no more Marketing Program Enrollment records to return.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="areMoreMobileIdentificaitonNumberImplementations" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>JRH 5/29/07: Deprecated.  Use MoreRecordsAvailableFlag.

Are More Mobile Identification Number Implementation Records

Valid Values:
"T" (TRUE) ) indicates more Mobile Identification Number Implementation Records exist that could not be returned in the reply.
"F" (FALSE) indicates there are no more Mobile Identification Number Implementation Records to return.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="areMoreNetworkAccessDeviceAssignments" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>JRH 5/29/07: Deprecated.  Use MoreRecordsAvailableFlag.

Are More Network Access Device Implementation Records

Valid Values:
"T" (TRUE) ) indicates more More Network Access Device Implementation Records exist that could not be returned in the reply.
"F" (FALSE) indicates there are no more More Network Access Device Implementation Records to return.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="areMorePricePlanDeployments" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>JRH 5/29/07: Deprecated.  Use MoreRecordsAvailableFlag.

Are More Price Plan Deployment Records

Valid Values:
"T" (TRUE) ) indicates more More Price Plan Deployment Records exist that could not be returned in the reply.
"F" (FALSE) indicates there are no more More Price Plan Deployment Records to return.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="attentionText" type="cdm:AttentionTextType">
		
<xs:annotation>
			
<xs:documentation>Attention Text of the mailing address.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="authenticationCertificate" type="cdm:AuthenticationCertificateType"/>
	
<xs:element name="authenticationKey" type="cdm:AuthenticationKeyType">
		
<xs:annotation>
			
<xs:documentation>The Authentication Key (A-Key) for over the air activation. A 26 character key used to authenticate a handset.                              
The first twenty decimal digits are used for the A-key as converted from the 64 bit A-key.  If the A-key is less than 20 decimal digits, it shall be padded with zero's.  The A-key checksum shall be 6 decimal digits as converted from the 18 bit checksum.  If the checksum is less than 6 decimal digits it shall be padded with zeros.
</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="availableForSaleFlag">
		
<xs:annotation>
			
<xs:documentation>Flag that indicates whether the item is still available for sale or if it has been discontinued.
Will be "Y" if it is available for sale.
Will be "N" if it is NOT available for sale.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:length value="1"/>
				
<xs:enumeration value="Y"/>
				
<xs:enumeration value="N"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="availableQuantity">
		
<xs:annotation>
			
<xs:documentation>Available Quantity represents the Onhand Quantity minus the Restricted Quantity minus the Allocated Quantity.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:integer">
				
<xs:totalDigits value="10"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="backorderedQuantity">
		
<xs:annotation>
			
<xs:documentation>Back Ordered Quantity holds the number of items on backorder.                                                                 Back Ordered Quantity should be equal to or less than Order Item Quantity.  If no items are backordered Back Ordered Quantity will be set to zero.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:integer">
				
<xs:totalDigits value="10"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="backOrdersAcceptedFlag" type="cdm:BackOrdersAcceptedFlagType">
		
<xs:annotation>
			
<xs:documentation>Back Orders Accepted Flag contains the Customer's designationas to whether they allow back orders when completeShipmentRequiredFlag equals 'N', Individual ordered items from an single Order may be shipped .

Values:
'Y' =&gt; Yes, back orders are allowed.
'N' =&gt; No, back orders are NOT allowed. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="backOrderFlag">
		
<xs:annotation>
			
<xs:documentation>Back Order Flag inidcates whether the specified Inventory Item is in stock and available for shipment or out of stock and not available for shipment.

Valid Values:
"Y" - Item is out of stock, shipment not allowed
"N" - Item is in stock, shipment allowed</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:BackOrderFlagType">
				
<xs:length value="1"/>
				
<xs:enumeration value="Y"/>
				
<xs:enumeration value="N"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="backFlushFlag" type="xs:string"/>
	
<xs:element name="bankAccountNumber" type="cdm:AccountNumberType">
		
<xs:annotation>
			
<xs:documentation>The Bank Account Number is a number that identifies a monetary account with a banking institution recording the balance of money for a customer.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="batchHeaderDateTime" type="cdm:SimpleDateType"/>
	
<xs:element name="batchHeaderVersion" fixed="4">
		
<xs:annotation>
			
<xs:documentation>Batch Header Version is a numeric value used to identify the release of the Batch Header.

Values: 1-9999</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:integer">
				
<xs:totalDigits value="4"/>
				
<xs:fractionDigits value="0"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="batchId">
		
<xs:annotation>
			
<xs:documentation>Batch Identifier is assigned by the application to uniquely identify a file transfer</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="20"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="batchSeqNbr" type="xs:date">
		
<xs:annotation>
			
<xs:documentation>Batch Sequence Number identifies the processing order the file within a Batch of files.  For example,  a File Transfer broken into 5 pieces NbrBatches=5 and BatchSeqNbr=1-5</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="batchRecordId">
		
<xs:annotation>
			
<xs:documentation>Batch Record Identifier contains a numeric value that uniquely identifies a a Bulk Message transaction record within the context of a Bulk Message Batch Identifier value.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:BatchRecordIdType">
				
<xs:totalDigits value="20"/>
				
<xs:fractionDigits value="0"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="billingAccount" type="cdm:BillingAccountType">
		
<xs:annotation>
			
<xs:documentation>Billing Account holds the data describing a BILLING ACCOUNT.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="billingAccountEstablishedDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Billing Account Established Date holds the calendar day the Billing Account was created and available to accept liability.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD

range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="billingAccountContactMethod" type="cdm:BillingAccountContactMethodType">
		
<xs:annotation>
			
<xs:documentation>Billing Account Contact Method represents the list of possible methods to communicate with the BILLING ACCOUNT.  These methods include Telecommunication numbers, Electronic Addresses and Postal Addresses.  Thes methods fill various roles within the context of the BILLING ACCOUNT.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="billingAccountContactMethodId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Billing Account Contaact MEthod Identifier uniquely identifies the instance of Contact Methos and its purpose within the context of the BILLING ACCOUNT.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="billingAccountContactMethodEffectiveFromDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Billing Account Contact Method Effective from Date holds the first calendar day the Contact Method fills the specified purpose within the context of the BILLING ACCOUNT.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="billingAccountContactmethodEffectiveThruDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Billing Account Contact Method Effective from Date holds the last calendar day the Contact Method fills the specified purpose within the context of the BILLING ACCOUNT.

Elements declared to be of type date must follow this form: 
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="billingAccountContactMethodPurposeCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Billing Account Contact Method Purpose Code identifies the role the Contact Method fills within the context of the BILLING ACCOUNT.                                                                   Possible value:                                             "Billing Address"                                           "Report Destination Address"                          "External Account Administrator Contact Method"                                             "Sprint Customer Care Group Contact Method"  etc.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="billingAccountMdnImplementation" type="cdm:BillingAccountMdnImplementationType"/>
	
<xs:element name="billingAccountNumber">
		
<xs:annotation>
			
<xs:documentation>Billing Account Number uniquely identifies an instance of Billing Account used to accrue charges for invoicing.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:CustomerAccountNumberType">
				
<xs:maxLength value="10"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="billingAccountPartyRole" type="cdm:BillingAccountPartyRoleType">
		
<xs:annotation>
			
<xs:documentation>Billing Account Party Role holds data describing a PARTY filling a specific role within the context of a BILLING ACCOUNT.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="billingAccountPartyRoleId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Billing Account PartyRole Identifier uniquely identifies the instance of Party Role within the context of the specified BILLING ACCOUNT.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="billingAccountPartyRoleCode" type="cdm:PartyRoleCodeType">
		
<xs:annotation>
			
<xs:documentation>Billing Account Party Role Code identifies the Role the PARTY plays within the context of the specified BILLING ACCOUNT.

Possible values:
"ACCOUNT HOLDER"
"EXTERNAL ACCOUNT ADMINISTRATOR"
"AFFILIATE"
"SPRINT ACCOUNT ADMINISTRATOR"
"CM ACCOUNT ADMINISTRATOR"
"CSM ACCOUNT ADMINISTRATOR"
"SALES CHANNEL"
"CUSTOMER CARE REPRESENTATIVE"
etc.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="billingAccountPartyRoleEffectiveFromDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Billing Account Party Role Effective From Date holds the first calendar day the PARTY fills the role within the context of the BILLING ACCOUNT.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="billingAccountPartyRoleEffectiveThruDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Billing Account Party Role Effective Thru Date holds the last calendar day the PARTY fills the role within the context of the BILLING ACCOUNT.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="billingAccountPassword" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Billing Account Password contains the system access password the Account Holder or the External  Account Administrator used to gain entry into the system  in order to make changes to the Billing Account.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="billingAccountStatusCode">
		
<xs:annotation>
			
<xs:documentation>Billing Account Status Code holds the current state of the Billing Account

Valid states:
A -&gt; 'Active'
F -&gt; 'Final'
N -&gt; 'Non-Paid Disconnect'
W -&gt; 'Write Off'</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:length value="1"/>
				
<xs:enumeration value="A"/>
				
<xs:enumeration value="F"/>
				
<xs:enumeration value="N"/>
				
<xs:enumeration value="W"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="billingAccountStatusEffectiveFromDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Billing Account Status Effective From Date holds the first calendar day the status was assigned to the Billing Account.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="billingAccountSubscriptionAssignment" type="cdm:BillingAccountSubscriptionAssignmentType"/>
	
<xs:element name="billingAccountSubscriptionAssignmentEffectiveFromDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Billing Account Subscription Assignment Effective From Date holds the first calendar day the liability for the Subscription was assigned to the specified Billing Account.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="billingAccountSubscriptionAssignmentEffectiveThruDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Billing Account Subscription Assignment Effective Thru Date holds the last calendar day the liability for the Subscription was assigned to the specified Billing Account.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="billingAccountNameString">
		
<xs:annotation>
			
<xs:documentation>Billing Account Name String holds the name assigned to the billing account.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:PartyNameStringType">
				
<xs:maxLength value="60"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="billingSystemCode" type="cdm:BillingSystemCodeType">
		
<xs:annotation>
			
<xs:documentation>Billing System Code is used to specify which Billing System is responsible for providing billing for the specified MDN.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="billingSystemOrderNumber">
		
<xs:annotation>
			
<xs:documentation>Billing System Order Number uniquely identifies an instance of an ORDER within a specific billing system.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:OrderNumberType">
				
<xs:maxLength value="50"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="billOfLadingDocumentId" type="cdm:DocumentIdType">
		
<xs:annotation>
			
<xs:documentation>The Bill of Lading Document Identifer uniquely identifies an instance of a document.  A Bill of Lading is a document issued by a carrier acknowledging that specified goods have been received for conveyance to a named place for delivery to the consignee who is usually identified.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="billOfMaterialsFinishedKitQuantity" type="xs:decimal">
		
<xs:annotation>
			
<xs:documentation>Bill Of Materials Finished Kit Quantity holds the number of Kits that will be assembles in the specified Bill Of Materials.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="billOfMaterialsInstruction" type="cdm:BillOfMaterialsInstructionType"/>
	
<xs:element name="billOfMaterialsInstructionString" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Bill Of Materials Instruction contains the text describing how the components of the Bill Of Materials are to be assembled.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="billOfMaterialsMasterComponentCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Bill Of Materials Master Componentl Code identifies the level the Product falls within the Bill Of Materials hierarchy.

Valid Values:
'Master' =&gt; Top level BOM item
'Component' =&gt; BOM Component. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="billOfMaterialsComponenTypeCode" type="xs:string"/>
	
<xs:element name="billOfMaterialsInstructionId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Bill Of Material Instruction Identifier uniqel identifies an instance of Instruction within the context of a Bill Of materials.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="billOfMaterialsRequiredComponentQuantity" type="xs:decimal">
		
<xs:annotation>
			
<xs:documentation>Bill Of Materials Required Component Quantity holds the number of components required to assemble the specified Kit.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="billToAddressReference" type="cdm:ContactMethodIdType">
		
<xs:annotation>
			
<xs:documentation>Bill To Address Reference holds the postalAddressId of the Billing Address the Ship To Address is dependant upon.  In Inventory Logistics theis will be the concatenation of the I2mDS CUSTOMER_NUMBER and BILL_TO_REF.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="birthDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Birth Date contains the calendar month, day and year on which an Individual  was born.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="bomLevelCode" type="cdm:BomLevelType">
		
<xs:annotation>
			
<xs:documentation>Bill Of Materials Level Code identifies the Inventory Item as From or a To item in the Bill Of Materials.

0 matches to T - To Relationship, 
1 matches to F - From Relationship</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="bomFromToRelationshipCode" type="cdm:BomFromToRelationshipCodeType">
		
<xs:annotation>
			
<xs:documentation>BOM From To Relationship Code identifies the From To of the Inventory Item to other Inventory Items in a Bill Of Materials.

Values:
‘F’ - From Relationship - If Assembly and level is component.
‘T’ - To Relationship - If Assembly and level is Parent.
‘T’ - To Relationship - If Dis-Assembly and level is Component.
‘F’ - From Relationship - If Dis-Assembly and level is Parent</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="bulkExceptions" type="cdm:BulkExceptionsType"/>
	
<xs:element name="bulkHeader" type="cdm:BulkHeaderType"/>
	
<xs:element name="businessContact" type="cdm:BusinessContactType"/>
	
<xs:element name="businessInteraction" type="cdm:BusinessInteractionType">
		
<xs:annotation>
			
<xs:documentation>Business Interaction holds the details describing the EVENT when two Parties interact.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="businessInteractionContactTypeCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Business Interaction Contact Type identifies the type of contact that took place in the Business Interaction.                                                                                                        Examples:                                                    Face-To_face Communication                         Postal Correspondence                                   eMail Correspondence                                    Phone Communication                                   etc.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="businessInteractionPartyRoleCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Business Interaction Party Role Code identifies the role the PARTY plays within the context of a BUSINESS ITERACTION.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="businessInteractionPartyRoleEffectiveFromDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Business InteractionParty Role Effective From Date holds the first calendar day the PARTY fills the role within the Business Interaction.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="businessInteractionPartyRoleEffectiveThruDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Business InteractionParty Role Effective Thru Date holds the last calendar day the PARTY fills the role within the Business Interaction.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="businessInteractionPurpose" type="cdm:BusinessInteractionPurposeType"/>
	
<xs:element name="businessInteractionPurposeCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Business Interaction Purpose Type Code identifes a purpose served by the specifies BUSINESS INTERACTION instance.                                                                               Examples:                                                    Case Handoff Transaction                              Case Status Notification                                 Collection Treatment                                     Customer Service Call                                   Order Placement                                   Support Call                                                 Survey</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="businessInteractionWorkEffort" type="cdm:BusinessInteractionWorkEffortType">
		
<xs:annotation>
			
<xs:documentation>Business Interaction WorkEfforts contains the details of the association of a BUSINESS INTERACTION and a WORK EFFORT.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="businessInteractionWorkEffortDescription" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Business Interaction Work Efffort Description holds a brief description ot the association of a BUSINESS INTERACTION Interaction and a WORK EFFORT.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="carrier" type="cdm:CarrierType">
		
<xs:annotation>
			
<xs:documentation>Carrier represents a PARTY used to carry shipments.  For example, UPS.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="carrierShipmentMethod" type="cdm:CarrierShipmentMethodType">
		
<xs:annotation>
			
<xs:documentation>Carrier Shipment Method </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="cartonContainerId" type="cdm:ContainerIdType">
		
<xs:annotation>
			
<xs:documentation>A Carton Container Identifier uniquely identifies a specific type of packaging.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="case" type="cdm:CaseType"/>
	
<xs:element name="caseDescription" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Case Description holds the testual description of the CASE identifies by the Case Identifier.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="caseEndDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Case End Date contains the calendar day the CASE ended.  For example, in a Collection Case this would be the calendar day the Billing Account was taken out of Collections.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="caseId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Case Identifier uniquely identifies an instance of CASE.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="caseSensitiveFlag" type="cdm:CaseSensitiveFlagType">
		
<xs:annotation>
			
<xs:documentation>Case Sensitive Flag identifies whether or not a string of character input is case sensitive.

Values:
'Y' - Yes, the string is case sensitive.
'N' - No, the string is NOT case sensitive.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="caseStartDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Case Start Date contains the calendar day the CASE began.  For example, in a Collection Case this would be the calendar day the Billing Account was put into Collections.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="caseEndTime" type="cdm:SimpleTimeType">
		
<xs:annotation>
			
<xs:documentation>Case End Time holds the hour, minute and second within the calendar day identified in Case End Date the CASE ended.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="caseStartTime" type="cdm:SimpleTimeType">
		
<xs:annotation>
			
<xs:documentation>Case Start Time holds the hour, minute and second within the calendar day identified in Case Start Date the CASE began.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="cdmaNetworkDevice" type="cdm:CdmaNetworkDeviceType">
		
<xs:annotation>
			
<xs:documentation>CDMA Network Devices holds details desibing a Wireless Network Access Device that utilizes the CDMA network</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="cdmaNetworkServiceClassification" type="cdm:CdmaNetworkServiceClassificationType">
		
<xs:annotation>
			
<xs:documentation>CDMA Network Service Classification contains the details describing the types of Network Service available for Product categorization.

Examples of P2K Network Service Classification include:
Usage
Toll
Feature
etc.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="churnProbabilityRating" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Churn Probability Rating contains a value from 1-5 derived from the Customer Value Segment conversion of the column DECILE in the table MKIS.SUBS_CUST_SCORE_HIST. When the value is sent through EI the number is changed to:
1-2 Low propensity to churn, 
3 - Medium propensity to churn, 
4-5 High propensity to churn.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="cityName">
		
<xs:annotation>
			
<xs:documentation>City Name holds the textual string identifying a City.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:CityNameType">
				
<xs:maxLength value="40"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="collectionBehaviorDecisionCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Collection Behavior Decision Code</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="collectionCase" type="cdm:CollectionCaseType">
		
<xs:annotation>
			
<xs:documentation>A COLLECTION CASE is a type of CASE used to track collection  treatment activities involved in the collection of a CUSTOMER ACCOUNT receivable balance.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="collectionEffectiveFromDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="combinePickTicketsFlag" type="cdm:CombinePickTicketsFlagType">
		
<xs:annotation>
			
<xs:documentation>Combine Pick Tickets Flag identifies Sales Orders that may be combined with other Sales Orders into a single aggregated Shipment.

Values:
'Y' - Yes, the Sales Order may be combined with other Sales Order into a single Shipment. 
'N' - No, the Sales Order may NOT be combined with other Sales Orders into a single Shipment.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="communicationServiceAreaId">
		
<xs:annotation>
			
<xs:documentation>Communication Service Area Identifier uniquely identifies an instance of a geographic area (CSA) served by a communication service provider, which can be broken down into regional, metropolitan, district and smaller sections called ''leaves.''</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="10"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="communicationServiceAreaName" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Communication Service Area Name the name of a geographic area (CSA) served by a communication service provider, which can be broken down into regional, metropolitan, district and smaller sections called ''leaves.''</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="communicationTemplateCode">
		
<xs:annotation>
			
<xs:documentation>The communication template code identifies which template format will be used when communicating with a party.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="20"/>
				
<xs:enumeration value="Ship Confirm"/>
				
<xs:enumeration value="Confirm Order"/>
				
<xs:enumeration value="RMA Receipt"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="communicationTemplateVersion">
		
<xs:simpleType>
			
<xs:restriction base="cdm:VersionNumberType">
				
<xs:maxLength value="3"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="combinedDeliveriesAllowedFlag" type="cdm:CombinedDeliveriesAllowedFlagType">
		
<xs:annotation>
			
<xs:documentation>Combined Deliveries Allowed Flag contains the Customer's designation as to whether they allow deliveries to be combined into a single delivery or require separate deliveries.

Values:
'Y' =&gt; Yes, Combined Deliveries allowed (Default).
'N' =&gt; No, Combined Deliveries are NOT allowed.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="completeShipmentRequiredFlag">
		
<xs:annotation>
			
<xs:documentation>Complete Shipment Required Flag holds the Customer's designation as to whether they require the entire list of ordered items must be shipped or nothing is shipped.

Values:
'Y' =&gt; The entire list of ordered items from a single Order must be shipped in a single shipment.
'N' =&gt; Individual ordered items from an single Order may be shipped </xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:CompleteShipmentRequiredFlagType">
				
<xs:length value="1"/>
				
<xs:pattern value="Y"/>
				
<xs:pattern value="N"/>
				
<xs:enumeration value="Y"/>
				
<xs:enumeration value="N"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="componentGroup">
		
<xs:annotation>
			
<xs:documentation>Component Group identifies a major sub-group within the applicationGroup (like a project or sub-system).</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ComponentGroupType"/>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="componentId" type="cdm:ComponentIdType">
		
<xs:annotation>
			
<xs:documentation>Component Identifier uniquely identifies an instance of Component within the context of a Component Implementation.                                           Component Identifier identifeis the MDN, MSID, IMEI, SIM ID, Network Access Device, etc. implemented within th scope of the deployed Price Plan.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="componentImplementation" type="cdm:SubscriptionComponentImplementationType">
		
<xs:annotation>
			
<xs:documentation>PRODUCT DEPLOYMENT IMPLEMENTATION represents the itemized list of TELECOMMUNICATION EQUIPMENT, CUSTOMER FACING NETWORK SERVICES and NETWORK ADDRESSES (MDN. MSID, NAI, etc.) used to deliver the specified PRODUCT DEPLOYMENT.

In addition to the itemized list of current TELECOMMUNICATION EQUIPMENT, CUSTOMER FACING NETWORK SERVICES and NETWORK ADDRESSES used to  instantiated the specified PRODUCT DEPLOYMENT, PRODUCT DEPLOYMENT IMPLEMENTATION includes implementation history and future scheduled implementations.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="componentImplementationEffectiveFromDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Component Implementation Effective From Date contains the first calendar day the component was available for implementation within the specified Product deployment.  This date may be a future date. This date will never change.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="componentImplementationEffectiveFromTime" type="cdm:SimpleTimeType">
		
<xs:annotation>
			
<xs:documentation>Component Implementation Effective From Time contains the first hour, minute and second within the Component Implementation Effective From Date the component was available for implementation within the specified Product Deployment.  This will never change.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="componentImplementationEffectiveThruDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Component Implementation Effective Thru Date contains the last calendar day the component was available for implementation within the specified Product deployment.  This date will be NULL or future dated until the component is no longer available for implementation or has been replaced.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="componentImplementationEffectiveThruTime" type="cdm:SimpleTimeType">
		
<xs:annotation>
			
<xs:documentation>Component Implementation Effective Thru Time contains the last hour, minute and second within the Deployment Implementation Effective Thru Date the component was available for implementation within the specified Product Deployment.  This may be NULL or future dated.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="componentImplementationId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Componet Implementation Identifier uniquely identifies an instance of the implementation of a Componet within the context of a Subscription and its product Deployment.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="componentInventoryFacility" type="cdm:InventoryLocationType"/>
	
<xs:element name="componentInventoryFacilityId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Will always contain "Sprint".</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="componentName">
		
<xs:annotation>
			
<xs:documentation>Component Name identifies the actual software component within the componentGroup that is responsible for the message.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ComponentNameType"/>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="componentProduct" type="cdm:ProductType">
		
<xs:annotation>
			
<xs:documentation>Child Stock Keeping Unit </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="contactMethod" type="cdm:ContactMethodType">
		
<xs:annotation>
			
<xs:documentation>PARTY CONTACT METHOD represents the list of possible mechanisms that may be used to contact an instance of PARTY.

Examples:
Telephone Number
Pager Number
FAX Number
Street Address
Rural Route Address
Post Office Box
Email Address
IP Address
Web Address
Banner
Popup</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="contactMethodId" type="cdm:ContactMethodIdType">
		
<xs:annotation>
			
<xs:documentation>Contact Method Identifier uniquely identifies an instance of Contact Method within the context of a PARTY or FACILITY.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="contactMethodEffectiveFromDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Contact Method Effective From Date holds the first calendar day the Contact Method  is assigned to the specified PARTY or FACILITY.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="contactMethodEffectiveThruDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Contact Method Effective From Date holds the last calendar day the Contact Method  is assigned to the specified PARTY or FACILITY.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="contactMethodTypeCode">
		
<xs:annotation>
			
<xs:documentation>Contact Method Type Code uniquely identifies a  method that may be used to contact a PARTY, CUSTOMER ACCOUNT, SUBSCRIPTION, etc.

Values:
"Electronic Address"                  "Telecommunication Number"    "USPS Postal ADdress"</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ContactMethodTypeCodeType">
				
<xs:maxLength value="8"/>
				
<xs:enumeration value="SMS"/>
				
<xs:enumeration value="Email"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="contactMethodStatusCode" type="cdm:StatusCodeType">
		
<xs:annotation>
			
<xs:documentation>Contact Method Status Code holds a codified value identifying the status of  the Telecommunication, Postal Address or Electronic Address Contact Method for a PARTY or FACILITY.

Valid values:
'A' - Active
'I' - Inactive</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="contactPhoneNumber" type="cdm:NanpTelecomNumberType">
		
<xs:annotation>
			
<xs:documentation>Contact Phone Number holds the NPA, NXX and Line Number of atelecommunication number used to contact a Party</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="contactPhoneSequenceNumber" type="cdm:ContactMethodIdType">
		
<xs:annotation>
			
<xs:documentation>Contact phone sequence number.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="container" type="cdm:ContainerType">
		
<xs:annotation>
			
<xs:documentation>CONTAINER represents a more granular location residing within a FACILITY.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="containerId" type="cdm:ContainerIdType">
		
<xs:annotation>
			
<xs:documentation>CONTAINER represents a more granular location residing within a FACILITY.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="containerInventoryItem" type="cdm:ContainerInventoryItemType">
		
<xs:annotation>
			
<xs:documentation>Container Inventory Item associates an Inventory Container with the Inventory Items it contains.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="containerSkuItemQuantity" type="xs:decimal">
		
<xs:annotation>
			
<xs:documentation>The container SKU Item Quantity holds the total number of a specific SKU that is encapsulated within a specific package.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="containerItemQuantity" type="cdm:ContainerItemQuantityType">
		
<xs:annotation>
			
<xs:documentation>Container Item Quantity holds the total number of Items being shipped within this container.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="containerTypeCd" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Container ype Code contains a code value that identifies the kind of container identified by Container Identifier.                                                                    Valid Values:                       PALLET                              CARTON                                                                   Other possible Examples:      Self
File Drawer
Bin
Barrel
Room</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="contentTypeCode">
		
<xs:annotation>
			
<xs:documentation>Content Type Code is used to capture the particular syntax that is used for data articulation in the message.  Typically today it has been used with the value of “XML”</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ContentTypeCodeType">
				
<xs:maxLength value="8"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="contractAssentFlag" type="cdm:ContractAssentFlagType">
		
<xs:annotation>
			
<xs:documentation>The Contract Assent Flag indicates if the customer has assented to the contract.

Y - customer assent
N - customer did NOT assent</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="contractAssentEffectiveFromDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>The Contract Assent Effective From Date is the date of the contract assent or commitment.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="contractEffectiveFromDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Contract Effective From Date is the date on which the service begins.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="contractSatisfactionDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>ContractSatisfactionDate is the date on which a customer has fulfilled his obligation to the CONTRACT.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="costCenter" type="cdm:PartyIdType">
		
<xs:annotation>
			
<xs:documentation>Cost Center represents the internal Sprint organization supporting the CUSTOMER.

Cost Center are organizational entities that add to the cost of the organization, but only indirectly add to the profit of the company. Examples include Research and Development, Marketing and Customer service.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="countryName" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>International Standardization Organization Country Name</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="creationDateTime" type="cdm:SimpleDateTimeType"/>
	
<xs:element name="creditCheckRequiredFlag" type="cdm:CreditCheckRequiredFlagType">
		
<xs:annotation>
			
<xs:documentation>Credit Check Required Flag indicates whether the Customer Requires a Credit Check.

Values:
'Y' - Yes, Credit Check Required.
'N' - No, Credit Check is not required.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="creditClassAssignmentDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Credit Class Assignment Date is the date the current credit class value was assigned.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="creditClassCode">
		
<xs:annotation>
			
<xs:documentation>"Credit Class Code identifies the Customer's level of financial responsibility.   

For example, the Credit Class Code assignment determines what Products the Customer can purchase, how many Subscriptions they can be liable for, whether there is a required depsoit and the amount of the deposit, ec.."
</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="5"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="creditRestrictionCode" type="cdm:CreditRestrictionCodeType">
		
<xs:annotation>
			
<xs:documentation>Credit Restriction Code.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="customerAccountNumber" type="cdm:CustomerAccountNumberType">
		
<xs:annotation>
			
<xs:documentation>CustomerAccount Number uniquely identifies an instance of Customer Account.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="customerAccountPartyRoleCode" type="cdm:PartyRoleCodeType">
		
<xs:annotation>
			
<xs:documentation>Customer Account Party Role Code identifies the Role the PARTY plays within the context of the specified BILLING ACCOUNT.

Possible values:
"ACCOUNT HOLDER"
"EXTERNAL ACCOUNT ADMINISTRATOR"
"AFFILIATE"
"SPRINT ACCOUNT ADMINISTRATOR"
"CM ACCOUNT ADMINISTRATOR"
"CSM ACCOUNT ADMINISTRATOR"
"SALES CHANNEL"
"CUSTOMER CARE REPRESENTATIVE"
etc.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="customerAccountPartyRoleEffectiveFromDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Customer Account Party Role Effective From Date holds the first calendar day the PARTY fills the role within the context of the CUSTOMER ACCOUNT.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="customerAccountPartyRoleEffectiveThruDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Customer Account Party Role Effective Thru Date holds the last calendar day the PARTY fills the role within the context of the BILLING ACCOUNT.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="customerAccountPassword" type="cdm:PasswordType">
		
<xs:annotation>
			
<xs:documentation>Customer Account Password holds the string of characters the Customer designated as their password into the Account.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="customerAccountUserId" type="cdm:PartyOtherIdValueType">
		
<xs:annotation>
			
<xs:documentation>Customer Account User Identifier is the system login identifier for a Customer Account.  It may be a Mobile Identification Number assigned to the Account.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="customerAcquisitionCustomerServiceHotlineQueueFlag" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Customer Acquisition Customer Service Hotline Queue Flag

Possible Values:
TRUE =&gt;  The Mobile Identification Number Implementation is hotlined and there is a customer service hotline queued.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="customerAuthenticationCode" type="cdm:CustomerAuthenticationCodeType">
		
<xs:annotation>
			
<xs:documentation>Customer Authentication Code is returned from the Message Broker indicating whether the Customer is authenticated or not to use the CJV Web Services.

Values:
True - Customer Authenticated
False - Customer is not authenticated </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="customerContactRoleStatusCode" type="cdm:StatusCodeType">
		
<xs:annotation>
			
<xs:documentation>Customer Contact Status Role Code holds the  state of the of the Contact relationship between the Customer and the PARTY filling the Contact role.

Valid values:
'A' - Active
'I' - Inactive</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="customerId">
		
<xs:annotation>
			
<xs:documentation>Customer Identifier is a type of Party Identifier.  It uniquely identifies those PARTIES Sprint views as either a current purchaser of equipment and services or a potential purchaser of equipment and services.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:PartyIdType">
				
<xs:maxLength value="30"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="customerPartyRoleId" type="cdm:PartyRoleIdType">
		
<xs:annotation>
			
<xs:documentation>Customer Party Role Identifier  is the unique identifier of the instance of CUSTOMER PARTY ROLE where the PARTY fills the Contact role.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="customerProspectCode" type="cdm:CustomerProspectCodeType">
		
<xs:annotation>
			
<xs:documentation>Customer Prospect Code identifies the Customer as one that purchased equipment and services from Sprint or one that Sprint considers a good candidate to purchase equipment and services.

Customer Prospect Code Values:
'CUSTOMER’
'PROSPECT'</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="customerPurchaseOrderNumber">
		
<xs:annotation>
			
<xs:documentation>Customer Purchase Order Number holds the identifier of the Customer's internal Purchase Order.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:OrderNumberType">
				
<xs:maxLength value="30"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="customerSiteFacilityId">
		
<xs:annotation>
			
<xs:documentation>Customer Site Facility ID identifes a particular instance of a customer SHIP TO ADDRESS.
</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:FacilityIdType">
				
<xs:maxLength value="5"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="customerStatusCode" type="cdm:StatusCodeType">
		
<xs:annotation>
			
<xs:documentation>Customer Status Code identifies the Customer as an active or inactive Customer.

Values:
'I' - Inactive
'A' - Active</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="customerStockKeepingUnit">
		
<xs:annotation>
			
<xs:documentation>Customer Stock Keeping Unit represents the Customer's Inventory Stock Keeping Unit (SKU).  Stock Keeping Unit identifies a group of PRODUCT instances.  It could identify a handset Model and Model Number, a Kit or an accessory.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:StockKeepingUnitType">
				
<xs:maxLength value="20"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="customerTypeCode">
		
<xs:annotation>
			
<xs:documentation>Customer Type Code provides a mechanism for categorizing Customers within the context of various functionalities.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:CustomerTypeCodeType"/>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="customerValueProcessingMonth" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Customer Value Processing Month holds the calendar month (mm) of the most recent Customer Value Rating.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="customerValueProcessingYear" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Customer Value Processing Year holds the calendar year (ccyy) of the most recent Customer Value Rating</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="customerValueScoreRating" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Customer Value Score Rating contains a value from 5 - 1 derived from the Customer Value Segment conversion of the column REVNU_SCORE_DECILE from MKIS.SUBS_CUST_SCORE_HIST. When the value is sent through EI the number is changed: 5 - 5$, 1-1$.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="cutOffDateTime" type="cdm:SimpleDateTimeType">
		
<xs:annotation>
			
<xs:documentation>The cutOffDateTime is the date and time supplied so that all rows that are effective and not expired are returned based on this date and time. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="cycleCountClassificationCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Cycle Count Classification Code</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="defaultFrieghtCarrierID" type="cdm:PartyIdType"/>
	
<xs:element name="defaultPaymentAmount" type="cdm:DefaultPaymentAmountType">
		
<xs:annotation>
			
<xs:documentation>Default Payment Amount is the default payment to be deducted from the payment card.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="defaultPaymentFreightTermId" type="cdm:TermIdType">
		
<xs:annotation>
			
<xs:documentation>Default Payment Freight Term Identifier identifies the payment term to use for the Customer unless one is explicitly specified in the Order or Shipment. 

Values:
'P' - Prepaid
'C' - COD Order 
'O' - COD Order Cash Only</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="defaultShipmentMethodCode" type="cdm:ShipmentMethodCodeType">
		
<xs:annotation>
			
<xs:documentation>Default Shipment Method Code identifies the Shipment Method to be used by the Customer unless one is explicitly specified in an Order or Shipment.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="deliverable" type="cdm:DeliverableType">
		
<xs:annotation>
			
<xs:documentation>Deliverable describes the end product of a WORK REQUIREMENT for an internal project. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="deliverableId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Deliverable Identifier uniquely identifies an instance of DELIVERABLE.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="deliverableName" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Deliverable Name holds the textual identifier of the DELIVERABLE.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="deliverableDescription" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Deliverable Description</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="deliveryRouteNumber" type="cdm:DeliveryRouteNumberType">
		
<xs:annotation>
			
<xs:documentation>Delivery Route Number holds the idenifier assigned by the United States  Postal Service to designate a pre-set path taken by a Postal Delivery Person to deliver mail, usually to a rural area.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="deviceSerialNbrCd" type="cdm:DeviceSerialNbrCdType">
		
<xs:annotation>
			
<xs:documentation>Device Serial Number Code is a value that classifies a device serial number.

Possible values for deviceSerialType are:
E = CDMA Handset (ESN/MEID)
D = Handset Kit for Dual Mode
K = IDEN Handset Kit (model #)
S = Stand-Alone SIM
M = Stand-Alone Handset (only for handsets which need SIM but dont have as part of this SKU)
I = IMEI Handset (no need for SIM)
N = Serialized Accessory (other than SIMs)
A = Airave MacId

</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="deviceSerialNbr" type="cdm:DeviceSerialNbrType">
		
<xs:annotation>
			
<xs:documentation>Device Serial Number is a unique number that is embedded electronically by the manufacturer into a wireless communication device that identifies that individual unit.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="dialogReference">
		
<xs:annotation>
			
<xs:documentation>Dialog Reference is a 24 character required field, that should be unique within the scope of the EAI system.  Typical generation of this field will consist of the first eight characters of the MQSeries QManager name within which the message originated, followed by a hexadecimal representation of a binary high-resolution date/time stamp, or other system attribute that would be expected to be unique.  To maintain uniqueness, it is important that all MQSeries QManagers be named with names that are unique within the first eight characters.  External parties may elect to use other schemes to generate unique values, as long as they can be represented in text.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:DialogReferenceType">
				
<xs:maxLength value="24"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="dialogSubTypeCode" default="6">
		
<xs:annotation>
			
<xs:documentation>Dialog Subtype Code 

Values:
1=Business transaction; (what each calling application needs to send with a request)
2=internal transaction;
3=internal response;
4=business response; (what each calling application will receive with a reply)
5=System message  
6=Not Used

This value must be set on both the request and reply message LSprint BTs  If not need this value must be set to 6.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:DialogSubTypeCodeType">
				
<xs:length value="1"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="dialogTypeCode">
		
<xs:annotation>
			
<xs:documentation>Dialog Type Code is used to inform the receiving party of the sort of exchange that is being initiated.

Values:
"1’ = Oneway dialog; 
‘2’ = Request and Reply dialog</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:DialogTypeCodeType">
				
<xs:length value="1"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="district" type="cdm:PartyIdType">
		
<xs:annotation>
			
<xs:documentation>District represents the internal Sprint organization supporting the CUSTOMER.

District is a type of ORGANZATION representing an organizational subset of another ORGANIZATION.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="distributionCenterId" type="cdm:FacilityIdType">
		
<xs:annotation>
			
<xs:documentation>Distribution Center Identifier holds the Facility Identifier of a Warehouse.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="distributionOrderItem" type="cdm:DistributionOrderItemType">
		
<xs:annotation>
			
<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="distributionOrder" type="cdm:DistributionOrderType">
		
<xs:annotation>
			
<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="detailedErrorDescription">
		
<xs:annotation>
			
<xs:documentation>Detailed Error Description holds a detailed description of the error.  (P2K error text, Oracle error description, etc). The detail error description is not intended to be used by a business user.  It is for technical debugging purposes only.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ErrorDescriptionType">
				
<xs:maxLength value="4096"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="divison" type="cdm:PartyIdType">
		
<xs:annotation>
			
<xs:documentation>Division represents the internal Sprint organization supporting the CUSTOMER.

Will always be set to "85".  This is a People Soft DIVISION Code..

DIVISION is a type of ORGANZATION representing an organizational subset of another ORGANIZATION.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="documentException">
		
<xs:complexType>
			
<xs:sequence>
				
<xs:element name="documentExceptionConditionCode" type="xs:integer"/>
				
<xs:element name="documentExceptionReasonCode" type="xs:integer"/>
				
<xs:element name="documentExceptionTechInfo">
					
<xs:simpleType>
						
<xs:restriction base="xs:string">
							
<xs:maxLength value="4096"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				
<xs:element name="documentExceptionMessage1">
					
<xs:simpleType>
						
<xs:restriction base="xs:string">
							
<xs:maxLength value="4096"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				
<xs:element name="documentExceptionMessage2">
					
<xs:simpleType>
						
<xs:restriction base="xs:string">
							
<xs:maxLength value="4096"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
<xs:element name="driverLicenseExpirationDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>The Driver’s License Expiration Date is the date that the license is due to expire.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="driverLicenseStateCode" type="cdm:UspsStateAbbreviationType">
		
<xs:annotation>
			
<xs:documentation>The code that represents the state that issued the driver's license.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="earlyContractTerminationFee" type="cdm:TermDollarAmountType">
		
<xs:annotation>
			
<xs:documentation>Early Contract Termination Fee is the amount a Customer will owe if a contract or agreement is canceled before the fulfillment date. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="ediTradingPartnerID" type="cdm:PartyOtherIdValueType">
		
<xs:annotation>
			
<xs:documentation>Electronic Data Interchange Trading Partner Identifier uniquely identifies a PARTY Sprint consideres a Trading Partner that uses the  Electronic Data Interchange, EDI,  convention to exchange Inventory and Order data with Sprint.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="electronicAddressPurposeCode" type="cdm:PurposeCodeType">
		
<xs:annotation>
			
<xs:documentation>Electronic Address Purpose Code identifies what the Electronic Address is used for.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="electronicAddrContactMethod" type="cdm:ElectronicAddrContactMethodType">
		
<xs:annotation>
			
<xs:documentation>Electronic Address Contact Method holds data describing Electronic Contact Methods such as IP, emaill or Web address.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="electronicAddressString">
		
<xs:annotation>
			
<xs:documentation>ElectronicAddressString represents the character string of the electronic address.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ElectronicAddressStringType">
				
<xs:maxLength value="100"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="electronicAddressTypeCode" type="cdm:ElectronicAddressTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Electronic Address Type Code identifies the instance as one of the following:
1) Email Contact Method
2) Internet Protocol Address Contact Method
3) Web Address Contact Method</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="electronicBillingIndicator" type="cdm:ElectronicBillingIndicatorType">
		
<xs:annotation>
			
<xs:documentation> Electronic Billing Indicator is used to indicate whether or not the CUSTOMER has signed up for electronic billing.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="electronicSerialNumber" type="cdm:ElectronicSerialNumberType">
		
<xs:annotation>
			
<xs:documentation>Electronic Serial Number is a unique number that is embedded electronically by the manufacturer into a CDMA wireless communication device that identifies that individual unit. It can be represented in 11-digit decimal or 8-digit hexadecimal (HEX) format. Once ESNs are exhausted, MEIDs are embedded in devices to uniquely identify the device. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="electronicSerialNumberDec">
		
<xs:annotation>
			
<xs:documentation>Electronic Serial Number is a unique number that is embedded electronically by the manufacturer into a CDMA wireless communication device that identifies that individual unit. It can be represented in 11-digit decimal or 8-digit hexadecimal (HEX) format. Once ESNs are exhausted, MEIDs are embedded in devices to uniquely identify the device.   This is the 11 digit decimal representation.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:length value="11"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="electronicSerialNumberHex">
		
<xs:annotation>
			
<xs:documentation>Electronic Serial Number is a unique number that is embedded electronically by the manufacturer into a CDMA wireless communication device that identifies that individual unit. It can be represented in 11-digit decimal or 8-digit hexadecimal (HEX) format. Once ESNs are exhausted, MEIDs are embedded in devices to uniquely identify the device. This is the 8 digit hexidecimal representation.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:length value="8"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="emailProtocol" type="cdm:EmailProtocolType"/>
	
<xs:element name="emailAddressString">
		
<xs:annotation>
			
<xs:documentation>An email address consists of two parts, a username and a domain (or host) name with an at symbol ('@') separating them. The domain specifies which server the email should be delivered to and the username tells the server at that domain which mailbox to deposit the email into.
</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ElectronicAddressStringType">
				
<xs:maxLength value="100"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="enrollmentCancelReasonCode" type="cdm:EnrollmentCancelReasonCodeType">
		
<xs:annotation>
			
<xs:documentation>Reason code for removing a payment card enrollment.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="enrollmentTypeCode" type="cdm:EnrollmentTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Enrollment Type defines the type of payment card enrollment.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="enterpriseLoginId">
		
<xs:annotation>
			
<xs:documentation>Enterprise Login ID (ELID) is a single, standardized login identifier used across all of Sprint's major applications and systems, like the desktop, i-Connect, e-mail, Livelink, time entry, expense reporting, etc. </xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:UserIdType">
				
<xs:maxLength value="10"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="equipmentIdentifier" type="cdm:EquipmentIdentifierType">
		
<xs:annotation>
			
<xs:documentation>Equipment Identifier holds the network identifiers for either a CDMA Network Device or an Iden Network Device.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="errorMessageId">
		
<xs:annotation>
			
<xs:documentation>Unique error message id number.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:MessageIdentifierType">
				
<xs:totalDigits value="7"/>
				
<xs:fractionDigits value="0"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="errorMessageReferenceNumber">
		
<xs:annotation>
			
<xs:documentation>System generated error reference number.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:length value="7"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="errorMessageText">
		
<xs:annotation>
			
<xs:documentation>Textual description of the error message.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="60"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="errorMessageProcessing" type="cdm:ErrorMessageProcessingType">
		
<xs:annotation>
			
<xs:documentation>This record is returned only when there is an error that is preventing the processing of the request.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="errorProgramId">
		
<xs:annotation>
			
<xs:documentation>Error Program identifies the Program that generated the error message.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ProgramIdType">
				
<xs:maxLength value="24"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="errorSystem">
		
<xs:annotation>
			
<xs:documentation>Error System identifies the System that had the error.  (Ensemble, P2K, Lightbridge, etc).</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ErrorSystemType">
				
<xs:maxLength value="24"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="errorStatusCode">
		
<xs:annotation>
			
<xs:documentation>Error Code of status returned.  0 indicates success.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:StatusCodeType">
				
<xs:maxLength value="5"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="errorTransactionId">
		
<xs:annotation>
			
<xs:documentation>Error transaction ID holds the name of the transaction that generated the error message</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:TransactionIdType">
				
<xs:maxLength value="24"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="errorTypeCode" type="cdm:ErrorTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>The Error Type Code identifies the type of error transaction being processed.
For example:
ORD - Order
OLIN - Order Line Item Number
ESN - Electronic Serial Number
SKU - Stock Keeping Unit
MEID - Mobile Equipment ID
GEN - General Error</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="errorValueId">
		
<xs:annotation>
			
<xs:documentation>The Error Value Id holds the actual identifier of the error type being processed.  For example:

ORD - Order Number
OLIN - Order Line Item Number
ESN - Electronic Serial Number
SKU - Stock Keeping Unit
MEID - Mobile Equipment Id
GEN - General Error


If the error type code = GEN, then the value of 'General Error' will be placed in the errorValueId field.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ErrorValueIdType">
				
<xs:maxLength value="50"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="estimatedDeliveryDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Estimated Delivery Date holds the calendar date computed by adding the Customer's specified Transit Days to the Estimated Ship Date.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="estimatedFirstArrivalDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Estimated First Arrival Date holds the first calendar day the Shipment could arrive at its destination.   Derived by adding Intransit Days to the Shipment Date.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="estimatedLastArrivalDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Elements declared to be of type date must follow this form:  CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12
Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="estimatedOrderTotalCost">
		
<xs:annotation>
			
<xs:documentation>Estimated Order Total Cost holds the estimate for the total cost of the Order including taxes.  The format of the field is 999,999,999.99 rounded up two decimal places.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:decimal">
				
<xs:totalDigits value="12"/>
				
<xs:fractionDigits value="2"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="estimatedShipDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Estimated Ship Date contains the estimated calendar date of the shipment will leave the warehouse.  This may or may not be the same as the customer want date.
Elements declared to be of type date must follow this form:  CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12
Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="estimatedShipmentSegmentArrivalDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Estimated Shipment Segment Arrival Date holds the calendar day the shipment is scheduled to arrive at the To Location of the Shipment Route Segment.

Elements declared to be of type date must follow this form:  CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12
Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="estimatedShipmentSegmentArrivalTime" type="cdm:SimpleTimeType">
		
<xs:annotation>
			
<xs:documentation>Actual Shipment Segment Arrival Time holds the hour, minute and second of the Estimated Shipment Segment Arrival Date the shipment is scheduled to arrive at the To Location.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="estimatedShipmentSegmentStartDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Estimated Shipment Segment Start Date holds the calendar day the shipment is scheduled to begin traversing the Shipment Route Segment.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="estimatedShipmentSegmentStartTime" type="cdm:SimpleTimeType">
		
<xs:annotation>
			
<xs:documentation>Estimated Shipment Segment Startl Time holds the hour, minute and second of the Estimated Shipment Segment Start Date the shipment  is scheduled to begin traversing the Shipment Route Segment.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="estimatedTransitDays" type="cdm:TransitDaysType">
		
<xs:annotation>
			
<xs:documentation>Estimated Transit Days represents the estimated number of days from order placement to delivery and is used in planning shipments to the retail stores.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="evdoFlag" type="cdm:EvdoFlagType">
		
<xs:annotation>
			
<xs:documentation>EVDO Flag  is a boolean indicator of EVDO functionality support.

Values:
true  -&gt; Yes, EVDO functionality IS supported
false -&gt; No, EVDO functionality IS NOT supported</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="evdoRevAFlag" type="cdm:EvdoRevAFlagType">
		
<xs:annotation>
			
<xs:documentation>EVDO Rev A Flag is a boolean indicator of EVDO Revision A functionality support.

Values:
true  -&gt; Yes,EVDO Revision A functionality IS supported
false -&gt; No, EVDO Revision A functionality IS NOT supported</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="event" type="cdm:EventType">
		
<xs:annotation>
			
<xs:documentation>Event represents an occurrence that requires Sprint to perform WORK EFFORT(s) in response.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="eventId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Event Identifier uniquely identifies an instance of EVENT.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="eventEndDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Event End Date holds the calendar day the EVENT ended.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="eventEndTime" type="cdm:SimpleTimeType">
		
<xs:annotation>
			
<xs:documentation>Event End Time holds the hour, minute and second of the Event End Date the EVENT ended.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="eventPartyRole" type="cdm:BusinessInteractionPartyRoleType"/>
	
<xs:element name="eventStartDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Event Start Date holds the calendar day the EVENT began.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="eventStartTIme" type="cdm:SimpleTimeType">
		
<xs:annotation>
			
<xs:documentation>Event Start Time holds the hour, minute and second of the Event Start Date the EVENT began.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="eventStatusCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Event Status Code holds the current state of the event.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="eventTypeCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Event Type Code identifies the type of event.                                                         Possible Event Types:          Business Interaction             System Interaction</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="exceptionConditionCode">
		
<xs:annotation>
			
<xs:documentation>Exception Condition Code is the provider’s declaration of its success or failure in processing the submitted request.

Values:
0 = Successful completion, 
4 = Successful completion, but with a warning as to some unusual circumstance, 
8 = Error, request was not processed successfully, 
12 = Severe error, represents a failure that could indicate a major system irregularity</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:integer">
				
<xs:totalDigits value="2"/>
				
<xs:fractionDigits value="0"/>
				
<xs:enumeration value="0"/>
				
<xs:enumeration value="4"/>
				
<xs:enumeration value="8"/>
				
<xs:enumeration value="12"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="exceptionDetail" type="cdm:ExceptionDetailType"/>
	
<xs:element name="exceptionMessage1">
		
<xs:annotation>
			
<xs:documentation>Exception Message 1 contains text provided by the responding application providing user-comprehensible error feedback.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="4096"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="exceptionMessage2">
		
<xs:annotation>
			
<xs:documentation>Exception Message 2 holds text provided by the responding application providing user-comprehensible error feedback.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="4096"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="exceptionReasonCode">
		
<xs:annotation>
			
<xs:documentation>Exception Reason Code holds a code value that identifies the reason for the exception.  It is required when Exception Condition Code contains a non-zero value.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:integer">
				
<xs:totalDigits value="4"/>
				
<xs:fractionDigits value="0"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="exceptionRecordId">
		
<xs:annotation>
			
<xs:documentation>Exception Record Identifier uniquely identifies the record in the envelop producing the exception.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:integer">
				
<xs:totalDigits value="4"/>
				
<xs:fractionDigits value="0"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="exceptionTechInfo">
		
<xs:annotation>
			
<xs:documentation>Exception Technical Information is a text field provided by the responding application providing error feedback that may be required by technical staffers.  </xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="4096"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="expectedFreightPaymentMethodCode" type="cdm:PaymentMethodCodeType">
		
<xs:annotation>
			
<xs:documentation>Expected Freight Payment Method Code</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="exportControlClassificationNumber" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Export Control Classification Number</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="exportLicenseNumber" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Export License Number uniquely idenifies granted by the US Bureau of Industry and Security.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="exportLicenseExpirationDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Export License Expiration Date holds the last calendar day the  Export License granted by the US Bureau of Industry and Security.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="externalRetailStoreId" type="cdm:FacilityIdType">
		
<xs:annotation>
			
<xs:documentation>External Retail Store Identifier  holds the Facility Identifer that uniquely identifies a store of an external Customer such as Wal Mart or Best Buy.  May be printed on the label when shiping to a Distribution Center.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="externalSystemReferenceNumber" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>The external system reference number is a unique number within the external system that is passed to Sprint and used for cross reference purposes.  This number is passed from Sprint back to the external system to help the external system identify an instance of a particular record in that system.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="externalSystemUserId" type="cdm:ExternalSystemUserIdType">
		
<xs:annotation>
			
<xs:documentation>External System User Identifier contains the identifier of the person as defined in an external system.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="facility" type="cdm:FacilityType">
		
<xs:annotation>
			
<xs:documentation>FACILITY represents a physical structure,  building, warehouse, plant office, etc established to serve a particular purpose.

Sprint Examples:
Sprint Store
Customer Care Call Center
Point Of Presence (POP)
Fiber Optic Regenerator Site (REGEN)
Internet Center
Training Center
Technical Operational Center
Operations Center
Warehouse                          SubInventory                     etc.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="facilityContactMethod" type="cdm:FacilityContactMethodType">
		
<xs:annotation>
			
<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="facilityContactMethodEffectiveFromDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Facility Contact Method Effective From Date holds the first calendar day the CONTACT METHOD is available for the FACILITY.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="facilityContactMethodEffectiveThruDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Facility Contact Method Effective Thru Date holds the last calendar day the CONTACT METHOD is available for the FACILITY.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="facilityContactMethodId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Facility Contact Method Identifier uniquely identifies a CONTACT METHOD within the context of a FACILITY..</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="facilityContainer" type="cdm:FacilityContainerType">
		
<xs:annotation>
			
<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="facilityDescription" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Facility Description holds a brief description of the FACILITY.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="facilityId" type="cdm:FacilityIdType">
		
<xs:annotation>
			
<xs:documentation>Facility Identifier uniquely identifies an instance of FACILITY.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="facilityName" type="cdm:FacilityNameType">
		
<xs:annotation>
			
<xs:documentation>Facility Name holds the name of the FACILITY.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="facilityPartyRole" type="cdm:FacilityPartyRoleType"/>
	
<xs:element name="facilityPartyRoleCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Inventory Facility Party Role Code identifies the role the PARTY fills within the context of the Inventory Facility.

Possible values:
LOGICAL DISTRIBUTION CENTER
PARENT ORGANIZATION
COMPANY
DIVISION
INVENORY LOCATION
etc.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="facilityPartyRoleEffectiveFromDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Facility Party Role Effective From Date holds the first calendar date the Inventory Party Role is available for use.  This may be a future date.
Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="facilityPartyRoleEffeciveThruDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Facility Party Role EffectiveThru Date holds the last calendar date the Inventory Party Role is available for use.  This may be NULL or a future date.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="facilitySystemEntryDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Facility System Entry Date represents the date the information describing the FACILITY was entered into  a Sprint System.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="facilityStatusCode" type="cdm:StatusCodeType">
		
<xs:annotation>
			
<xs:documentation>Facility Status Code holds the current state of the FACILITY in the System.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="facilityTypeCode" type="cdm:FacilityTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Facility Type Code identifies the type of FACILITY identified by the Facility Identifier.                                                                    Sprint Examples:
Sprint Store
Customer Care Call Center
Point Of Presence (POP)
Fiber Optic Regenerator Site (REGEN)
Internet Center
Training Center
Technical Operational Center
Operations Center
Warehouse                          SubInventory                     etc.                 </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="facilityTypeDescription" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Facility Type Description contains the textual description of the type of FACILITY identified by Facility Type Code.                                                                           Sprint Examples:
Sprint Store
Customer Care Call Center
Point Of Presence (POP)
Fiber Optic Regenerator Site (REGEN)
Internet Center
Training Center
Technical Operational Center
Operations Center
Warehouse                          SubInventory                     etc.                 </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="facilityTypeList" type="cdm:FacilityTypeListType">
		
<xs:annotation>
			
<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="fieldInError">
		
<xs:annotation>
			
<xs:documentation>Feld In Error holds the name of the field in error.  This should be a descriptive name such as Last Name or Street Address.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:FieldNameType">
				
<xs:maxLength value="35"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="fileTransferId">
		
<xs:annotation>
			
<xs:documentation>File Transfer Identifier is a value assigned by the application to uniquely identify the transfer.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="20"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="fileTransferType">
		
<xs:annotation>
			
<xs:documentation>File Transfer Type identifies the kind of transfer.

Values:
File-File;
File-Message;
Message-File</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="20"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="financialAccountNumber">
		
<xs:annotation>
			
<xs:documentation>Financial Account number is used to allocate processing costs back to departments for whom that processing was done.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:AccountNumberType">
				
<xs:maxLength value="24"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="firstName">
		
<xs:annotation>
			
<xs:documentation>First Name or "Given Name" is a name which specifies and differentiates between members of a group of individuals, especially a family, all of whose members usually share the same family name.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:FirstNameType"/>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="fixedAsset" type="cdm:FixedAssetType">
		
<xs:annotation>
			
<xs:documentation>Fixed Asset cotains the details describing a piece of equipment, machinery, vehicle or property. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="fixedAssetId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Fixed Asset Identifier uniquely identifies an instance of FIXED ASSET.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="fixedAssetName" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Fixed Asset Name</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="fleetId">
		
<xs:annotation>
			
<xs:documentation>Fleet Id is the second element of the DirectConnect UFMI number. The format of the UFMI number is: Urban User Id * Fleet Id * Member Id. Example 164*100*3441.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:FleetIdType">
				
<xs:maxLength value="7"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="formattedPostalAddressLines" type="cdm:FormattedPostalAddressLinesType">
		
<xs:annotation>
			
<xs:documentation>Formatted Postal Address Line holds the components of the postal address (StreetName, HouseNumber,ec.) in three lines formatted to USPS standards.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="fractionalStreetNumber" type="cdm:FractionalStreetNumberType">
		
<xs:annotation>
			
<xs:documentation>Fractional Street Number is a USPS Postal Address component that holds a fractional number that is added to the Street Number to identify an apartment at a Street Address.  For example, in "1231/2 mMain Street" the "1/2" would be stored in Fractional Street Number.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="frequencyModeCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Frequency Mode Code

Possible Values:
'A'  =&gt; AMPS
'C' =&gt; CDMA
'D' =&gt; CDMA and AMPS
'S' =&gt; ACCESSORY
'T' =&gt; TDMA</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="frequencyTypeCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Frequency Type Code

Possible Values:
'C'  =&gt; CELLULAR
'D' =&gt; PCS and CELLULAR
'K' =&gt; PCS WITH EVRC
'L' =&gt; PCS and CELLULAR WITH EVRC
'M' =&gt; HYBRID
'P' =&gt; PCS
'S' =&gt; ACCESSORY</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="frieghtCarrierBillingAccountNumber" type="cdm:CustomerAccountNumberType">
		
<xs:annotation>
			
<xs:documentation>Frieght Carrier Billing Account Number is the Billing Account Number used by the Frieght Carrier in those cases where the Frieght Carrier's shipping charges are paid by the customer instead of Sprint. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="freightCarrierDeterminesRoutingFlag" type="cdm:FreightCarrierDeterminesRoutingFlagType">
		
<xs:annotation>
			
<xs:documentation>Freight Carrier Determines Routing Flag  identifies whether the Shipment Method is chosen by the Freight Carrier of by the Customer.

'Y' - Freight Carrier determines Shipment Method
'N' - Customer determines Shipment Method</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="freightCarrierName">
		
<xs:annotation>
			
<xs:documentation>Freight Carrier Name contains the name of a PARTY who transports shipments. Examples would be: UPS and USPS.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:OrganizationNameType">
				
<xs:maxLength value="20"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="freightCharge" type="cdm:FreightChargeType">
		
<xs:annotation>
			
<xs:documentation>The freight charge is the carrier's published charge for shipping items of a specific type and is typically determined by freight class.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="freightPaymentTermId" type="cdm:TermIdType">
		
<xs:annotation>
			
<xs:documentation>Freight Payment Term Id uniquely identifies the payment term for an Order or Shipment. 

Values:
'P' - Prepaid
'C' - COD Order 
'O' - COD Order Cash Only</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="fromInventoryLocation" type="cdm:InventoryLocationType"/>
	
<xs:element name="fromWorkEffort" type="cdm:WorkEffortType">
		
<xs:annotation>
			
<xs:documentation>From Work Effort is the parent WORK EFFORT in a WORK EFFFORT ASSOCIATION such as  WORK EFFORT BREAKDOWN, WORK EFFORT PRECEDENCY or WORK EFFORT CONCURRENCY.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="genderCode">
		
<xs:annotation>
			
<xs:documentation>Gender Code identifies the PARTY as a Male or Female.

Values:
"M" - Male
"F" - Female</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:GenderCodeType">
				
<xs:length value="1"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="generalErrorDescription">
		
<xs:annotation>
			
<xs:documentation>General Error Description holds a short description of an error.  (No data found, Missing field, Invalid field, etc)</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ErrorDescriptionType">
				
<xs:maxLength value="50"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="globallyUniqueIdentifier" type="cdm:GloballyUniqueIdentifierType">
		
<xs:annotation>
			
<xs:documentation>Globally Unique Identifier (GUID) holds an internally generated identifier for the object. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="handsetAccessoryCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Handset Accessory Code identifies the product as a handset, accessory or both.
Values:
'H' =&gt; Handset
'A' =&gt; Accessory
'B' =&gt; Kit (Handset and Accessory)</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="harmonizedTariffCode"/>
	
<xs:element name="hierarchyRootIndicator" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Hierarchy Root Indicator identifies the BILLING ACCOUNT as a root node in an Account Hierarchy.                                                                 Valid values:                            "T" =&gt; TRUE, the billing Account is a Root Node             "F" =&gt; FALSE, the Billing Account is NOT a Root Node                 </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="highPerformancePushToTalkIdString" type="cdm:HighPerformancePushToTalkIdStringType">
		
<xs:annotation>
			
<xs:documentation>High Performance Push To Talk Identifier contains the concatenation of a user ID and a domain.The user ID can be 15 chars maximum and the domain can be 24 chars maximum so a total of 40 characters including ‘@’.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="highPriorityNoteFlag" type="cdm:HighPriorityNoteFlagType">
		
<xs:annotation>
			
<xs:documentation>Flag that indicates that a note is high priority or not.

Valid Values:
1 = TRUE (Indicates it is a high priority note.)
0 = FALSE (Indicates it is not a high priority note.)</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="i2EnterpriseCode" type="xs:string"/>
	
<xs:element name="i2ExtractRequiredFlag" type="cdm:I2ExtractRequiredFlagType">
		
<xs:annotation>
			
<xs:documentation>I2 Extract Required Flag identifies those CUSTOMER ORDER records that must always be extracted and sent to I2.  This is necessary so I2 can plan for the CUSTOMER.

I2 MDS i2 Interface Required Values: 
'Y' - Send and Wait
'N' - Send and Do Not Wait</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="idenFlag" type="cdm:IdenFlagType">
		
<xs:annotation>
			
<xs:documentation>IDEN Flag  is a boolean indicator of IDEN Network support.

Values:
true  -&gt; Yes, IDEN Network functionality IS supported
false -&gt; No, IDEN Network functionality IS NOT supported</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="identificationAnswer" type="cdm:IdentificationProofAnswerType">
		
<xs:annotation>
			
<xs:documentation>Identification Answer is the answer to the Identificaiton Proof Question supplied by the PARTY to be used as proof of identity in Password updates.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="identificationQuestion" type="cdm:IdentificationProofQuestionType">
		
<xs:annotation>
			
<xs:documentation>Identification Question holds an question that theoretically cna only be answered by the PARTY identified by the Login UserId  thus proving identity.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="idenNetworkDevice" type="cdm:IdenNetworkDeviceType">
		
<xs:annotation>
			
<xs:documentation>IDEN Network Device holds details describing the Network Access Devices utiling the IDEN network.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="IdmUserId" type="cdm:IdmUserIdType">
		
<xs:annotation>
			
<xs:documentation>IDM UserIdentifier holds a list System/Application User Identifiers.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="implementationEffectiveFromDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Implementation Effective From Date holds the first calendar day the implementation of a Newtork Access Device, Mobile Identification Number and Network Access Identifier in support of a Price Plan Deployments to the Subscription.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="implementationEffectiveFromTime" type="cdm:SimpleTimeType">
		
<xs:annotation>
			
<xs:documentation>Implementation Effective From Time holds the first hour, minute and second of the Implementation Effective From Date the implementation of a Newtork Access Device, Mobile Identification Number and or Network Access Identifier in support of a Price Plan Deployments to the Subscription.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="implementationEffectiveThruDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Implementation Effective From Date holds the last calendar day the implementation of a Newtork Access Device, Mobile Identification Number and Network Access Identifier in support of a Price Plan Deployments to the Subscription.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="implementationEffectiveThruTime" type="cdm:SimpleTimeType">
		
<xs:annotation>
			
<xs:documentation>Implementation Effective Thru Time holds the last hour, minute and second of the Implementation Effective From Date the implementation of a Newtork Access Device, Mobile Identification Number and or Network Access Identifier in support of a Price Plan Deployments to the Subscription.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inCollectionIndicator" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>In Collection Indicator identifies the BILLING ACCOUNT as an account in collections.

Valid values:
"T" =&gt; TRUE, the account is in Collections
"F" =&gt; FALSE the account is NOT in collections</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="individualName" type="cdm:IndividualNameType">
		
<xs:annotation>
			
<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="individualNameComponents" type="cdm:IndividualNameComponentsType">
		
<xs:annotation>
			
<xs:documentation>Individual Name Components consists of a sequence of the separate components of an Individual's name.   These components are: Last Name, Middle Name, First Name, Name Prefix, Name Suffix and Title.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="infoCellRegionId" type="cdm:GeographicBoundaryIdType">
		
<xs:annotation>
			
<xs:documentation>InfoCell Region Identifier holds an identifier of a geographic area used in the InfoCell System.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="infoCellWarehouseId" type="cdm:FacilityIdType">
		
<xs:annotation>
			
<xs:documentation>InfoCell Warehouse Identifier holds the unique identifier for an inventory FACILITY used in the InfoCell System.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="instruction" type="cdm:InstructionType">
		
<xs:annotation>
			
<xs:documentation>Instruction contains the data element details describing some type of instruction.  

Only 20 PIK and 20 PAK flags can be passed.  Any more will be ignored by the order management system.

Possible Instruction Types include:
Packing Instructions
Pick List Instructions</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="instructionSequenceNbr">
		
<xs:annotation>
			
<xs:documentation>Instruction Sequence Number holds a numeric value identifying the Instruction Text's ordinal position within a set of Instruction Text instances.  Instruction Sequence Number will increment with each occurrence of Instruction Text.  Instruction Sequence Number value is unique within the context of a set of Instuctions.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:InstructionSequenceNumberType">
				
<xs:totalDigits value="4"/>
				
<xs:fractionDigits value="0"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="instructionText">
		
<xs:annotation>
			
<xs:documentation>Instruction Text  holds the textual content of the instruction.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:InstructionTextType">
				
<xs:maxLength value="100"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="instructionTypeCode">
		
<xs:annotation>
			
<xs:documentation>Instruction Type Code Type categorizes the Instructions
Values:
Values are:
PIK - Pick List Instructions or Messages
PAK - Packing Slip Instructions or Messages</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:InstructionTypeCodeType">
				
<xs:maxLength value="4"/>
				
<xs:enumeration value="PIK"/>
				
<xs:enumeration value="PAK"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="integratedBillingParticipantFlag" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Integrated Billing Participant Flag</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="integratedBillingParticipantFromDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Integrated Billing Participant From Date holds the first calendar day the Billing Account participated in Integrated Billing.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="integratedBillingParticipantThruDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Integrated Billing Participant Thru Date holds the last calendar day the Billing Account participated in Integrated Billing.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="itemUnitCost" type="cdm:PriceComponentAmountType">
		
<xs:annotation>
			
<xs:documentation>Item Unit Cost is the current cost per unit.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="internationalMobileEquipmentIdDec">
		
<xs:annotation>
			
<xs:documentation>International Mobile Equipment Identfier is a wireless telecommunications term. An equipment identification number, similar to a serial numberi, used to identify a wireless network access device.

Length 15 characters.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:InternationalMobileEquipmentIdDecType">
				
<xs:length value="15"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="internationalMobileStationEquipmentIdDec">
		
<xs:annotation>
			
<xs:documentation>This element is deprecated due to misnaming.

Please use the International Mobile Equipment Identity Dec element

International Mobile Equipment Identifier is a wireless telecommunications term. An equipment identification number, similar to a serial numberi, used to identify a mobile station.

Length 15 characters.

</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:length value="15"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="internationalMobileSubscriberIdentity" type="cdm:InternationalMobileSubscriberIdentityType"/>
	
<xs:element name="internationalMobileSubscriberIdentityString" type="cdm:InternationalMobileSubscriberIdentityStringType">
		
<xs:annotation>
			
<xs:documentation>International Mobile Subscriber Identity holds a unique identifier allocated to each mobile subscriber in a GSM and UMTS network. It consists of a MCC (Mobile Country Code), a MNC (Mobile Network Code) and a MSIN (Mobile Station Identification Number).</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="internetProtocolAddressString">
		
<xs:annotation>
			
<xs:documentation>An Internet Protocol Address is the numerical address by which a location in the Internet is identified. Computers on the Internet use IP addresses to route traffic and establish connections among themselves.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ElectronicAddressStringType">
				
<xs:maxLength value="15"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="internetProtocolServiceTypeCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Internet Protocol Service Type Code identifies the deployed Product as a IP Basic service type, IP Feature service type or both service types.  If the service is a package, Internet Protocol Service Type Code will be set if any of its member services are IP Basic or IP Feature.

Valid Values:
B - IP Basic
F - IP Feature
C - Contains both IP Basic and IP Feature
Empty - is not IP Basic or IP Feature</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="internalRetailStoreID" type="cdm:FacilityIdType">
		
<xs:annotation>
			
<xs:documentation>Internal Retail Store Identifier holds the facility Identifier that uniquely identifies a Sprint retail Store.  If the Order Customer is an external store this element will be blank.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inTransitOrderSynchronization" type="cdm:InTransitOrderSynchronizationType">
		
<xs:annotation>
			
<xs:documentation>In Transit Orders</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inTransitDays">
		
<xs:annotation>
			
<xs:documentation>In Transit Days holds the number of days to add to the Shipment date to derive the Estimated Delivery Date.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:integer">
				
<xs:totalDigits value="2"/>
				
<xs:pattern value="1"/>
				
<xs:pattern value="2"/>
				
<xs:pattern value="3"/>
				
<xs:pattern value="4"/>
				
<xs:pattern value="5"/>
				
<xs:enumeration value="1"/>
				
<xs:enumeration value="2"/>
				
<xs:enumeration value="3"/>
				
<xs:enumeration value="4"/>
				
<xs:enumeration value="5"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="inventoryAdjustmentQuantity" type="xs:decimal">
		
<xs:annotation>
			
<xs:documentation>Inventory Adjustment Quantity holds the number of items to be adjusted up or down.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inventoryAdjustmentTypeCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Inventory Adjustment Type Cd                                                                      Values:                                                 A = Add Inventory (Increment)               S = Subtract Inventory (Decrement)</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inventoryFacility" type="cdm:InventoryFacilityType">
		
<xs:annotation>
			
<xs:documentation>Inventory Facility represents a Warehouse or Sub-Inventory of Sprint, or one of Sprint's Suppliers or Partners. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inventoryFacilityContactMethod" type="cdm:InventoryFacilityContactMethodType"/>
	
<xs:element name="inventoryFacilityPartyRole" type="cdm:InventoryFacilityPartyRoleType"/>
	
<xs:element name="inventoryAdjustmentTransaction" type="cdm:InventoryAdjustmentType">
		
<xs:annotation>
			
<xs:documentation>Inventory Adjustment Transaction contains the details of transactions that increase or descrease inventory.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inventoryAdjustmentOrder" type="cdm:InventoryAdjustmentOrderType">
		
<xs:annotation>
			
<xs:documentation>Inventory Adjustmenr Order contains the detail describing the Order and Order Item that prompted the Inventory Adjustment.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inventoryAdjustmentOrderItem" type="cdm:InventoryAdjustmentOrderItemType">
		
<xs:annotation>
			
<xs:documentation>Inventory Adjustment Order Item contains the details describing the Order Item and the Shipment Item that prompted the Inventory Adjustment.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inventoryAdjustmentShipment" type="cdm:InventoryAdjustmentShipmentType">
		
<xs:annotation>
			
<xs:documentation>Inventory Adjustment Shipment holds the details describing athe shipment that prompted the Inventory Adjustment.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="InventoryAdjustmentShipmentItem" type="cdm:InventoryAdjustmentShipmentItemType">
		
<xs:annotation>
			
<xs:documentation>Invnetory Adjustment Shipment Item holds the destails describing the Shipment Item and the associated Order Item that prompted the Inventory Adjustment.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inventoryFacilityPostalAddress" type="cdm:UspsPostalAddressType">
		
<xs:annotation>
			
<xs:documentation>Inventory Facility PostalAddress holds the details of the primary address of the INVENTORY FACILITY.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inventoryItem" type="cdm:InventoryItemType">
		
<xs:annotation>
			
<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inventoryItemIssuance" type="cdm:InventoryItemIssuanceType">
		
<xs:annotation>
			
<xs:documentation>Inventory Item Issuance represents the selection and removal of PRODUCT instances from an INVENTORY ITEM.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inventoryItemWeight" type="xs:decimal">
		
<xs:annotation>
			
<xs:documentation>Inventory Item Weight contains the weight in pounds of the Inventory Item.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inventoryItemVolume" type="xs:decimal">
		
<xs:annotation>
			
<xs:documentation>Inventory Item Volume contains the number of cubic inches of the volume of the Inventory Item. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inventoryLocation" type="cdm:InventoryLocationType">
		
<xs:annotation>
			
<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inventoryLocationAddress" type="cdm:UspsPostalAddressType"/>
	
<xs:element name="inventoryLocationTelecomContactMethod" type="cdm:TelecomNbrContactMethodType"/>
	
<xs:element name="inventoryOnHand" type="cdm:InventoryOnHandType">
		
<xs:annotation>
			
<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inventoryOnHandQuantity" type="xs:integer">
		
<xs:annotation>
			
<xs:documentation>Onhand Quantity represents the total number of items (SKU) located at the Warehouse or retail store.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inventoryRecommendation" type="cdm:InventoryRecommendationType">
		
<xs:annotation>
			
<xs:documentation>Inventory Recommendation communicates recommendations to create orders from I2 to OMIM for  retail store inventory replenishment, Order Approvals and kitting performance.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inventorySiteId" type="cdm:FacilityIdType">
		
<xs:annotation>
			
<xs:documentation>Inventory Site Identifier uniquely identifies a FACILITY where inventory is managed and stored.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inventorySiteName" type="cdm:FacilityNameType">
		
<xs:annotation>
			
<xs:documentation>InventorySite Name holds the name of the Inventory FACILITY</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inventorySiteTypeCode" type="cdm:FacilityTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Inventory Site Type Code the type of inventory FACILITY.

Valid values:
R-Sprint Retail Stores
P-Physical Distribution Center Code
L-Logical Distribution Center Code</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inventoryTransaction" type="cdm:InventoryTransactionType">
		
<xs:annotation>
			
<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inventoryTypeCode" type="cdm:InventoryTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Inventory Type Code 

Possible Values:
'F' =&gt; Finished Good
'R' =&gt; Raw Material</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inventoryWorkOrder" type="cdm:InventoryWorkOrderType">
		
<xs:annotation>
			
<xs:documentation>Inventory Work Order contains the the Order level details for the assembly or disassembly of Kits.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inventoryWorkOrderFulfillment" type="cdm:InventoryWorkOrderFulfillmentType">
		
<xs:annotation>
			
<xs:documentation>InventoryWork Order Fulfillment</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inventoryWorkOrderItemFulfillment" type="cdm:InventoryWorkOrderItemFulfillmentType">
		
<xs:annotation>
			
<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="inventoryWorkOrderProcessTypeCode" type="cdm:InventoryWorkOrderProcessTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Inventory Work order Process Type Code identifies the type of Bill Of Materials work required by teh Work Order.

Values:
'Assembly'
'Disassembly'</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="invoicedItemQuantity">
		
<xs:annotation>
			
<xs:documentation>The quantity of items that have been invoiced.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:InvoicedItemQuantityType">
				
<xs:totalDigits value="14"/>
				
<xs:fractionDigits value="4"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="invoiceItemCaption" type="cdm:InvoiceItemCaptionType">
		
<xs:annotation>
			
<xs:documentation>Invoice Caption is a descriptive phrase of the Product which appears on the invoice</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="iso2CharCountryCode">
		
<xs:annotation>
			
<xs:documentation>An International Standardization Organization, ISO, 2-Charater Country Code is the set of two characters that are assigned by the ISO to represent the name of a soverign nation.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:Iso2CharCountryCodeType">
				
<xs:length value="2"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="iso3CharCountryCode">
		
<xs:annotation>
			
<xs:documentation>An International Standardization Organization, ISO, 3-Character Country Code is the set of three characters that are assigned by the ISO to represent the name of a soverign nation.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:Iso3CharCountryCodeType">
				
<xs:length value="3"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="isoCountryName">
		
<xs:annotation>
			
<xs:documentation>International Stadards Organization Country Name holds the text string of the country's name identified by an International Stadards Organization Country Code.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:IsoCountryNameType">
				
<xs:maxLength value="50"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="job" type="cdm:WorkEffortType">
		
<xs:annotation>
			
<xs:documentation>Job represents a type of WORK EFFORT that would be a parent member of  WORK EFFORT BREAKDOWN Task instances..</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="jobTitle">
		
<xs:simpleType>
			
<xs:restriction base="cdm:JobTitleType">
				
<xs:maxLength value="40"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="Kit" type="cdm:ProductType">
		
<xs:annotation>
			
<xs:documentation>Parent Stock Keeping Unit</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="kitBillOfMaterials" type="cdm:KitBillOfMaterialsType">
		
<xs:annotation>
			
<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="kitComponent" type="cdm:KitComponentType">
		
<xs:annotation>
			
<xs:documentation>Kit Component contains the details describing the various Component Products of a Kit.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="kitInventoryFacility" type="cdm:InventoryLocationType"/>
	
<xs:element name="languageTypeCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Language Type Code idetneifies a langauge utilized by the specified PARTY.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="lastName">
		
<xs:annotation>
			
<xs:documentation>Last Name represents the family name or surname is the part of an INDIVIDUAL PARTY's name that identifies what family the individual belongs to. </xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:LastNameType"/>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="latitude" type="cdm:LatitudeType">
		
<xs:annotation>
			
<xs:documentation>Latitude is the angle at the center of the coordinate system between any point on the earth's surface and the plane of the equator.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="latitudeDegreeNumber" type="cdm:LatitudeDegreeNumberType">
		
<xs:annotation>
			
<xs:documentation>A Latitude Degree Number is the number between -180 and +180 that represents the relative position (expressed as degrees of arc) of a location with respect to the Equator (0) and the North Pole (+180) or South Pole (-180) of the planet Earth. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="latitudeMinuteNumber" type="cdm:LatitudeMinuteNumberType">
		
<xs:annotation>
			
<xs:documentation>A Latitude Minute Number is the  number that represents the relative North-South position of a location with respect to the closest latitudinal degree line that is nearer to the equator of the planet Earth (the base longitudinal line).  Each minute unit represents 1/60th of a degree of arc between the base latitudinal line and the latiitudinal line that is the next further away from the equator.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="latitudeNumber" type="cdm:LatitudeNumberType">
		
<xs:annotation>
			
<xs:documentation>Latitude Number is the concatenation of degrees, minutes and seconds that represent the angle at the center of the coordinate system between any point on the earth's surface and the plane of the equator.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="latitudeSecondNumber" type="cdm:LatitudeSecondNumberType">
		
<xs:annotation>
			
<xs:documentation>A Latitude Second Number is the  number that represents the relative North-South position of a location with respect to the closest latitudinal degree and minute line that is nearer to the equator of the planet Earth (the base latitudinal line).  Each second unit represents 1/60th of a minute of arc between the base latitudinal line and the latitudinal minute line that is the next further away from the equator but has the same latitudinal degree line as a base latitudinal line.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="loginAuthResultCode" type="cdm:StatusCodeType">
		
<xs:annotation>
			
<xs:documentation>Login Authentication Result Code holds the code value returned from the system communicating the success or failure of a Customer's attempt to login to their Account.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="loginAuthResultDesc" type="cdm:StatusDescriptionType">
		
<xs:annotation>
			
<xs:documentation>Login Authentication Result Description contains the textual description of the Login Authentication Result Code describing the success or failure of the Customer's attempt to login to their Account.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="loginUserId" type="cdm:UserIdType">
		
<xs:annotation>
			
<xs:documentation>Login User Identifier holds the system login userid assigned to a PARTY.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="longitude" type="cdm:LongitudeType">
		
<xs:annotation>
			
<xs:documentation>Longitude is the angle east or west, at the center of the coordinate system, between any point on the earth's surface and the plane of an arbitrary north-south line between the two geographical poles.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="longitudeDegreeNumber" type="cdm:LongitudeDegreeNumberType">
		
<xs:annotation>
			
<xs:documentation>A Longitude Degree Number is the number between -180 and +180 that represents the relative East-West position (expressed as degrees of arc) of a location with respect to the Prime Meridian (0) of the planet Earth where West is indicated by negative numbers and East by positive numbers.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="longitudeMinuteNumber" type="cdm:LongitudeMinuteNumberType">
		
<xs:annotation>
			
<xs:documentation>A Longitude Minute Number is the  number that represents the relative East-West position of a location with respect to the closest longitudinal degree line that is nearer to the prime meridian of the planet Earth (the base longitudinal line).  Each minute unit represents 1/60th of a degree of arc between the base longitudinal line and the longitudinal line that is the next further away from the prime meridian.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="longitudeNumber" type="cdm:LongitudeNumberType">
		
<xs:annotation>
			
<xs:documentation>Longitude Number is the concatenation of the degrees, minutes, and seconds that represent the angle east or west, at the center of the coordinate system, between any point on the earth's surface and the plane of an arbitrary north-south line between the two geographical poles.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="longitudeSecondNumber" type="cdm:LongitudeSecondNumberType">
		
<xs:annotation>
			
<xs:documentation>A Longitude Second Number is the  number that represents the relative East-West position of a location with respect to the closest longitudinal degree and minute line that is nearer to the prime meridian of the planet Earth (the base longitudinal line).  Each second unit represents 1/60th of a minute of arc between the base longitudinal line and the longitudinal minute line that is the next further away from the prime meridian but has the same longitudinal degree line as a base longitudinal line.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="lookupFailedFlag" type="cdm:LookupFailedFlagType">
		
<xs:annotation>
			
<xs:documentation>Lookup Failed Flag is used with the address validation, always false on get.  Value TRUE (TRUE = 1; FALSE = 0) if no tax authorities were found for the associated postalCd.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="mailAddressChangeFlag" type="cdm:AddressChangeFlagType">
		
<xs:annotation>
			
<xs:documentation>Flag to indicate if the Customer's mailing address is to be replaced with the newAddress.  
0=Do not change address
1=Change Mailing address with address in the newAddress record.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="manifestDocumentId" type="cdm:DocumentIdType">
		
<xs:annotation>
			
<xs:documentation>The Manifest Document Identifier uniquely identifies the manifest document.  A Manifest document is used to describe the contents of an entire shipment.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="manufacturer" type="cdm:ManufacturerType"/>
	
<xs:element name="manufacturerPartyId" type="cdm:PartyIdType">
		
<xs:annotation>
			
<xs:documentation>Manufacturer Party Identifier colds a value that uniquely identifies the Manufacturere of the specified PRODUCT.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="manufacturerName">
		
<xs:annotation>
			
<xs:documentation>Manufacturer Name</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:OrganizationNameType">
				
<xs:maxLength value="30"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="manufacturerSerialNumber">
		
<xs:annotation>
			
<xs:documentation>Manufacturer Serial Number is the manufacturer's electronic identifier for IDEN phones. Manufacturer Serial Number is a non-numeric string of alphabetic characters and decimal mumbers.

Length 10 character string.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ManufacturerSerialNumberType">
				
<xs:length value="10"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="manufacturerSerialNumberHex" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Deprecated, Do not use!

MSN is not a Hexidecimal value.

Manufacturer Serial Number Hexidecimal is deprecated.

Please use Manufacturer Serial Number.

Manufacturer Serial Number in Hexadecimal radix is the manufacturer's electronic identifier for IDEN phones.

Length 10 Hexadecimal.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="manufacturerSerialNumberDec" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Deprecated, Do not use!

MSN is not a Decimal value.

Manufacturer Serial Number Decimal is deprecated.

Please use Manufacturer Serial Number.

Manufacturer Serial Number in Decimal radix is the manufacturer's electronic identifier for IDEN phones.

Length 5 Decimal.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="manufacturerTypeCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Manufacturer Type Code categorizes the MANUFACTURER by type of PRODUCT they produce. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="manufacturerWirelessNetworkAccessDeviceModel" type="cdm:ManufacturerWirelessNetworkAccessDeviceModelType"/>
	
<xs:element name="marketingProgramEnrollment" type="cdm:MarketingProgramEnrollmentType">
		
<xs:annotation>
			
<xs:documentation>Marketing Program Enrollment</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="marketingProgramEnrollmentEffectiveFromDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Marketing Program Enrollment Effective From Date holds the firs calendar day of the enrollemnt of the Subscription in the Marketing Program.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="marketingProgramEnrollmentId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Marketing Program Enrollment Identifier</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="marketingProgramId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Marketing Program Identifier</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="masterShipmentId" type="cdm:ShipmentIdType">
		
<xs:annotation>
			
<xs:documentation>Master Shipment Identifier contains the unique master shipment number when the warehouse combines multiple orders into a single shipment.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="masterSubsidyLockCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Master Subsidy Lock (MSL)</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="maxQuantityAllowedPerOrderItem" type="cdm:MaxQuantityAllowedPerOrderItemType">
		
<xs:annotation>
			
<xs:documentation>Maximum Quantity Allowed Per Order Item holds the largest number of items that can be ordered on a single Order Line Item.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="maxSKUQuantityAllowedPerOrderItem">
		
<xs:annotation>
			
<xs:documentation>Maximum SKU Quantity Allowed Per Order Item contains the largest number of distinct models (SKU) allowed per Order Line Item.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="mediumAccessControlAddress" type="cdm:MediumAccessControlAddressType">
		
<xs:annotation>
			
<xs:documentation>Medium Access Control Address (MAC ID) contains a 12 byte hexadecimal value used to identify a device used in the IEEE sublayer of a network which controls access to the shared medium by network-attached devices. 

In the context of the OSI reference model, the Medium Access Control (MAC) layer extends above to the Data Link Layer and below to the Physical Layer.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="iccId" type="cdm:uicc">
		
<xs:annotation>
			
<xs:documentation>icc id contains a 20 byte decimal value used to identify a device in the LTE network.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="memberId">
		
<xs:annotation>
			
<xs:documentation>Member Id is the third element of the DirectConnect UFMI number. The format of the UFMI number is: Urban User Id * Fleet Id * Member Id. Example 164*100*3441.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:MemberIdType">
				
<xs:maxLength value="7"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="messageDateTime" type="cdm:MessageDateTimeType">
		
<xs:annotation>
			
<xs:documentation>Message Data Time Stamp holds the calendar Day and the hour, minute, second, micro-second the service was invoked.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="messageHeaderVersion" default="1">
		
<xs:annotation>
			
<xs:documentation>Message Header Version contains a numeric value, in the range of 1 to 9999, identifying the iteration of the Message header used.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:integer">
				
<xs:totalDigits value="4"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="messageId" type="cdm:MessageIdentifierType">
		
<xs:annotation>
			
<xs:documentation>Message Identifier uniquely identifies a message.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="messageSubType">
		
<xs:annotation>
			
<xs:documentation>The message subtype can be used to implement a system management vocabulary, which overrides the Service Name’s functional definition.  When used, a message sent with Service Name “Add Customer” is still routed to the same application destination, but when received, invokes processing determined by the message subtype rather than the usual processing associated with the Service Name.  Example P-Ping; R-Probe. etc</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:length value="1"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="middleName" type="cdm:MiddleNameType">
		
<xs:annotation>
			
<xs:documentation>Middle Name is effectively a second given name.  Many INDIVIDUAL PARTY's names include one or more Middle Names, placed between the first given name and the surname.   In the United States there is usually only one middle name, abbreviated by its possessor.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="mobileCountryCode" type="cdm:MobileCountryCodeType">
		
<xs:annotation>
			
<xs:documentation>Mobile Country Code holds a three digit number uniquely identifying a given country. It is utilized within the IMSI (International Mobile Subscriber Identity) and LAI (Location Area Identity).</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="mobileDirectoryNumber" type="cdm:NanpTelecomNumberType">
		
<xs:annotation>
			
<xs:documentation>Mobile Directory Number (MDN) is a dialable 10-digit NANP directory number assigned to address a wireless service subscriber.  The MDN is the access number for the subscriber's access service.  It is also used BILLING.

The MDN is meant to be changeable, as the ownership of the device may change hands, the owner may change telephone numbers, or the owner may change cities.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="mobileDirectoryNumberImplementation" type="cdm:MobileDirectoryNumberImplementationType">
		
<xs:annotation>
			
<xs:documentation>Mobile Directory Number Implementation represents the assignment of a MDN to a Subscription as part of the deployment and implementation of a Price Plan. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="mobileDirectoryNumberAssignmentFromDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Mobile Directory Number Assignment From Date holds the first calendar day the Mobile Directory Number was assigned to the specified wireless device.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="mobileDIrectoryNumberAssignmentThruDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Mobile Directory Number Assignment Thru Date holds the last calendar day the Mobile DIrectory Number was assigned to the specified wireless device.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="mobileEquipmentIdentifier" type="cdm:MobileEquipmentIdentifierType">
		
<xs:annotation>
			
<xs:documentation>A Mobile Equipment IDentifier (MEID) is a globally unique number for a  physical piece of mobile station equipment. Equipment identifiers are 'burned' into a CDMA device, and should be resistant to modification.  The ESN will migrate to the MEID with assignments anticipated to begin in the 2004 to 2005 timeframe. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="mobileEquipmentIdentifierDec" type="cdm:MobileEquipmentIdentifierDecType">
		
<xs:annotation>
			
<xs:documentation>A Mobile Equipment IDentifier (MEID) is a globally unique number for a physical piece of mobile station equipment. Equipment identifiers are 'burned' into a CDMA device, and should be resistant to modification.  The ESN will migrate to the MEID with assignments anticipated to begin in the 2004 to 2005 timeframe.   This is the 18 character decimal representation.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="mobileEquipmentIdentifierHex">
		
<xs:annotation>
			
<xs:documentation>A Mobile Equipment IDentifier (MEID) is a globally unique number for a  physical piece of mobile station equipment. Equipment identifiers are 'burned' into a CDMA device, and should be resistant to modification.  The ESN will migrate to the MEID with assignments anticipated to begin in the 2004 to 2005 timeframe.  This is the 14 character hexidecimal representation.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="14"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="mobileNetworkCode" type="cdm:MobileNetworkCodeType">
		
<xs:annotation>
			
<xs:documentation>Mobile Network COde holds a two or three digit number used to uniquely identify a given network from within a specified country (MCC (Mobile Country Code)). The MNC is used as part of the IMSI (International Mobile Subscriber Identity) and LAI (Location Area Identity) etc.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="mobileStationIdentificationNumber" type="cdm:MobileStationIdentificationNumberType">
		
<xs:annotation>
			
<xs:documentation>Mobile Station Identification Number (MSID) is the internal identifying number for a CDMA handset's phone number under Local Number Portability.  Mobile Station Identification Number stays with the carrier while the MDN stays with the customer. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="mobileStationIdentificationNumberImplementation" type="cdm:MobileStationIdentificationNumberImplementationType">
		
<xs:annotation>
			
<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="mobileStationIdentifierInventoryItem" type="cdm:MobileStationIdentificationNumberInventoryItemType">
		
<xs:annotation>
			
<xs:documentation>Mobile Station Identification Number (MSID) is the internal identifying number for a CDMA handset's phone number under Local Number Portability.  Mobile Station Identification Number stays with the carrier while the MDN stays with the customer. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="modelName">
		
<xs:annotation>
			
<xs:documentation>Model Name holds the Manufacturer's name for the class or model of  PRODUCT.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ModelNameType">
				
<xs:maxLength value="25"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="modelNumber">
		
<xs:annotation>
			
<xs:documentation>Model Number contains a unique value within the class of PRODUCT identified by Model Name used to identify the type of equipment being shipped by the Manufacturer. </xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="20"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="monthlyRecurringCharge">
		
<xs:annotation>
			
<xs:documentation>The base amount charged every month for a service</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:PriceComponentAmountType">
				
<xs:totalDigits value="14"/>
				
<xs:fractionDigits value="2"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="moreAddressRecordsAvailableFlag" type="cdm:MoreRecordsAvailableFlagType">
		
<xs:annotation>
			
<xs:documentation>A flag that indicates whether more addresses exist:

Valid Values:
1 = TRUE (Indicates more addresses exist that could not be returned in addressList.)
0 = FALSE (All addresses that exist were returned.)
</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="moreContactNumberRecordsAvailableFlag" type="cdm:MoreRecordsAvailableFlagType">
		
<xs:annotation>
			
<xs:documentation>A flag that indicates whether more contact numbers exist.

Valid Values:
1 = TRUE (Indicates more contact numbers exist that could not be returned in contactNumberList.)
0 = FALSE (All contact numbers that exist were returned.)
</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="moreNoteRecordsAvailableFlag" type="cdm:MoreRecordsAvailableFlagType">
		
<xs:annotation>
			
<xs:documentation>A flag that indicates whether more NoteInfo records exist

Valid Values:
1 = TRUE (Indicates more NoteInfo records exist that could not be returned.)
0 = FALSE (All NoteInfo records that exist were returned.)
</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="moreRecordsAvailableFlag">
		
<xs:annotation>
			
<xs:documentation>More Records Available Flag indicates that there are more records available for retrieval.  

Values:
TRUE = 1 (there are more records available for retrieval) 
FALSE = 0 (there are no more records available for retrieval)</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:MoreRecordsAvailableFlagType"/>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="moreTaxExemptionRecordsAvailableFlag" type="cdm:MoreRecordsAvailableFlagType">
		
<xs:annotation>
			
<xs:documentation>A flag that indicates whether more tax exemption records exist:

Valid Values:
1 = TRUE (Indicates more tax exemptions exist that could not be returned in taxExemptionList.)
0 = FALSE (All tax exemptions that exist were returned.)
</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="mqMessageHeader" type="cdm:MqMessageHeaderType"/>
	
<xs:element name="mqServiceName" type="cdm:MqServiceNameType">
		
<xs:annotation>
			
<xs:documentation>Service Names exist in one-to-one correspondence to the existing application contracts in place. 
In addition, in a system that seeks to create a logical network view based on function, this also is used to determine the destination for a message.  Service Name is required, and is composed of three parts:
• Service Group 1 – 4 characters, represents the major level classification for the service.   May or may not relate to a Sprint ApplID.
• Service Sub-group 1-10 characters, represents a mid-level classification for the service 
• Service Name description
1 – 12 characters, used as a short descriptive attribute.
These three components are concatenated, with period delimiters (e.g. “HR.EMPLEE.NEWHIRE”).  There should be no imbedded spaces or periods, with the first character of each node an alpha character.  All characters should be upper case.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="mqServiceQualifier" type="cdm:MqServiceQualifierType">
		
<xs:annotation>
			
<xs:documentation>ServiceName may be qualified to route to a speeific instance of a service.  For example, East or West for regionalized services.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="mqServiceVersion" type="cdm:MqServiceVersionType">
		
<xs:annotation>
			
<xs:documentation>Identifier that acts as a modifier to a serviceName.  Default is 1.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="naiAccessLevel" type="cdm:NaiAccessLevelType">
		
<xs:annotation>
			
<xs:documentation>NAI Access Level </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="naiPassword">
		
<xs:annotation>
			
<xs:documentation> NAI Password is the password associated with the Network Access Identifier (NAI).</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:PasswordType">
				
<xs:maxLength value="20"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="naiPasswordStatus" type="cdm:NaiPasswordStatusType">
		
<xs:annotation>
			
<xs:documentation>NAI Password Status contains the explanation of how the password was generated.
Valid Values are:
SystemGenerated
AccountGenerated
NAIGenerated</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="naiRealm" type="cdm:NaiRealmType">
		
<xs:annotation>
			
<xs:documentation>The NAI realm is the portion of the Network Access Identifier (NAI) that comes after the @ sign.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="naiReferenceIdentifer" type="cdm:NaiReferenceIdentifierType">
		
<xs:annotation>
			
<xs:documentation>The NAI Reference Identifer is used to reference a Network Access Identifer within a billing system.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="naiTemporaryLockIdentifier" type="cdm:NaiTemporaryLockIdentiferType">
		
<xs:annotation>
			
<xs:documentation>The NAI Temporary Lock Identifer is used to identify the temporary lock that is associated with a Network Access Identier.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="naiUserName" type="cdm:NaiUserNameType">
		
<xs:annotation>
			
<xs:documentation>The NAI User Name is the user name portion of the Network Access Identifer (NAI) that comes before the @ sign.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="namePrefix">
		
<xs:annotation>
			
<xs:documentation>Name Prefix represents the pre-nominal letters indicating a title of some kind placed placed before the name of a person as distinct from a post-nominal title which is placed after the name. Examples of pre-nominal titles, for instance professional titles.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:NamePrefixType">
				
<xs:maxLength value="10"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="namePurpose" type="cdm:NamePurposeType">
		
<xs:annotation>
			
<xs:documentation>Name Purpose holds the details describing names and their purposes.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="namePurposeEffectiveFromDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Name Purpose Effective From Date holds the first calendar day the name fills the specified purpose.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="namePurposeEffectiveThruDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Name Purpose Effective Thru Date holds the last calendar day the name fills the specified purpose.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="nameSuffix">
		
<xs:annotation>
			
<xs:documentation>Name Suffix holds any affix that may occurr at the end of the name of an INDIVIDUAL designating a dignity, honor, distinction, or preeminence attached to the INDIVIDUAL by virtue of rank, office, precedent, privilege, attainment, or lands.  For example, Jr, Sr, Esquire, I, II, III, etc.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:NameSuffixType">
				
<xs:maxLength value="10"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="nanpTelecomNumber" type="cdm:NanpTelecomNumberType">
		
<xs:annotation>
			
<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="networkAccessIdentifierString" type="cdm:NetworkAccessIdentifierStringType">
		
<xs:annotation>
			
<xs:documentation>Network Access Identifier holds the concatenation of the a user name and realm.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="networkAccessImplementation" type="cdm:NetworkAccessImplementationType">
		
<xs:annotation>
			
<xs:documentation>Network Access Implementation holds the network activation status, dates and times for the set of components constituting the implementation of the deployed Product.  These dates could change through the life of the implementated components due changes in the implementation status.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="networkAccessActivationFromDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Network Access Activiated From Date holds the first calendar day the set of implemented components were active on the network.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="networkAccessActivationFromTime" type="cdm:SimpleTimeType">
		
<xs:annotation>
			
<xs:documentation>Network Access Activiated From Time holds the first hour, minute and second within the Network Access Activation From Date the set of implemented components were active on the network.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="networkAccessActivationThruDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Network Access Activiated Thru Date holds the last calendar day the set of implemented components were active on the network.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="networkAccessActivationThruTime" type="cdm:SimpleTimeType">
		
<xs:annotation>
			
<xs:documentation>Network Access Activiated Thru Time holds the first hour, minute and second within the Network Access Activation Thru Date the set of implemented components were active on the network.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="networkAccessStatusCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Network Access Status Code holds the current network status for the set of  implemented components were active on the network.

Possible values:
'Active'
'Hotlined'
'Pending'
'Disconeected'</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="networkAccessStatusReasonCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Network Access Status Reason Code

Possible CDMA Hotline Reasons:
COLLECTIONS =&gt; Treatment Collections Background
THRESHOLD CR =&gt; Credit Imposed Threshold Pricing
THRESHOLD CLP =&gt; Threshold Clear-Pay
CUST SERVICE =&gt; Manual CACS Window
THRESHOLD PPB =&gt; Threshold PPB
THRESHOLD YTH =&gt; Threshold Youth
THRESHOLD PAYG =&gt; Threshold Pay As You Go
MIN SUSPEND =&gt; Friendly access number suspend
NAI HOTLINE =&gt; NAI hotline
NAI SUSPEND =&gt; NAI suspend
ACCT NPD =&gt; Account NPD</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="networkAccessStatusAssignmentDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Network Access Status Assignment Date holds the calendar day the status was assignmed to the Network Access Implementation.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="networkAccessStatusAssignmentTime" type="cdm:SimpleTimeType">
		
<xs:annotation>
			
<xs:documentation>Network Access Status Assignment Time holds the hour, minute and second of the Network Access Status Assignment Date the status was assignmed to the Network Access Implementation.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="networkIndicatorCode" type="cdm:NetworkIndicatorCodeType">
		
<xs:annotation>
			
<xs:documentation>Network Indicator Code specifies the network being used.  
I -&gt; iDEN
C -&gt; CDMA
B -&gt; Both</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="networkServiceClassificationBackdateFlag" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Network Service Classification Backdate Flag identifies those Network Service Classificaitons that may be backdated.

Values:
Y = Yes, can backdate 
N = No, cannot backdate 
NULL = Not Applicable</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="networkServiceClassificationCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Network Service Classification Code uniquely identifies an instance of Network Service Classification.

Possible Values:
TL(toll) 
AR(air)
LT(local toll)
CF(call forwarding)
CW(call waiting)
3W(3-way calling) 
BT(busy transfer) 
NA(no answer transfer)
HT(hotline number)
FR(followme roaming)
VD(voice mail deposit) 
VR(voice mail request)
MP(marketing program) 
TX(taxing)
DB(detail billing)</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="networkServiceClassificationDescription" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Network Service Classification Description contains the textual description of the Network Service Classification identified by the Network Service Classification Code.

Possible Values:
toll
air
local toll
call forwarding
call waiting
3-way calling
busy transfer
no answer transfer
hotline number
followme roaming
voice mail deposit
voice mail request
marketing program
taxing
detail billing</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="noteId">
		
<xs:annotation>
			
<xs:documentation>Note Identifier uniquely identifies an instance of NOTE.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:NoteIdType">
				
<xs:maxLength value="15"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="noteText">
		
<xs:annotation>
			
<xs:documentation>Text of the note.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:NoteTextType">
				
<xs:maxLength value="100"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="noteTypeCode" type="cdm:NoteTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Note Type Code uniquely identifies an instance of NOTE TYPE used to categorize a NOTE.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="npaNumber">
		
<xs:annotation>
			
<xs:documentation>Numbering Plan Area (NPA) Number is one of the geographical divisions of the United States, Canada, Bermuda, the Caribbean, Northwestern Mexico, Alaska, Hawaii, within which no two telephones will have the same seven-digit telephone number. (An NPA is represented by an Area Code.)</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:NpaNumberType">
				
<xs:length value="3"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="numberOfAccessLines" type="xs:decimal">
		
<xs:annotation>
			
<xs:documentation>Number Of Access Lines holds the count of the currently active access line numbers assigned to the Billing Account.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="numberOfBatchs">
		
<xs:annotation>
			
<xs:documentation>If the File is broken into multiple file due to size or other contraints this field should contain the total number of batches created</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="numberOfComponentsUsedQuantity" type="xs:decimal">
		
<xs:annotation>
			
<xs:documentation>Components Used Quantity holds the number of specified component Products used in the Kit.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="numberOfPickListItems" type="cdm:NumberOfPickListItemsType">
		
<xs:annotation>
			
<xs:documentation>Number Of Pick List Line Items holds the count of Pick List Line Items comprising the Pick List</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="nxxNumber">
		
<xs:annotation>
			
<xs:documentation>Network Numbering Exchange (NXX) Number represents the first three digits of the 7 digit phone number that identifies the specific telephone company central office which serves that number. These digits are referred to as the NXX where N can be any number from 2 to 9 and X can be any number. (NNX once upon a time was used to identify the local central office exchange. Now NNX has been changed to NXX, which allows local central offices to have numbers which look like area codes.)</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:NxxNumberType">
				
<xs:length value="3"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="oneTimeKeypadSubisidyLockCode">
		
<xs:annotation>
			
<xs:documentation>One Time Keypad Subsidy Lock (OTKSL)</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="4"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="openRmaOrder" type="cdm:OpenRmaOrderType">
		
<xs:annotation>
			
<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="openOrder" type="cdm:OpenOrderType">
		
<xs:annotation>
			
<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="openQuantity" type="xs:decimal">
		
<xs:annotation>
			
<xs:documentation>Open Quantity holds the  number of items requiring approval that have not yet been approved as of the current or system date.                                                  Open Quantity = Order Item Quantity minus the number of items previously approved.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="order" type="cdm:OrderType">
		
<xs:annotation>
			
<xs:documentation>Order holds the generic details describing an Order that apply to the following:
Sales Order
Purchase Order
Work Order. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="orderCancelDate">
		
<xs:annotation>
			
<xs:documentation>The date when the order was cancelled.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:OrderCancelDateType"/>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="orderCustomerCategoryCode" type="cdm:CustomerCategoryCodeType">
		
<xs:annotation>
			
<xs:documentation>Order Customer Category Code provides a mechnism to categorizes Customers.

There is a correlation between OrderCustomer Type and OrderCustomer Class.

Order Customer Category Code Value Range: 
'01' to '41'</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="orderCustomerClassCode" type="cdm:CustomerClassCodeType">
		
<xs:annotation>
			
<xs:documentation>Order Customer Class Code provides a mechanism to categorize Customers within various functionalities and other categories.

There is a correlation between Customer Type and Customer Class.

Order Customer Class Code Values:
B,BR,C,CB,CP,D,DC,DS,DT,E,EB,F,G,GN,H,I,J,K,L,M,N,ND,NI,O,OD,P,PR,Q, QB,R,S,SE,ST,T,TB,TR,V,W,X</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="orderCustomerTypeCode" type="cdm:CustomerTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Order Customer Type Code identifies the Customer as a reglar or internal Customer.

Defaults to 'R' - Regular Customer   

Values:
'I' - Internal Customer
'R' - Regular Customer  </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="orderEntryDate">
		
<xs:annotation>
			
<xs:documentation>Order Entry Date holds the date the Order was entered into the system.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:SimpleDateType"/>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="orderFulfillmentIteration">
		
<xs:annotation>
			
<xs:documentation>Order Fulfillment Iteration tracks the number of unique SHIPMENTS required to fulfill an individual ORDER ITEM. Example: The first shipment would be designated as 0001, the second shipment would be 0002 and so forth until all the quantity ordered has been shipped.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:OrderFulfillmentIterationType">
				
<xs:maxLength value="3"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="orderHistoryRetrievalDays">
		
<xs:annotation>
			
<xs:documentation>Time period in days for order history information retrieval.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:OrderHistoryRetrievalDaysType">
				
<xs:totalDigits value="4"/>
				
<xs:fractionDigits value="0"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="orderHoldReasonCode"/>
	
<xs:element name="orderItem" type="cdm:OrderItemType">
		
<xs:annotation>
			
<xs:documentation>Order Item holds the generic details describing an OrderItem that apply to all of the following:
Sales Order Item
Purchase Order Item
Work Order Item. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="orderItemavailableQuantity" type="cdm:OrderItemAvailableQuantityType">
		
<xs:annotation>
			
<xs:documentation>Order Item Available Quantity holds the number of the varous items specified in the ORDER ITEM.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="orderItemCancelQuantity">
		
<xs:annotation>
			
<xs:documentation>The quantity of items cancelled in the order.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:OrderItemCancelQuantityType"/>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="orderItemId">
		
<xs:annotation>
			
<xs:documentation>MRF 6/21/2007: DEPRECATED

Use orderLineItemNumber

Order Item Identifier  uniquely identifies an instance of ORDER ITEM within the scope of an ORDER.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:OrderItemIdType">
				
<xs:maxLength value="4"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="orderItemproduct" type="cdm:OrderItemproductType"/>
	
<xs:element name="orderItemQuantity">
		
<xs:annotation>
			
<xs:documentation>Order Item Quantity holds the total number of units of the specified Product ID ordered in the ORDER ITEM instance.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:integer">
				
<xs:totalDigits value="10"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="orderItemReturnReasonCode">
		
<xs:annotation>
			
<xs:documentation>Order Item Return Reason Code communicates the reason why the Return Kit was requested for the specified Order Item.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:OrderItemReturnReasonCodeType">
				
<xs:maxLength value="6"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="orderItemShipmentItem" type="cdm:OrderItemShipmentItemType">
		
<xs:annotation>
			
<xs:documentation>Order Item Shipment Item associates the details of an Order Item instance with the instance of Shipment Item transporting the Product items ordered.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="orderItemShipmentItemQuantity" type="xs:decimal">
		
<xs:annotation>
			
<xs:documentation>Order Item Shipment Quantity holds the number of items in the Shipment Item ordered in the specified Order Item.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="orderItemStatusCd">
		
<xs:annotation>
			
<xs:documentation>Order Item Status Code


Values for Regular Orders:
0  Future
1  Backorder
2  Allocated
3  Pick Ticket Printed
4  Pick Verified / Pack Slip Printed
6  Shipped / Invoiced
C  Cancelled / Closed

Values for RMA Orders:
0  Authorized
1  Received</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:StatusCodeType">
				
<xs:length value="1"/>
				
<xs:enumeration value="0"/>
				
<xs:enumeration value="1"/>
				
<xs:enumeration value="2"/>
				
<xs:enumeration value="3"/>
				
<xs:enumeration value="4"/>
				
<xs:enumeration value="6"/>
				
<xs:enumeration value="C"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="orderItemUnitCost" type="xs:decimal">
		
<xs:annotation>
			
<xs:documentation>Order Item Unit Cost contains the dollar amount per unit charged for thePRODUCT in the ORDER ITEM.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="orderLineItemNumber">
		
<xs:annotation>
			
<xs:documentation>Order Line Item Number uniquely identifies an instance of ORDER ITEM within the scope of an ORDER.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:OrderLineItemNumberType">
				
<xs:maxLength value="4"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="orderNote" type="cdm:OrderNoteType">
		
<xs:annotation>
			
<xs:documentation>Order Note holds the notes pertaining to an Order.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="orderNumber">
		
<xs:annotation>
			
<xs:documentation>Order Number uniquely identifies an instance of ORDER.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:OrderNumberType">
				
<xs:maxLength value="25"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="orderPartyRole" type="cdm:OrderPartyRoleType"/>
	
<xs:element name="orderPartyRoleCode">
		
<xs:annotation>
			
<xs:documentation>Order Party Role Code identifies the role filled by the Party within the context of the Order.

Current values are:
Customer
Sales Channel</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="20"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="orderPartyRoleId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Order Party Role Identifier uniquely identifies a Party Role instance within the context of an Order.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="orderPlacementReasonCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Order Placement Reason Code identifies the reason wy the Order was placed.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="orderQuantityMultiplier" type="cdm:OrderQuantityMultiplierType">
		
<xs:annotation>
			
<xs:documentation>Order Quantity Multiplier contains the number used as a Multiplier where the ORDER quantity represents a set of PRODUCTs not a single instance. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="orderReasonMessage">
		
<xs:annotation>
			
<xs:documentation>Order Reason Message Text holds a free form textual description of why the Order was placed.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:OrderReasonMessageType">
				
<xs:maxLength value="30"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="orderShipment" type="cdm:OrderShipmentType"/>
	
<xs:element name="orderShipmentQuantity" type="xs:decimal">
		
<xs:annotation>
			
<xs:documentation>Order Shipment Quantity holds the number of items from the Ordet Item instance that were actually shipped in the specified Shipment Item.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="orderSourceCategoryCode" type="cdm:PartyCategoryCodeType">
		
<xs:annotation>
			
<xs:documentation>Order Source Category Code identifies the general category of the party submitting the order.

For example: 
'ED' for EDI identifies the submitting party as an external retail store.
'AF' identifies the submitting party as an Affiliate.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="orderStatus" type="cdm:OrderStatusType"/>
	
<xs:element name="orderStatusCode">
		
<xs:annotation>
			
<xs:documentation>Order Status Code identifies the current state of the Order.
Values for Regular Orders:
0  Future
1  Backorder
2  Allocated
3  Pick Ticket Printed
4  Pick Verified 
6  Shipped
C  Cancelled / Closed

Values for RMA Orders:
0  Authorized
1  Received</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:length value="1"/>
				
<xs:enumeration value="0"/>
				
<xs:enumeration value="1"/>
				
<xs:enumeration value="2"/>
				
<xs:enumeration value="3"/>
				
<xs:enumeration value="4"/>
				
<xs:enumeration value="6"/>
				
<xs:enumeration value="C"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="orderStatusReasonCode" type="xs:string"/>
	
<xs:element name="orderTypeCd">
		
<xs:annotation>
			
<xs:documentation>Order Type Code identifies the ORDER as one of the following: 
RG - Regular
RM - RMA</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="3"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="organizationName" type="cdm:OrganizationNameType">
		
<xs:annotation>
			
<xs:documentation>Organization Name is a label  applied to those instances of PARTY of type  ORGANIZATION.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="organizationPersonIndicatorCd">
		
<xs:annotation>
			
<xs:documentation>Organization Person Indicator Code identifies the PARTY instance as an INDIVIDUAL or an ORGANIZATION.

Valid values:
I (individual)
B (business or other organization)</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="1"/>
				
<xs:enumeration value="I"/>
				
<xs:enumeration value="B"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="originalOrder" type="cdm:OriginalOrderType"/>
	
<xs:element name="originalShipmentMethodCode" type="cdm:ShipmentMethodCodeType">
		
<xs:annotation>
			
<xs:documentation>Original Shipment Method Code holds the initial shipment method specified when the order was entered into the system.  

In those cases where shipment method determination is left to the Frieght Carrier Original Shipment Method Code will contain "RTE".</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="originatingPartyId" type="cdm:PartyIdType">
		
<xs:annotation>
			
<xs:documentation>Originating Party Identifier uniquely identifies the PARTY that invoked or consumed the Service.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="otherProductIdentifier" type="cdm:OtherProductIdentifierType"/>
	
<xs:element name="otherProductId">
		
<xs:annotation>
			
<xs:documentation>Other Product Identifier holds a Stock Keeping Unit or identifying value other than Sprint's Stock Keeping Unit.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:OtherProductIdType">
				
<xs:maxLength value="50"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="otherProductIdTypeCd">
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="15"/>
				
<xs:enumeration value="Customer SKU"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="otherSystemLogin" type="cdm:SystemUserIdPasswordType">
		
<xs:annotation>
			
<xs:documentation>Other System Login contains the IVR Number and PIN combination, Alias System Product User ID Password combination, etc.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="outboundExtractIndicatorString" type="cdm:OutboundExtractIndicatorStringType">
		
<xs:annotation>
			
<xs:documentation>Outbound Extract Indicator String holds a string of one or more single character flags identifyig OMIM extract types and destinations.  For example 'EPC....'

 Possible Outbound Extract Indicator String values:
 ‘E’ = OM Extract to Enssamble
 ‘P’=  Billing Extract to Peoplesoft
 ‘C’=  Customer Care extract</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="overrideValidationFlag" type="cdm:OverrideValidationFlagType">
		
<xs:annotation>
			
<xs:documentation>Required to perform change of address that cannot be formatted into the exact same values as the address validation produces, or to perform a change of address if the address validation system is not available.  
Value TRUE (TRUE = 1; FALSE = 0) indicates.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="packageTrackingNumber" type="cdm:TrackingNumberType">
		
<xs:annotation>
			
<xs:documentation>The Package Tracking Number is a unique number used by the shipping company to identify and trace individual packages as they move through the shipment process to their destination. The shipping company automatically assigns a tracking number to the package. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="packingSlipTypeCode" type="cdm:PackingSlipTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Packing Slip Type Code identifies the format and content of the Packing Slip.  This element will be required if Sprint moves to more than one Packing Slip format.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="pageNumber" type="cdm:PageNumberType">
		
<xs:annotation>
			
<xs:documentation>Page Number of the records being displayed.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="pagerPin">
		
<xs:annotation>
			
<xs:documentation>Pager PIN (Persoanl Identification Number) holds the code used by the PAGER subscriber to gain access to the Pager.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:PagerPinType">
				
<xs:maxLength value="4"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="palletContainerId" type="cdm:ContainerIdType">
		
<xs:annotation>
			
<xs:documentation>A Pallet Container Id is a unique identifier for a flat transport structure designed to support a variety of goods in a stable fashion while being lifted by any mobile forklift or other jacking device.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="parentDialogReference">
		
<xs:annotation>
			
<xs:documentation>Parent Dialog Reference Code is used in those multi-part business processing sequences can often generate multiple message exchange dialogs.  These will each carry their own dialog reference, but may need to be linked back to an ‘ancestor’ dialog that spawned the current one.  </xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ParentDialogReferenceType">
				
<xs:maxLength value="24"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="parentFacilityId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Parent Facility Identifier uniquely identifies the parent FACILITY in a Facility To Facility Relationship.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="parentInventoryFacilityId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Will always contain "Sprint".</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="partialLineShipmentAllowedFlag">
		
<xs:annotation>
			
<xs:documentation>Partial Line Shipment Allowed Flag communicates whethere the Order allowes partial shipment at  the Order Item level or not.

Values: 
'Y' =&gt; Partial Order Item Shipment Allowed (default)
'N' =&gt; Partial Order Item Shipment Not Allowed</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="party" type="cdm:PartyType">
		
<xs:annotation>
			
<xs:documentation>PARTY represents an INDIVIDUAL or ORGANIZATION Sprint wishes to track for business reasons.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="partyContactMethod" type="cdm:PartyContactMethodType">
		
<xs:annotation>
			
<xs:documentation>PARTY CONTACT METHOD represents the list of possible mechanisms that may be used to contact an instance of PARTY.  

Examples:
Telephone Number
Pager Number
FAX Number
Street Address
Rural Route Address
Post Office Box
Email Address
IP Address
Web Address</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="partyId">
		
<xs:annotation>
			
<xs:documentation>Party Identifier contains a value that uniquely identifies an INDIVIDUAL or ORGANIZATION Sprint wishes to track for business reasons as a PARTY.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:PartyIdType">
				
<xs:maxLength value="20"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="partyLanguagePreference" type="cdm:PartyLanguagePreferenceType">
		
<xs:annotation>
			
<xs:documentation>Party Language Preference Type contains the details of a language utilied by the specified PARTY instance.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="partyName" type="cdm:PartyNameType">
		
<xs:annotation>
			
<xs:documentation>Party Name holds a name of the specified PARTY.  The name may be an INVIVIDUAL or an ORGANIZATION name.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="partyNameEffectiveFromDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Party Name Effective From Date holds the first calendar day the PARTY NAME is available for use.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="partyNameEffectiveThruDate" type="cdm:SimpleTimeType">
		
<xs:annotation>
			
<xs:documentation>Party Name Effective Thru Date holds the lastst calendar day the PARTY NAME is available for use.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="partyNameId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Party Name Identifier uniquely identifies an instance of PARTY NAME.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="partyNamePurpose" type="cdm:PartyNamePurposeType">
		
<xs:annotation>
			
<xs:documentation>PARTY NAME PURPOSE represents the assignment of a use or purpose of the specified PARTY NAME within the context of relationships and/or transactions of business interest to Sprint.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="partyNamePurposeCd" type="cdm:PurposeCodeType">
		
<xs:annotation>
			
<xs:documentation>Party Name Purpose Code identifies use or purpose of the specified PARTY NAME within the context of relationships and/or transactions of business interest to Sprint.

Possible values:
"AFFINITY PARTNER MEMBERSHIP NAME"
"ATTENTION TEXT NAME"
"BILLING NAME"
"INVOICING NAME"
"SHIPPING NAME"
"PREFERRED NAME"
"LEGAL NAME"
"MAIDEN NAME" </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="partyNameString">
		
<xs:annotation>
			
<xs:documentation>Party Name String holds all of the Individual Name components, Last Name, Middle Name and First Name concatenated into a single string or an Organization Name.  Used in those interfaces where Individual Names are not passed as components or the interface transaction uses a single element for both Organization and Individual Names.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:PartyNameStringType">
				
<xs:maxLength value="35"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="partyOtherIdentifier" type="cdm:PartyOtherIdentifierType">
		
<xs:annotation>
			
<xs:documentation>PARTY OTHER IDENTIFIER represents the list of various external identifiers the PARTY may provide for credit evaluation purposes of other reasons.

Examples:
U. S. Social Security Number
Canadian Social Security Number
Permanent Resident Identifier
Federal Employer Identification Number
Dunn and Bradstreet Number
Passport Number
Motor Vehicle Operator License Number
United Airlines Membership Identifier</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="partyOtherIdEffectiveFromDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Party Other Identifier Effective From Date represents the first calendar day the PARTY EXTERNAL IDENTIFIER is applicable to the specified PARTY.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="partyOtherIdEffectiveThruDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Party Other Identifier Effective Thru Date represents the last calendar day the PARTY EXTERNAL IDENTIFIER is applicable to the specified PARTY.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="partyOtherIdentifierId">
		
<xs:annotation>
			
<xs:documentation>Party Other Identifier Identifier is a system generated value used in combination with the Party Identifier and Party Identification Type Code to uniquely identify an instance of PARTY IDENTIFICATION.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="20"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="partyOtherIdTypeCode" type="cdm:PartyOtherIdTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Party Other Identifier Type Code uniquely identifies a PARTY OTHER IDENTIFIER TYPE instance representing a possible type of external identifier of a PARTY.

Possible values:
U. S. Social Security Number
Canadian Social Security Number
Permanent Resident Identifier
Federal Employer Identification Number
Dunn and Bradstreet Number
Passport Number
Motor Vehicle Operator License Number
United Airlines Membership Identifier</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="partyOtherIdValue" type="cdm:PartyOtherIdValueType">
		
<xs:annotation>
			
<xs:documentation>Party Other Identifier Value represents the string of characters and/or numbers of the PARTY OTHER IDENTIFIER.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="partyRoleCode" type="cdm:PartyRoleCodeType">
		
<xs:annotation>
			
<xs:documentation>Party Role Code identifies the role a PARTY fills within the context of Billing Accounts, Subscriptions, Products, Implementations, Product Deployments, etc.   Party Role Code is categorized by the context it's used in.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="partyRoleContactPreferenceCode" type="cdm:PartyContactPreferenceCodeType">
		
<xs:annotation>
			
<xs:documentation>Party Contact Preference Code identifies the preferred contact method for a PARTY.

Values:
Banner
Email
Mail
Phone
Popup
Text Message</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="partyRoleDataSharingPreferenceCode" type="cdm:PartyDataSharingPreferenceCodeType">
		
<xs:annotation>
			
<xs:documentation>Party Data Sharing Preference Code identifies the data sharing preferences of a PARTY with Partners.

Values:
"Y" - Yes, share data with partners
"N" - No, do not share data with Parnters</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="partyRolePrivacyPreferenceCode" type="cdm:PartyPrivacyPreferenceCodeType">
		
<xs:annotation>
			
<xs:documentation>Party Privacy Preference Code identifies the preferred privacy for a PARTY.

Values:
Banner
Email
Mail
Phone
Popup
Text Message</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="partyRoleContextCode" type="cdm:PartyRoleContextCodeType">
		
<xs:annotation>
			
<xs:documentation>Party Role Context Code identifies the context the Party Role Code is used in.

Values:
"Agreement"
"Billing Account"
"Customer Account"
"Invoice"
"Order"
"Order Line Item"
"Product Deployment"
"Service Agreement"
"Service Agreement Line Item"
"Shipment"
"Shipment Line Item"
"Subscription"
"etc."</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="partyRolePreference" type="cdm:PartyRolePreferenceType">
		
<xs:annotation>
			
<xs:documentation>Party Role Preference holds the data elements that describe the COntact, Privacy and Data Sharing preferences of the PARTY.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="partyRolePreferenceEffectiveFromDate" type="cdm:EffectiveFromDateType">
		
<xs:annotation>
			
<xs:documentation>Party Role Preference Effective From Date holds the first calendar day the PARTY's preference was in effect.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="partyRolePreferenceEffectiveThruDate" type="cdm:EffectiveThruDateType">
		
<xs:annotation>
			
<xs:documentation>Party Role Preference Effective Thru Date holds the last calendar day the PARTY's preference was in effect.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="password">
		
<xs:annotation>
			
<xs:documentation>Password holds the text string specified by a PARTY as credential to be used with a Login Userid to uniquely identify them to a system.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:PasswordType">
				
<xs:maxLength value="10"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="paymentCardCustomerRefNumber" type="cdm:PaymentCardCustomerRefNumberType">
		
<xs:annotation>
			
<xs:documentation>Payment Card Customer Reference Number</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="paymentCardExpirationDate" type="cdm:PaymentCardExpDateType">
		
<xs:annotation>
			
<xs:documentation>Payment Card Expiration Date is the Month and Year the payment card will expire.  MM-YY</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="paymentCardLast4Digits" type="cdm:PaymentCardLast4DigitsType">
		
<xs:annotation>
			
<xs:documentation>Payment Card Last 4 Digits is the last four digits of the payment card number.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="paymentCardLevelTypeCode" type="cdm:PaymentCardLevelTypeCodeType" default="1">
		
<xs:annotation>
			
<xs:documentation>Payment Card Level Type Code</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="paymentCardMemberName">
		
<xs:annotation>
			
<xs:documentation>Payment Card Member Name is the name of the PARTY to whom the payment card has been issued.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:PartyNameStringType">
				
<xs:maxLength value="25"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="paymentCardNumber" type="cdm:PaymentCardNumberType">
		
<xs:annotation>
			
<xs:documentation>Payment Card Number is the number issued on the card.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="paymentCardSecurityCode" type="cdm:PaymentCardSecurityCodeType">
		
<xs:annotation>
			
<xs:documentation>Payment Credit Card Security Code is a 3 digit code issued by the card issuer as a security feature.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="paymentCardTaa1Code" type="cdm:PaymentCardTAAType">
		
<xs:annotation>
			
<xs:documentation>The Payment Card Transaction Advice Addendum Record (TAA code) is a travel industry code used by American Express to distinguish between flight and non-flight charges, in order to help identify charges that should trigger an insurance premium.  TAA fields are four fields that further describe the purchase. These fields are used only with American Express cards for Level II or non-Level II transactions.  

The TAA code fields  are relevant only for cardLevelType=2 and CreditCard Type = ‘AM’</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="paymentCardTaa2Code" type="cdm:PaymentCardTAAType">
		
<xs:annotation>
			
<xs:documentation>The Payment Card Transaction Advice Addendum Record (TAA code) is a travel industry code used by American Express to distinguish between flight and non-flight charges, in order to help identify charges that should trigger an insurance premium.  TAA fields are four fields that further describe the purchase. These fields are used only with American Express cards for Level II or non-Level II transactions.  

The TAA code fields  are relevant only for cardLevelType=2 and CreditCard Type = ‘AM’</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="paymentCardTaa3Code" type="cdm:PaymentCardTAAType">
		
<xs:annotation>
			
<xs:documentation>The Payment Card Transaction Advice Addendum Record (TAA code) is a travel industry code used by American Express to distinguish between flight and non-flight charges, in order to help identify charges that should trigger an insurance premium.  TAA fields are four fields that further describe the purchase. These fields are used only with American Express cards for Level II or non-Level II transactions.  

The TAA code fields  are relevant only for cardLevelType=2 and CreditCard Type = ‘AM’</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="paymentCardTaa4Code" type="cdm:PaymentCardTAAType">
		
<xs:annotation>
			
<xs:documentation>The Payment Card Transaction Advice Addendum Record (TAA code) is a travel industry code used by American Express to distinguish between flight and non-flight charges, in order to help identify charges that should trigger an insurance premium.  TAA fields are four fields that further describe the purchase. These fields are used only with American Express cards for Level II or non-Level II transactions.  

The TAA code fields  are relevant only for cardLevelType=2 and CreditCard Type = ‘AM’</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="paymentCardTypeCode" type="cdm:PaymentCardTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Payment Card Type </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="paymentMethodCode">
		
<xs:annotation>
			
<xs:documentation>Payment Method Code identifies the method used by the customer to pay for services or products.

Values:
Check By Phone
Credit Card
Bill To Account</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="25"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="paymentTermId">
		
<xs:annotation>
			
<xs:documentation>Payment Term Identifier identifies a term of payment for a Sprint Product or Service.

Examples:
Cash On Delivery (COD)
Pre-Pay
2% Discount if Paid Within 10 Days
etc.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:TermIdType">
				
<xs:maxLength value="25"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="pcsAccountSegmentationTypeCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>PCS Account Segmentation Type Code uniquely identifies an instance of a list of classifications defined by PCS that are assignable to a CUSTOMER ACCOUNT instance.

PCS Account Segmentation Types are used in conjunction with CREDIT CLASS CODE, PCS CUSTOMER SEGMENTATION TYPE and PCS SUBSCIPTION SEGMENTATION TYPE classify a CUSTOMER by business area, spending control programs, size, liability, etc.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="pcsCustomerSegmentationTypeCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>PCS Customer Segmentation Type Code uniquely identifies a general classification
that is assignable to a CUSTOMER.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="pcsSubscriptionSegmentationTypeCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>PCS Subscription Segmentation Type Code uniquely identifies a general classification
that is assigned to a  SUBSCRIPTION.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="phoneExtension">
		
<xs:annotation>
			
<xs:documentation>Phone Extention holds the additional digits that identify an additional phone connected to a single telephone line or line group.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:PhoneExtensionType">
				
<xs:maxLength value="20"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="phoneLineNumber">
		
<xs:annotation>
			
<xs:documentation>Phone Line Number represents the 4 digits of the 7 digit phone numbe rthat follow the Network Numbering Exchange (NXX) Number.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:PhoneLineNumberType"/>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="physicalAddressChangeFlag" type="cdm:AddressChangeFlagType">
		
<xs:annotation>
			
<xs:documentation>Flag to indicate if the Customer's physical/home address is to be replaced with the newAddress.  
0=Do not change address
1=Change address with address in the newAddress record.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="pickList" type="cdm:PickListType"/>
	
<xs:element name="pickListEntryDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Pick List Entry Date holds the calendar day the Pick LIst was created in the system.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="pickListId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Pick List Identifier uniquely identifies an instance of Pick LIst.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="pickListInstructionTypeCode" type="cdm:InstructionTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Pick LIst Instruction Type Code Type categorizes the Instructions

Values:
'VA' - Value Add
'PK' - Indicates the instruction should be printed on the Packing Slip
'PI' - Indicates the instruction is a Packing Instruction.
'SI' - Indicates the instruction is a Shipping Instruction.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="pickListLineItem" type="cdm:PickListLineItemType">
		
<xs:annotation>
			
<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="pickListLineItemId" type="cdm:PickListLineItemIdType">
		
<xs:annotation>
			
<xs:documentation>Pick List Line Item Identifier uniquely identifies an instance of Pick List Item.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="picklistLineItemQuantity" type="cdm:PicklistLineItemQuantityType">
		
<xs:annotation>
			
<xs:documentation>Pick List Line Item Quantity holds the number of Inventory Items to be picked from inventory to fulfill the Pick List Item.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="pickListLineItemInstructionTypeCode" type="cdm:InstructionTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Pick List Line Item Instruction Type Code is used to specify on which form instructions describing the  processing of RMA Order Number, Mobile Directory Number and P2K Order Number prints .

Values:
'PT' = Pickticket
'PK' = Packing Slip
'BL' = Bill of Lading
'SH' = Shipping label consolidator information
'VA'=Value Added Service
'SI'=Shipper Info</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="pickListNameTypeCode" type="cdm:PickListNameTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Pick List Name Type Code identifies the name associated with the Pick List as the Ship To Name,Shipt To Name 2, Sold To Name, Sold To Name 2, etc.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="pickListReleaseDate" type="cdm:PickListReleaseDateType">
		
<xs:annotation>
			
<xs:documentation>Pick List Release Date holds the calendar day the Pick List  was released to the Warehouse floor.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="pickListStatusCode" type="cdm:PickListStatusCodeType">
		
<xs:annotation>
			
<xs:documentation>Pick List Status Code indicates if this is the final Shipment Confirmation.                                                 Valid values:                        "I" - full shipment confirmation                   "M" - additional shipment confirmations</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="pickListUnitOfMeasureCode" type="cdm:UnitOfMeasureCodeType">
		
<xs:annotation>
			
<xs:documentation>The Pick List Unit Of Measurement Code represents the set of characters  for a kind of unit used as a standard of comparison for others of the same kind, in assigning to them numerical values.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="pin" type="cdm:PinType">
		
<xs:annotation>
			
<xs:documentation>A personal identification number (PIN) is a secret numeric password shared between a user and a system that can be used to authenticate the user to the system</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="plannedShipmentRouteSegment" type="cdm:ShipmentRouteSegmentType"/>
	
<xs:element name="portAwarenessIndicator" type="xs:string"/>
	
<xs:element name="portingStatusCode">
		
<xs:annotation>
			
<xs:documentation>Porting Status Code is used to indicate the status of a porting request for a specific MDN. If a PAI cannot be found spaces will be returned. Valid values are:
PIP
PINP
POND
PCP
PCNP
PSP
PSNP
PSCP
PSCNP
PNDS
NCPA</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:PortingStatusCodeType">
				
<xs:enumeration value="PIP"/>
				
<xs:enumeration value="PINP"/>
				
<xs:enumeration value="POND"/>
				
<xs:enumeration value="PCP"/>
				
<xs:enumeration value="PCNP"/>
				
<xs:enumeration value="PSP"/>
				
<xs:enumeration value="PSNP"/>
				
<xs:enumeration value="PSCP"/>
				
<xs:enumeration value="PSCNP"/>
				
<xs:enumeration value="PNDS"/>
				
<xs:enumeration value="NCPA"/>
				
<xs:enumeration value=" "/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="postalAddressComponents" type="cdm:PostalAddressComponentsType">
		
<xs:annotation>
			
<xs:documentation>Postal Address Components  contains the constituent parts of an address.  A address may be  a Street Address, Post Office Box or Rural Route address.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="postalAddressEffectiveDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>The effective date of the postal address.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="postalAddressExpirationDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>The expiration date of the postal address.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="postalAddressId" type="cdm:ContactMethodIdType">
		
<xs:annotation>
			
<xs:documentation>Postal Address Identifier holds the Contact Method Identifier that uniquely identifies an instance of USPS Postal Address within the context of a PARTY or FACILITY.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="postalAddressLine1">
		
<xs:simpleType>
			
<xs:restriction base="cdm:PostalAddressLineType">
				
<xs:maxLength value="35"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="postalAddressLine2">
		
<xs:simpleType>
			
<xs:restriction base="cdm:PostalAddressLineType">
				
<xs:maxLength value="35"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="postalAddressLine3">
		
<xs:simpleType>
			
<xs:restriction base="cdm:PostalAddressLineType">
				
<xs:maxLength value="35"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="postalAddressPurposeCode">
		
<xs:annotation>
			
<xs:documentation>Postal Address Purpose Code identifies a use for the Usps Postal Address instance.                                                                                                      

Possible values:
"Primary Address"
"Mailing Address"
"Billing Address"
"Ship To Addess"
"Taxing Address"
"Work Address"
"Home Address"
etc.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:PurposeCodeType">
				
<xs:maxLength value="10"/>
				
<xs:enumeration value="Billing"/>
				
<xs:enumeration value="Primary"/>
				
<xs:enumeration value="Mailing"/>
				
<xs:enumeration value="ShipTo"/>
				
<xs:enumeration value="Taxing"/>
				
<xs:enumeration value="Work"/>
				
<xs:enumeration value="Home"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="postOfficeBoxNumber" type="cdm:PostOfficeBoxNumberType">
		
<xs:annotation>
			
<xs:documentation>Post Office Box Number holds a United States Postal Service Post Office Box Number.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="precedingDirection" type="cdm:PrecedingDirectionType">
		
<xs:annotation>
			
<xs:documentation>Preceding Direction is a USPS Postal Address component that holds the compass direction that appears before the Street Name in some cases.  For example, i "North Main Street", "North" would reside in Preceding Direction.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="preferredRoamingListId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Preferred Roaming List Identifier identifies a file which resides in a handset's memory and contains a list of Sprint PCS and cellular network information. The PRL can assist the handset with acquisition of the Sprint PCS network and when a customer is roaming, the file directs the handset to acquire a signal from one of our roaming partners. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="preferredRoamingListLastUpdateDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Preferred Roaming List Last Update Date holds the calendar day last Preferred Roaming List update was applied to the device.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="preferredRoamingListUpdateNeededFlag" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Preferred Roaming List Update Needed Flag identifies a Wireless Network Access Device in need of a Preferred Roaming List Update.

Values:
1 =&gt; TRUE, the device requires a Preferred Roaming List update
0 =&gt; FALSE, the device does NOT require a Preferred Roaming List update.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="prePaidBillingAccountFlag" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Pre-Paid Billing Account Flag indicates the Billing Account is required to pay for service in advance.

Valid Value:
Y - Indicates the account is a pre-paid account.
N – Otherwise.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="priceComponent" type="cdm:PriceComponentType">
		
<xs:annotation>
			
<xs:documentation>Price Component contains the common variables for pricing.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="priceAmount">
		
<xs:annotation>
			
<xs:documentation>Price Amount contains the dollar amount of the price component.  Either Price Amount or Percent will contain a value but not both for a given Price Component Indentifier.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:PriceComponentAmountType">
				
<xs:totalDigits value="14"/>
				
<xs:fractionDigits value="2"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="pricePlanDeployment" type="cdm:ProductDeploymentType">
		
<xs:annotation>
			
<xs:documentation>Price Plan Deployment</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="primaryAddressIndicator" type="cdm:PrimaryAddressIndicatorType">
		
<xs:annotation>
			
<xs:documentation>Primary Address Indicator

Valid Values:
Y – Indicates address is primary but only one address on a customer may be Y for primary at one time.
N – Indicates address is not the primary address for the customer.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="primaryContactIndicator" type="cdm:PrimaryContactIndicatorType">
		
<xs:annotation>
			
<xs:documentation>Primary contact indicator.  

Valid Values: 
Y – Means contact phone number is primary but only 1 can be primary.
N – Means contact phone number is not primary.

Note: Default is 'N', but 1st occurrence on createCustomer or addContactPhoneNumber will default to 'Y' if none are set to 'Y'.  Setting a contact phone number as primary sets all others to non-primary.  A contact phone number that is primary cannot be changed to non-primary except by setting another contact phone number as primary.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="product" type="cdm:ProductType">
		
<xs:annotation>
			
<xs:documentation>Product describes a GOOD or SERVICE that was, is or will be sold by Sprint or consumed by Sprint.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="productCharacteristicApplicabilityId" type="cdm:ProductCharacteristicApplicabilityIdType"/>
	
<xs:element name="productCharacteristicApplicableEffectiveDateTime" type="cdm:SimpleDateTimeType">
		
<xs:annotation>
			
<xs:documentation>Product Characteristic Applicable Effective Date:  The effective date that the Product Characteristic becomes applicable to a specification.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="productCharacteristicApplicableExpirationDateTime" type="cdm:SimpleDateTimeType">
		
<xs:annotation>
			
<xs:documentation>Product Characteristic Applicable Expiration Date:  The date of a  Product Characteristic expires for a product specification.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="productCharacteristicDescription" type="cdm:ProductCharacteristicDescriptionType">
		
<xs:annotation>
			
<xs:documentation>Product Characteristic Description:  A narrative that explains the characteristic of the product.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="productCharacteristicId" type="cdm:ProductCharacteristicIdType">
		
<xs:annotation>
			
<xs:documentation>Product Characteristic Identifier:  A unique identifier for a Product Characteristic to differentiate one characteristic from the other.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="productCharacteristicName" type="cdm:ProductCharacteristicNameType">
		
<xs:annotation>
			
<xs:documentation>The name assigned to a Capability type.
This value can be used to present to a front end.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="productCharacteristicValueText" type="cdm:ProductCharacteristicValueTextType">
		
<xs:annotation>
			
<xs:documentation>Product Characteristic Value Text:  The value associated with a product's characteristics. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="productDeploymentEffectiveFromDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Product Deployment Effective From Date holds the first calendar day the PRODUCT is assigned to the specified SUBSCRIPTION.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="productDeploymentEffectiveFromTime" type="cdm:SimpleTimeType">
		
<xs:annotation>
			
<xs:documentation>Product Deployment Effective From Time holds the first hour, minute and second of the Product Deployment Effective From Date for the PRODUCT assignment to the specified SUBSCRIPTION.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="productDeploymentEffectiveThruDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Product Deployment Effective Thru Date holds the last calendar day the PRODUCT is assigned to the specified SUBSCRIPTION.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="productDeploymentEffectiveThruTime" type="cdm:SimpleTimeType">
		
<xs:annotation>
			
<xs:documentation>Product Deployment Effective Thru Time holds the last hour, minute and second of the Product Deployment Effective From Date for the PRODUCT assignment to the specified SUBSCRIPTION.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="productDeploymentId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Product Deployment Identifier uniquely identifies the assignment of a PRODUCT within the context of a SUBSCRIPTION.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="productDeploymentPartyRole" type="cdm:ProductDeploymentPartyRoleType">
		
<xs:annotation>
			
<xs:documentation>Product deployment Party Role identifies the Parties filling various roles within the context of the deployment of a Product to a Subscription or Billing Account.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="productDeploymentPartyRoleCode" type="cdm:PartyRoleCodeType">
		
<xs:annotation>
			
<xs:documentation>Product deployment party Role Code identifies the frole filled by the specified Party withint hte context of the specified Product Deployment.

Values:
"AUTHORIZED USER"
"EXTERNAL ACCONT ADMINISTRATOR"
"SPRINT ACCOUNTADMINISTRATOR"
"CSM ACCOUNT ADMINISTRATOR"
"CM ACCOUNT ADMINISTRATOR"
"QPASS AUTHORIZED USER"
"SALES CHANNEL"
"CUSTOMER CARE REPRESENTATIVE"
"etc."</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="productDeploymentPartyRoleEffectiveFromDate" type="cdm:EffectiveFromDateType">
		
<xs:annotation>
			
<xs:documentation>Product Deployment Party Role Effective From Date holds the first calendar day the Party filled the specified role within the context of the Product Deployment.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="productDeploymentPartyRoleEffectiveThruDate" type="cdm:EffectiveThruDateType">
		
<xs:annotation>
			
<xs:documentation>Product Deployment Party Role Effective Thru Date holds the last calendar day the Party filled the specified role within the context of the Product Deployment.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="productDeploymentTerminationReasonCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Product Deployment Termination Reason Code holds the reason why the Product Deployment was terminated.  Only required for Business Billing and Affinity Program Products.

If the deployed Product was an Affinity program Product then Product Deployment Termination Reason Code holds one of the following values:
'AFSAP' =&gt; SWITCHED TO ANOTHER PROGRAM
'AFNLP' =&gt; NO LONGER A SPRINT PCS CUSTOMER
'AFNLA' =&gt; NO LONGER AN AFFINITY MEMBER
'AFNAA' =&gt; NOT APPLICABLE
'AFSRP' =&gt; SWITCHED TO INELIGIBLE RATE PLAN

If the deployed Product was a Business Billing Product then Product Deployment Termination Reason Code holds a valid value from the Reason Code look-up table.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="productDescription">
		
<xs:annotation>
			
<xs:documentation>Product DEscription contains a brief textual description of the PRODUCT.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="30"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="productId" type="cdm:ProductIdType">
		
<xs:annotation>
			
<xs:documentation>Product Identifier represents the identifier used a PRODUCT OFFERING. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="productLongDesc" type="cdm:ProductLongDescriptionType">
		
<xs:annotation>
			
<xs:documentation>Product Long Description contains an extended textual description of the PRODUCT.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="productName">
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="64"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="productSetCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Product Set Code identifies the category Product Groups may be rolled-up into for Finance.

Examples:
'HS' =&gt; Handset
'AC' =&gt; Accessory
'MI' =&gt; Others
'SR' =&gt; Service and Repair</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="productStatusCode" type="cdm:StatusCodeType"/>
	
<xs:element name="productTypeCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Product Type Code identifies the Product as either a tangible Good or an intangible Service.

Values:
'G' =&gt; Good
'S' =&gt; Service</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="provisionBeforeShippingFlag">
		
<xs:annotation>
			
<xs:documentation>Provision Before Shipping Flag identifies orders where the Wireless Network Access Device should be provisioned to the network before they are shipped (Hot Phones)

Values:
'Y' - Yes, provision Wireless Network Access Device before shipping.
'N' - No, DO NOT provision Wireless Network Access Device before shipping.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ProvisionBeforeShippingFlagType">
				
<xs:length value="1"/>
				
<xs:enumeration value="Y"/>
				
<xs:enumeration value="N"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="purchaseOrder" type="cdm:PurchaseOrderType"/>
	
<xs:element name="purchaseOrderItem" type="cdm:PurchaseOrderItemType"/>
	
<xs:element name="radixCode">
		
<xs:annotation>
			
<xs:documentation>The Radix Code specifies whether the serialized fields contain either decimal or hexadecimal format.  D = Decimal  H = Hexadecimal</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:RadixCodeType">
				
<xs:length value="1"/>
				
<xs:enumeration value="D"/>
				
<xs:enumeration value="H"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="recieverId">
		
<xs:annotation>
			
<xs:documentation>Receiver Identifier uniquely identifies the application receiviing the file.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="20"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="recommendationTypeCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Recommendation Type Code Values:
A - Approval Recommendation
R - Replenishment Recommendation; DC to DC transfer
K – Internal Kitting 
P – External Kitting (Packaging Plus)
</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="recordCreationDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>The Record Creation Date is the date a record was created.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="recordUpdateDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>The Record Update Date is the date an update was last applied to a record.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="remarkCode">
		
<xs:annotation>
			
<xs:documentation>Code that categorizes a type of remark.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:NoteTypeCodeType">
				
<xs:maxLength value="3"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="remarkDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Date the remark was made.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="remarkId">
		
<xs:annotation>
			
<xs:documentation>Remark Identifier uniquely identifies an instance of remark.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:NoteIdType">
				
<xs:maxLength value="15"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="remarkText">
		
<xs:annotation>
			
<xs:documentation>Text of the remark.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:NoteTextType">
				
<xs:maxLength value="1000"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="remarkTime" type="cdm:SimpleTimeType">
		
<xs:annotation>
			
<xs:documentation>Time the remark was made.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="replyCompletionCode">
		
<xs:annotation>
			
<xs:documentation>Reply Completion Code holds the the provider’s declaration of the Service's success or failure in processing the submitted request.

Values:
0 = Successful completion, 
4 = Successful completion, but with a warning as to some unusual circumstance, 
8 = Error, request was not processed successfully, 
12 = Severe error, represents a failure that could indicate a major system irregularity</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ReplyCompletionCodeType">
				
<xs:maxLength value="5"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="replyReasonCode">
		
<xs:annotation>
			
<xs:documentation>Reply Reason Code contains the Reason a non-zero Reply Completion Code was returned.  Required when Reply Completion Code was non-zero.  </xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ReplyReasonCodeType">
				
<xs:maxLength value="5"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="requestedFreightCarrierCode">
		
<xs:annotation>
			
<xs:documentation>Requested Freight Carrier Code identifies a Freight Carrier requested by the Customer other than the default Freight Carrier in the Order Management System.  If not specified, the Order Management System will determine the Freight Carrier.  


</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="6"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="requestedShipDate">
		
<xs:annotation>
			
<xs:documentation>Requested Ship Date is the date the customer expects the order to ship from the warehouse.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:RequestedShipDateType"/>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="requirement" type="cdm:RequirementType">
		
<xs:annotation>
			
<xs:documentation>Requirement holds teh generic elements of a REQUIREMENT.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="requirementId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Requirement Identifier unique identifies an instance of REQUIREMENT.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="requirementStatement" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Requirement Statement holds the text describing the REQUIREMENT.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="requirementCreationDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Requirement Date holds the calendar day the REQUIREMENT was entered into the system.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="requiredByDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Required By Date holds the calendar day by which the REQUIREMENT  is needed.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="requirementEstimatedBudget" type="xs:decimal">
		
<xs:annotation>
			
<xs:documentation>Requirment Estimated Budget contains the estimated dollar amount needed to fulfill the REQUIREMENT</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="requirementQuantity" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Requirement Quantity holds the number of items needed in the REQUIREMENT.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="reqSentDateTime">
		
<xs:annotation>
			
<xs:documentation>Is this the same as BusinessProcessID DateTime?</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ReqSentDateTimeType"/>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="restrictedQuantity" type="xs:integer">
		
<xs:annotation>
			
<xs:documentation>Restricted Quantity represents the number of items (SKU) that will not be made available because they have been set aside for  some purpose,  For example  they could be set aside for a third party retail store.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="retailStoreLocation" type="cdm:InventoryLocationType">
		
<xs:annotation>
			
<xs:documentation>Retail Store Location holds the Inventory Location detail of an RMS store.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="retailStoreID" type="cdm:FacilityIdType">
		
<xs:annotation>
			
<xs:documentation>Retail Store Identifier holds the facility Identifier that uniquely identifies a Sprint or an external retail Store. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="returnWarehouseTransferTransaction" type="cdm:InventoryTransactionType">
		
<xs:annotation>
			
<xs:documentation>Return Warehouse Transfer Transaction holds the transaction description details for the Inventory Transaction transfering good handsets from the Return Warehouse to a Fulfillment Warehouse.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="rmaExceptionTypeCode" type="cdm:RmaExceptionTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>RMA Exception Type Code identifies the scenario that caused the RMA Exception.

Valid values:
C – Receiving Product against Closed RMA
N – Receiving product without an RMA
S – SKU discrepancy
U – Undeliverable Order</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="rmaOrder" type="cdm:RmaOrderType">
		
<xs:annotation>
			
<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="rmaOrderItem" type="cdm:RmaOrderItemType">
		
<xs:annotation>
			
<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="rmaOrderNumber">
		
<xs:annotation>
			
<xs:documentation>Return Merchandise Authorization Order Number is the Order Number assigned to the RMA kit. Valid only if the order in question has been issued an RMA kit.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:OrderNumberType">
				
<xs:maxLength value="7"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="rmaOrderTypeCode" type="cdm:RmaOrderTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>RMA Order Type Code Values:
RH = New Returns – RMA Returns to NOL
R7 = RMA returns to RTNS-ex: Plan B
RZ = Retail Returns  generated through RMS 
RK = Order type for RMA kit 
RT = Order type for 3rd Party returns</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="rmaReasonCode">
		
<xs:annotation>
			
<xs:documentation>The reason why the return kit is requested. Valid only if the order in question has been issued an RMA kit.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:RmaReasonCodeType">
				
<xs:maxLength value="3"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="rmaReceiptQualityCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>RMA Receipt Quality Code holds the code describing the condition of the Inventory Item returned to the Warehouse in an RMA.

Valid Values:
A -- Battery Missing
B -- Charger Missing
C -- Both Missing
D -- Other Items Missing
E -- SIM Missing
F -- No Issues
G -- Retail Return</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="roleParty" type="cdm:RolePartyType">
		
<xs:annotation>
			
<xs:documentation>Billing Account Party Role holds data describing a PARTY filling a specific role within the context of a BILLING ACCOUNT.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="routeSegmentFromLocation" type="cdm:InventoryLocationType">
		
<xs:annotation>
			
<xs:documentation>Route Segment From Location identifies the Facility where the Shipment segment started.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="routeSegmentToLocation" type="cdm:InventoryLocationType">
		
<xs:annotation>
			
<xs:documentation>Route Segment To Location identifies the Facility the where the Shipment segment ends.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="rowCountNumber" type="cdm:RowCountNumberType">
		
<xs:annotation>
			
<xs:documentation>Number of records being returned.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="ruralRouteBoxNumber" type="cdm:RuralRouteBoxNumberType">
		
<xs:annotation>
			
<xs:documentation>Rural Route Box Number contains the number of a mail box on a United States Postal Service Delivery Route.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="salesChannelId">
		
<xs:annotation>
			
<xs:documentation>Sales Channel Identifier uniquely identifies a PARTY, internal to Sprint or external, that sells Sprint equipment and services.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:PartyIdType">
				
<xs:maxLength value="20"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="salesOrderLineItemQuantity" type="cdm:SalesOrderLineItemQuantityType">
		
<xs:annotation>
			
<xs:documentation>Sales Order Line Item Quantity holds the number of a specific Product ID ordered on a Sales Order Item.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="salesOrderNumber" type="cdm:OrderNumberType">
		
<xs:annotation>
			
<xs:documentation>Sales Order Number uniquely identifies an instance of a Sales Order.  A Sales Order is an order received by a business from a customer and it may be for products and/or services.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="salesOrderSourceCode">
		
<xs:annotation>
			
<xs:documentation>Sales Order Source Code identifies the Sprint group originated the order. 

Valid values are:
S - RMS
U - CEBU
D - DHRP</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:SalesOrderSourceCodeType">
				
<xs:length value="1"/>
				
<xs:enumeration value="S"/>
				
<xs:enumeration value="U"/>
				
<xs:enumeration value="D"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="salesOrderTypeCd">
		
<xs:annotation>
			
<xs:documentation>Possible Sales Order Type Code 

values:
1D - RMS DHRP Order
1T - RMS Standard Order
1F - RMS Return
1O - RMS Return
</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:SalesOrderTypeCdType">
				
<xs:maxLength value="2"/>
				
<xs:enumeration value="1D"/>
				
<xs:enumeration value="1T"/>
				
<xs:enumeration value="1F"/>
				
<xs:enumeration value="1O"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="salesRepresentativeName">
		
<xs:annotation>
			
<xs:documentation>Sales Representative Name holds the Individual Name Components of the individual who generated a sale concatentated into a single string.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:PartyNameStringType">
				
<xs:maxLength value="30"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="senderId">
		
<xs:annotation>
			
<xs:documentation>Sender Identifier uniquely identifies the application sending the fiel.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="20"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="serializationTypeFormat" type="cdm:SerializationTypeFormatType">
		
<xs:annotation>
			
<xs:documentation>JRH: Under discussion.

Serialization Type Format specifies whether the serialized fields contain either decimal or hexadecimal format.  D = Decimal  H = Hexadecimal</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="serializedProductFlag" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Serialized Product Flag identifies the Product instance as either a Serial tracked or non-Serial tracked Product.

'Y' =&gt; Serialized Product
'N' =&gt; Non-Serialized Product</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="serializationTypeCode" type="cdm:SerializationTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Serialization Type Code specifies which type of serialization is used to identify an instance of the product.

Current Values are:
E = CDMA Handset 
D = Handset Kit for Dual Mode
K = IDEN Handset Kit (model #)
S = Stand-Alone SIM
M = Stand-Alone Handset (only for handsets which need SIM but dont have as part of this SKU)
I = IMEI Handset (no need for SIM)
N = Serialized Accessory (other than SIMs)
A = LCIB Device</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="serialNumberAvailabilityStatusCode">
		
<xs:annotation>
			
<xs:documentation>The serialNumberAvailabilityStatusCode indicates whether a serial number (ESN, MEID, MSN, etc) is available for use.  For example, if the serial number has been reported as 'stolen' then the status of the serial number is 0 or not available.

0 - Not available for use
1 - Available for use</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:StatusCodeType">
				
<xs:length value="1"/>
				
<xs:enumeration value="0"/>
				
<xs:enumeration value="1"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="serviceName">
		
<xs:annotation>
			
<xs:documentation>Service Names exist in one-to-one correspondence to the existing application contracts in place. 

In addition, in a system that seeks to create a logical network view based on function, this also is used to determine the destination for a message.  Service Name is required, and is composed of three parts:
•	Service Group: 1 – 4 characters, represents the major level classification for the service.   May or may not relate to a Sprint ApplID.
•	Service Sub-group:  1-10 characters, represents a mid-level classification for the service 
•	Service Name description:1 – 12 characters, used as a short descriptive attribute.

These three components are concatenated, with period delimiters (e.g. “HR.EMPLEE.NEWHIRE”).  There should be no imbedded spaces or periods, with the first character of each node an alpha character.  All characters should be upper case.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ServiceNameType"/>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="serviceQualifier">
		
<xs:annotation>
			
<xs:documentation>Service Qualifier qualifies a Service Name to a specific instance of a service.  For example, East or West for regionalized services.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ServiceQualifierType">
				
<xs:maxLength value="8"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="serviceVersion" default="1">
		
<xs:annotation>
			
<xs:documentation>Service Version identifies the release of the Service. Default value is 1.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:integer">
				
<xs:totalDigits value="4"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="shipment" type="cdm:ShipmentType">
		
<xs:annotation>
			
<xs:documentation>SHIPMENT represent the outgoing transport of PRODUCT instances to a CUSTOMER or the incoming transport of PRODUCT instances from a SUPPLIER.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="shipmentId">
		
<xs:annotation>
			
<xs:documentation>Shipment Identifier uniquely identifies an instance of Shipment.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="30"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="shipmentLineItem" type="cdm:ShipmentLineItemType">
		
<xs:annotation>
			
<xs:documentation>SHIPMENT LINE ITEM represents the detail of a SHIPMENT.  SHIPMENT ITEM provides a mechanism to track what was shipped or what is scheduled to be shipped or what is received  or what is scheduled to be received and how many of each item was/will be shipped.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="shipmentLineItemId" type="cdm:ShipmentLineItemIdType">
		
<xs:annotation>
			
<xs:documentation>Shipment Line Item Identifier uniquely identifies an instance of Shipment Line Item within the context of a Sipment.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="shipmentLineItemQuantity">
		
<xs:annotation>
			
<xs:documentation>Shipment Line Item Quantity holds the number of Inventory Items to be shipped from inventory to fulfill the Shipment Item.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ShipmentLineItemQuantityType">
				
<xs:totalDigits value="10"/>
				
<xs:fractionDigits value="0"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="shipmentMethodCode">
		
<xs:annotation>
			
<xs:documentation>Shipment Method Code identifies the method the Carrier uses to ship the Inventory.

Possible types:
"Next Day Air"
</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:ShipmentMethodCodeType">
				
<xs:maxLength value="30"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="shipmentPackagingContent" type="cdm:ShipmentPackagingContentType">
		
<xs:annotation>
			
<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="shipmentPalletQuantity" type="cdm:ShipmentPalletQuantityType">
		
<xs:annotation>
			
<xs:documentation>Shipment Pallet Quantity holds the total number of pallets contained in a single SHIPMENT.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="shipmentPartyRole" type="cdm:ShipmentPartyRoleType">
		
<xs:annotation>
			
<xs:documentation>Shipment PArty Role holds the detail describing the various Parties and the Roles they play within the context of the Shipment.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="shipmentPartyRoleCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Shipment Party Role Code identifies the role filled by the Party within the context of the Shipment.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="shipmentPartyRoleId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Shipment Party Role Identifier uniquely identifies a Party Role instance within the context of a Shipment.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="shipmentPaymentMethodCode" type="cdm:PaymentMethodCodeType">
		
<xs:annotation>
			
<xs:documentation>Shipment Payment Method Code identifies how the Shipment will be paid for.  Printed on Bill of Lading and International Documents.

Values: 
PP = Prepaid
CC = Collect
TP = Third Party</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="shipmentReceipt" type="cdm:ShipmentReceiptType">
		
<xs:annotation>
			
<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="shipmentRouteSegment" type="cdm:ShipmentRouteSegmentType">
		
<xs:annotation>
			
<xs:documentation>Shipment Route Segment represents a section of the route used to deliver the goods from one Facility to another.  The segment may be the entire route  or some subsection.          </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="shipmentRouteSegmentId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Shipment Route Segment Identifier uniquely identifies a leg of the Shipment Route.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="shipmentStatusCode" type="xs:string"/>
	
<xs:element name="shipmentStatusReasonCode" type="cdm:ShipmentStatusReasonCodeType">
		
<xs:annotation>
			
<xs:documentation>Shipment Status Reason Code holds the reason the Shipment Status Code was assigned to the Shipment.  For example this would identify the reason for a Shipment Hold or Cancelation.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="shipmentTrackingNumber">
		
<xs:annotation>
			
<xs:documentation>The Shipment Tracking Number is a unique number used by the shipping company to identify and trace freight shipments as they move through the shipment process to their destination. The shipping company automatically assigns a tracking number to the shipment. </xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:TrackingNumberType">
				
<xs:maxLength value="50"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="shipmentUnitOfMeasureCode" type="cdm:UnitOfMeasureCodeType">
		
<xs:annotation>
			
<xs:documentation>The Shipment Unit Of Measurement Code represents the set of characters  for a kind of unit used as a standard of comparison for others of the same kind, in assigning to them numerical values.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="shippedFromLocation" type="cdm:InventoryLocationType"/>
	
<xs:element name="shippedFromPartyId" type="cdm:PartyIdType">
		
<xs:annotation>
			
<xs:documentation>Shipped From Party Identifier uniquely identifies the instance of PARTY from whom shipment is being made.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="shippedToLocation" type="cdm:InventoryLocationType"/>
	
<xs:element name="shippedToPartyId" type="cdm:PartyIdType">
		
<xs:annotation>
			
<xs:documentation>Shipped To Party Identifier uniquely identifies the instance of PARTY to whom shipment is being made.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="shipProvisionedCode">
		
<xs:annotation>
			
<xs:documentation>Ship Provisioned Code identifies the handset as shipped provisioned or shipped unprovisioned. 

Values:
'P' =&gt; Ship Provisioned
'W' =&gt; Port In
Blank =&gt; Ship Unprovisioned</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="2"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="singleSignOnPreferenceCode" type="cdm:SingleSignOnPreferenceCodeType">
		
<xs:annotation>
			
<xs:documentation>Single Sign On Preference Code identifies the PARTY's sign on preference for the identified System and Product.
 </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="singleUserIndicator" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Single User Indicator identifies the BILLING ACCOUNT as an account with only one SUBSCRIPTION.                                                        Valid values:                        "T" =&gt; TRUE, the account has a single Subscription        "F" =&gt; FALSE the account has more than one Subscription.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="softAllocationRequiredCode" type="cdm:SoftAllocationRequiredCodeType">
		
<xs:annotation>
			
<xs:documentation>Soft Allocation Required Code identifies Customers requiring a 'Soft' inventory allocation before Order Management Inventory Management can initiate a 'Hard' inventory allocation.

Soft Allocation Required Code Values:
Spaces - Soft Allocation Not Required
N - Soft Allocation Not Required
Y - Soft Allocation Required
M - Regular and transfer orders entered manually require Soft Allocation</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="softwareVersion" type="xs:string"/>
	
<xs:element name="soldToPartyId" type="cdm:PartyIdType">
		
<xs:annotation>
			
<xs:documentation>Sold To Party Identifier uniquely identifies an instance of PARTY to whom goods and or services are sold.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="sourceSystemOrderNumber">
		
<xs:annotation>
			
<xs:documentation>Source System Order Number holds the Order Number used in the system that generated the ORDER.  Source System Order Number is used in the source system as a across reference to the OMIM Order Number</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:OrderNumberType">
				
<xs:maxLength value="50"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="specialProgramFlag" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Special Program Flag identifies Product Deployment as a special Price Plan.

Valid values:
'A' =&gt; Sprint PCS Fair and Flexible (SM) Plan
Space =&gt; Not a special program Product </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="ssnLast4Digits">
		
<xs:annotation>
			
<xs:documentation>Social Security Number Last 4 Digits  holds tha last 4 digits of the Customer's Social Securiy Number. Used to authenticate the Customer when they or someone on their behalf accesses CJV Web Services.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:SsnLast4DigitsType">
				
<xs:maxLength value="4"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="stockKeepingUnit">
		
<xs:annotation>
			
<xs:documentation>Stock Keeping Unit represents the Sprint Inventory Stock Keeping Unit (SKU).  Stock Keeping Unit identifies a group of PRODUCT instances.  It could identify a handset Model and Model Number, a Kit or an accessory.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:StockKeepingUnitType">
				
<xs:maxLength value="18"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="storeNumber" type="cdm:FacilityIdType">
		
<xs:annotation>
			
<xs:documentation>Store Number  holds the Facility Identifer that uniquely identifies a retail store.  May be printed on the label when shiping to a Distribution Center.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="streetAddressString" type="cdm:StreetAddressStringType">
		
<xs:annotation>
			
<xs:documentation>Street Address String holds all of the individual street address lines concatenated into a single string field.  It is used in some interfaces where individual street address lines are not passed as components.  The street address string does NOT contain the city, state, or postal code.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="streetName" type="cdm:StreetNameType">
		
<xs:annotation>
			
<xs:documentation>Street Name is a USPS Postal Address component that holds the name of a street.  For example in, "123 Main Street", "Main" would reside in Street Name.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="streetNumber" type="cdm:StreetNumberType">
		
<xs:annotation>
			
<xs:documentation>Street Number is a component of a USPS Posatal Address that holds the house or building number on a street.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="streetSuffix" type="cdm:StreetSuffixType">
		
<xs:annotation>
			
<xs:documentation>Street Suffix is a USPS Postal Address component that holds the trailing part of the street name.  For example in, "123 Main Street", "Street" would reside in Street Suffix.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="subInventoryFacilityId">
		
<xs:annotation>
			
<xs:documentation>SubInventory Facility Identifier  represents a subdivision of a warehouse or an RMS store.

Sprint sub-Inventory Facilities:
QA =&gt; Quarantine
MN =&gt; Main
ST =&gt; Stage
PP =&gt; Receiving
HD =&gt; Hold
SC =&gt; Scrap
CN =&gt; Consignment
BR =&gt; BER
TR =&gt; Triage
RT =&gt; Returns</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:FacilityIdType">
				
<xs:maxLength value="2"/>
				
<xs:enumeration value="QA"/>
				
<xs:enumeration value="MN"/>
				
<xs:enumeration value="ST"/>
				
<xs:enumeration value="PP"/>
				
<xs:enumeration value="HD"/>
				
<xs:enumeration value="SC"/>
				
<xs:enumeration value="CN"/>
				
<xs:enumeration value="BR"/>
				
<xs:enumeration value="TR"/>
				
<xs:enumeration value="RT"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="subInventoryFacility" type="cdm:SubInventoryFacilityType">
		
<xs:annotation>
			
<xs:documentation>SubInventory Facility represents a subdivision of a warehouse or an RMS store.

Sprint sub-Inventory Facilities:
QA =&gt; Quarantine
MN =&gt; Main
ST =&gt; Stage
PP =&gt; Receiving
HD =&gt; Hold
SC =&gt; Scrap
CN =&gt; Consignment
BR =&gt; BER
TR =&gt; Triage
RT =&gt; Returns</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="subscriberIdentityModuleIdDec" type="cdm:SubscriberIdentityModuleIdDecType">
		
<xs:annotation>
			
<xs:documentation>Subscriber Identify Module (SIM) Identifier identifies the ''smart'' card installed or inserted into a IDEN mobile telephone containing all subscriber-related data. This facilitates a telephone call from any valid mobile telephone since the subscriber data is used to complete the call rather than the telephone internal serial number.

Length 15 characters.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="subscriberIdentityModuleStockKeepingUnit">
		
<xs:annotation>
			
<xs:documentation>Subscriber Identity Module Stock Keeping Unit containst the SKU of the SIM Card that is associated with an IDEN handset.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:StockKeepingUnitType">
				
<xs:maxLength value="20"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="subscription" type="cdm:SubscriptionType">
		
<xs:annotation>
			
<xs:documentation>SUBSCRIPTION represents the collection point for the various NETWORK CONNECTIVITY SERVICE  and TELECOMMUNICATION EQUIPMENT instances deployed to and available for use by SUBSCRIBER.

At a point in time a SUBSCRIPTION instance is the liability of one and only one instance of INVOICING ACCOUNT.  

Concurrently, at a point in time a SUBSCRIPTION may also be associated with an AGGREGATION ACCOUNT or MASTER ACCOUNT other than an INVOICING ACCOUNT for reporting purposes.

Over time the liability for a SUBSCRIPTION instance may be transfered to different INVOICING ACCOUNT instances.

In PCS the SUBSCRIPTION is independent of a specific  GEOGRAPHIC LOCATION other than for taxing purposes  (see SUBSCRIPTION TAXING ADDRESS).  PRODUCT DEPLOYMENT instances are available for use by an INDIVIDUAL regardless of GEOGRAPHIC LOCATION.

In the Sprint wireline Business Units the SUBSCRIPTION is directly dependent upon  the deployment of PRODUCT instances to a specific GEOGRAPHIC LOCATION.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="subscriptionContactMethodId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Subscription Contaact MEthod Identifier uniquely identifies the instance of Contact Methos and its purpose within the context of the SUBSCRIPTION.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="subscriptionContactMethodEffectiveFromDate" type="cdm:EffectiveFromDateType">
		
<xs:annotation>
			
<xs:documentation>Subscription Contact Method Effective from Date holds the first calendar day the Contact Method fills the specified purpose within the context of the SUBSCRIPTION.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="subscriptionContactMethodEffectiveThruDate" type="cdm:EffectiveThruDateType">
		
<xs:annotation>
			
<xs:documentation>Subscription Contact Method Effective from Date holds the last calendar day the Contact Method fills the specified purpose within the context of the SUBSCRIPTION.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="subscriptionContactMethodPurposeCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Subscription Contact Method Purpose Code identifies the role the Contact Method fills within the context of the SUBSCRIPTION.                                                                   Possible value:                                             "Wireless Service Taxing Address"                   "Authorized User Contact Method"                  "External Account Administrator Contact Method"                                              "Sprint Customer Care Group Contact Method"  etc.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="subscriptionId">
		
<xs:annotation>
			
<xs:documentation>SubscriptionIdentifier uniquely identifies an instance of SUBSCRIPTION .</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:SubscriptionIdType"/>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="subscriptionPartyRole" type="cdm:SubscriptionPartyRoleType"/>
	
<xs:element name="subscriptionPartyRoleCode" type="cdm:PartyRoleCodeType">
		
<xs:annotation>
			
<xs:documentation>Subscription Party Role Code identifies the Role the PARTY plays within the context of the specified SUBSCRIPTION.

 Possible values:
"AUTHORIZED USER"
"EXTERNAL ACCONT ADMINISTRATOR"
"SPRINT ACCOUNTADMINISTRATOR"
"CSM ACCOUNT ADMINISTRATOR"
"CM ACCOUNT ADMINISTRATOR"
"QPASS AUTHORIZED USER"
"SALES CHANNEL"
"CUSTOMER CARE REPRESENTATIVE"
etc.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="subscriptionPartyRoleEffectiveFromDate" type="cdm:EffectiveFromDateType">
		
<xs:annotation>
			
<xs:documentation>Subscription Party Role Effective From Date holds the first calendar day the PARTY fills the role within the context of the SUBSCRIPTION.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="subscriptionPartyRoleEffectiveThruDate" type="cdm:EffectiveThruDateType">
		
<xs:annotation>
			
<xs:documentation>Subscrciption Party Role Effective Thru Date holds the last calendar day the PARTY fills the role within the context of the SUBSCRIPTION.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="subscriptionPartyRoleId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Subsccription PartyRole Identifier uniquely identifies the instance of Party Role within the context of the specified SUBSCRIPTION.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="subscriptionPasswordString" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Subscription Password String holds the characters of the system password used by the authorized user or external account adminitstrator to log into to the system to make changes to the Subscription.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="subscriptionProductDeployment" type="cdm:SubscriptionProductDeploymentType">
		
<xs:annotation>
			
<xs:documentation>SUBSCRIPTION PRODUCT DEPLOYMENT represents the itemized list of a Sprint PRODUCTs  (Price Plans, Services, Telecommunication Equipment and Accessories) purchased, leased or subscribed to by a SUBSCRIPTION.  

In addition to the itemized list of currently subscribed Sprint PRODUCTS, SUBSCRIPTION PRODUCT DEPLOYMENT includes the history of subscribed or purchased PRODUCTs and any future dated PRODUCT assignments.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="subscriptionStatusCode" type="cdm:SubscriptionStatusCodeType">
		
<xs:annotation>
			
<xs:documentation>Subscription Status Code holds the current state of the Customer's Subscription (Service Agreement) set by the Customer, an Account Administrator or Customer Care Representative.

Values:
H (hotline) 
D (disabled)
E (enabled)
S (suspended) 
P (pending number change) 

</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="subscriptionTypeCode" type="cdm:SubscriptionTypeCodeType"/>
	
<xs:element name="switchManagerActivationNumber" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Switch Manager Activation Number is the number of the switch manager switch which should be turned on to activate a service or feature.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="systemCustomerAccountPartyRole" type="cdm:SystemCustomerAccountPartyRoleType">
		
<xs:annotation>
			
<xs:documentation>Billing System Account Party Role holds the data describing the Party's association to Billing Accounts in different billing systems and the role the PARTY plays in those associations.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="systemId" type="cdm:SystemIdType">
		
<xs:annotation>
			
<xs:documentation>System Identifier identifies the System the Customer Account Subscription, Product Deployment, etc. resides in.

Values:
"PLS"
"P2K"
"P2W"
"Ensemble"
"CSM"
"CM"
"Qpass"
"ivr"
"etc."</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="systemElectronicAddressAssignment" type="cdm:SystemElectronicAddressAssignmentType">
		
<xs:annotation>
			
<xs:documentation>System Email Assignment identifies the Mobile Directory Number assigned to the IDM User within System context.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="systemElectronicAddressAssignmentFromDate" type="cdm:SystemElectronicAddressAssignmentFromDateType">
		
<xs:annotation>
			
<xs:documentation>System Electronic Address Assignment From Date holds the first calendar day the the specified Electroinc Address is available for use by the PARTY.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="systemElectronicAddressAssignmentThruDate" type="cdm:SystemElectronicAddressAssignmentThruDateType">
		
<xs:annotation>
			
<xs:documentation>System Electronic Address Assignment Thru Date holds the last calendar day the specified Electroinc Address is available for use by the PARTY.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="systemLoginEffectiveFromDate" type="cdm:EffectiveFromDateType">
		
<xs:annotation>
			
<xs:documentation>System Login Effective Date holds the first calendar day the User ID Password combination was valid.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="systemLoginEffectiveThruDate" type="cdm:EffectiveThruDateType">
		
<xs:annotation>
			
<xs:documentation>System Login Effective Thru Date holds the last calendar day the User ID Password combination was valid.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="systemMdnAssignment" type="cdm:SystemMdnAssignmentType">
		
<xs:annotation>
			
<xs:documentation>System MDN Assignment identifies the Mobile Directory Number assigned to the IDM User within System context.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="systemMdnAssignmentFromDate" type="cdm:EffectiveFromDateType">
		
<xs:annotation>
			
<xs:documentation>System MDN Assignment From Date holds the first calendar day the Mobile Directory Number was assigned to the IDM User.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="systemMdnAssignmentThruDate" type="cdm:EffectiveThruDateType">
		
<xs:annotation>
			
<xs:documentation>System MDN Assignment From Date holds the last calendar day the Mobile Directory Number was assigned to the IDM User.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="systemProductDeploymentPartyRole" type="cdm:SystemProductDeploymentPartyRoleTypeType">
		
<xs:annotation>
			
<xs:documentation>System Product Deployment Party Role  identifies the association of thre PARTY to various Products across different systems. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="systemSubscriptionPartyRole" type="cdm:SystemSubscriptionPartyRoleType">
		
<xs:annotation>
			
<xs:documentation>Billing System Subscription Party Role holds the data describing the association of a PATY to SUBSCRIPTIONS in various Billing Systems and the role the PARTY fills in those associations.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="task" type="cdm:WorkEffortType">
		
<xs:annotation>
			
<xs:documentation>Task represents a type of WORK EFFORT that would be a constituant member of a WORK EFFORT BREAKDOWN of a JOB.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="taxAddressChangeFlag" type="cdm:AddressChangeFlagType">
		
<xs:annotation>
			
<xs:documentation>Flag to indicate if the Taxing address is to be replaced with the newAddress.  
0=Do not change address.  
1=Change Taxing/Coverage address with address in the newAddress record.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="taxAuthority" type="cdm:TaxAuthorityType">
		
<xs:annotation>
			
<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="taxAuthorityId" type="cdm:TaxAuthorityIdType">
		
<xs:annotation>
			
<xs:documentation>Tax Authority ID is a sequence number concatenated to VertexGeographicCityCode, VertexGeographicCountyCode and VertexGeographicStateCode to produce the unique identifier of a Taxing jurisdiction.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="taxAuthorityRangeEndUspsPostalCode" type="cdm:UspsPostalCdType">
		
<xs:annotation>
			
<xs:documentation>Tax Authority Range End USPS PostalCode holds the highest  United States Postal Service Postal Code value of the range deliniating the Tax Authority's jurisdiction.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="taxAuthorityRangeEndUspsPostalExtensionCode" type="cdm:UspsPostalCdExtensionType">
		
<xs:annotation>
			
<xs:documentation>Tax Authority Range End USPS PostalCode Extension holds the highest  United States Postal Service Postal Code Extension value of the range deliniating the Tax Authority's jurisdiction.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="taxAuthorityRangeStartUspsPostalCode" type="cdm:UspsPostalCdType">
		
<xs:annotation>
			
<xs:documentation>Tax Authority Range Start USPS PostalCode holds the lowest United States Postal Service Postal Code value of the range deliniating the Tax Authority's jurisdiction.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="taxAuthorityRangeStartUspsPostalExtensionCode" type="cdm:UspsPostalCdExtensionType">
		
<xs:annotation>
			
<xs:documentation>Tax Authority Range Start USPS PostalCode Extension holds the lowest United States Postal Service Postal Code Extension value of the range deliniating the Tax Authority's jurisdiction.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="taxAuthorityName" type="cdm:TaxAuthorityNameType">
		
<xs:annotation>
			
<xs:documentation>Tax Authority Name is a label  applied to those instances of PARTY of type  that fill the Tax Authority role.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="taxAuthorityCityName" type="cdm:TaxAuthorityNameType">
		
<xs:annotation>
			
<xs:documentation>City name of the tax authority. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="taxAuthorityCountyName" type="cdm:TaxAuthorityNameType">
		
<xs:annotation>
			
<xs:documentation>County name of the tax authority.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="taxAuthorityStateName" type="cdm:TaxAuthorityNameType">
		
<xs:annotation>
			
<xs:documentation>State name of the tax authority.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="taxExemptEffectiveDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>The date that a customer qualifies for a tax exemption. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="taxExemptExpirationDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>The date that a customer no longer qualifies for a tax exemption.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="taxExemptionNumber" type="cdm:TaxExemptionNumberType">
		
<xs:annotation>
			
<xs:documentation>A number assigned by the IRS indicating that an organization is exempt from federal income taxation.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="technicalError" type="cdm:TechnicalErrorType">
		
<xs:annotation>
			
<xs:documentation>Technical Error is a text field provided by the responding application providing error feedback that may be required by technical staffers.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="telecomNbrContactMethod" type="cdm:TelecomNbrContactMethodType">
		
<xs:annotation>
			
<xs:documentation>Telecom Number Contact Method  holds data describing a telecommunication number used  to contact a PARTY.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="telecomNbrTypeCd" type="cdm:TelecomNumberTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Telecommunication NumberType Code identifies the the telephone number as  a Phone, FAX or Pager Number.

Valid values:
"PHONE"
"FAX"
"PAGER"</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="telecomNumber" type="cdm:NanpTelecomNumberType"/>
	
<xs:element name="telecomNumberPurposeCd" type="cdm:PurposeCodeType">
		
<xs:annotation>
			
<xs:documentation>Telecom Number Purpose Code identifies the purpose of the Telecom Contact Method. 

Possible values:
"Preferred Contact"
"Home"
"Work"
"Alternate"
etc.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="telephonyCountryCd" type="cdm:TelephonyCountryCodeType">
		
<xs:annotation>
			
<xs:documentation>Telephony Country Code holds teh one, two or three digit number that, in the World Numbering Plan, identifies each country or integrated numbering plan in the world.  In short, the one, two or three digits that precede the national number in an international phone call.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="fourGFlag" type="cdm:FourGFlagType">
		
<xs:annotation>
			
<xs:documentation>Four G Flag  is a boolean indicator of Fourth Generation Network functionality support.

Values:
true  -&gt; Yes, Fourth Generation Network functionality IS supported
false -&gt; No, Fourth Generation Network functionality IS NOT supported</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="threeGFlag" type="cdm:ThreeGFlagType">
		
<xs:annotation>
			
<xs:documentation>Three G Flag  is a boolean indicator of Third Generation Network functionality support.

Values:
true  -&gt; Yes, Third Generation Network functionality IS supported
false -&gt; No, Third Generation Network functionality IS NOT supported</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="toInventoryLocation" type="cdm:InventoryLocationType"/>
	
<xs:element name="totalKitComponentQuantity" type="xs:decimal">
		
<xs:annotation>
			
<xs:documentation>Total Kit Component Quantity holds the total number of components used in the assembly of the specified Kit.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="totalNumberOfKitsQuantity">
		
<xs:annotation>
			
<xs:documentation>Total Number Of Kits Quantity holds the number of kits the Inventory Work Order will assemble or disassmble.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:decimal"/>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="totalNumberOfMovableUnits" type="xs:decimal">
		
<xs:annotation>
			
<xs:documentation>Total Number of Movable Units holds the count of cartons, boxes, pallets, etc. in the shipment.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="totalNumberOfShipmentLineItems" type="cdm:TotalNumberOfLineItemsType">
		
<xs:annotation>
			
<xs:documentation>Total Number of Shipment Line Items contains the total number of line items on a specific shipment instance.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="totalOrderedQuantity" type="xs:decimal">
		
<xs:annotation>
			
<xs:documentation>Total Ordered Quantity holds the total number of Inventory Items ordered.  This will be the sum of the Order Item Quantities for the Order.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="totalShipmentWeight" type="xs:decimal">
		
<xs:annotation>
			
<xs:documentation>Total Shipment Weight contains the actual weight of all the items in the shipment combined.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="totalShippedQuantity">
		
<xs:annotation>
			
<xs:documentation>Total Shipped Quantity holds the number of items from this Order Item that have been shipped.                                                                  

Total Shipped Quantity should be less than or equal to orderITemQuantity.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:integer">
				
<xs:totalDigits value="10"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="toWorkEffort" type="cdm:WorkEffortType">
		
<xs:annotation>
			
<xs:documentation>To Work Effort is the child WORK EFFORT in a WORK EFFFORT ASSOCIATION such as  WORK EFFORT BREAKDOWN, WORK EFFORT PRECEDENCY or WORK EFFORT CONCURRENCY.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="trailerId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Trailer Identifier holds the Identification number of the Trailer used to ship Goods in a Shipment Route Segment.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="trailingDirection" type="cdm:TrailingDirectionType">
		
<xs:annotation>
			
<xs:documentation>Trailing Direction is a USPS POstal Address component that holds the compass direction that sometimes appears at the end of a street address.  For example in, "123 Main Street East", "East" would reside in Trailing Direction.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="TransactionAcknowledgement" type="cdm:TransactionAcknowledgementType"/>
	
<xs:element name="transactionAcknowledgementId" type="cdm:TransactionAcknowledgementIdType">
		
<xs:annotation>
			
<xs:documentation>Transaction Acknowledgement Identifier may hold one of the following based upon the Transaction Acknowledgement Type Code:

Values:
TYPE          IDENTIFIER TYPE 
'Cust'          Party Identifier
'Item'          Stock Keeping Unit
'Site'           Faciity Identifier
'MEID'         Mobile Equipment ID
'ESN'           Electronic Serial Nbr</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="transactionAcknowledgementTypeCode" type="cdm:TransactionAcknowledgementTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Transaction Acknowledgement Type Code identifies the type of interface transaction being acknowledged.

Values:
'Cust'  - Customer transaction
'Item'  - Inventory transaction
'Site'    - Location transaction 
'MEID'  - MEID transaction
'ESN'    - ESN transaction</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="transactionCode" type="cdm:TransactionCodeType">
		
<xs:annotation>
			
<xs:documentation>Tansaction Code

Valid Transaction Type Code values:
SDR =&gt; SalesOrder
WDR =&gt; WorkOrder
RMA =&gt; RMA
SCM =&gt; ShipConfirm
WCM =&gt; WIPConfirmation
RRC =&gt; RMAReceiptConfirmation
PDR =&gt; PurchaseOrder
EDF =&gt; EDF
PRC =&gt; POReceiptConfirmation
ADJ =&gt; Adjustment
IMS =&gt; ItemMaster
ISN =&gt; InventorySnapshot
UPD =&gt; UpdateOrders</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="transactionDateTime" type="cdm:SimpleDateTimeType">
		
<xs:annotation>
			
<xs:documentation>Transaction Date Time holds the date and Time Transaction occurred</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="transactionDescription" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Transaction Description holds the textual description of the code value in Transaction Code.

Valid Transaction Description values:
SalesOrder
WorkOrder
RMA
ShipConfirm
WIPConfirmation
RMAReceiptConfirmation
PurchaseOrder
EDF
POReceiptConfirmation
Adjustment
ItemMaster
InventorySnapshot
UpdateOrders</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="transactionErrorMessage" type="cdm:ErrorMessageType">
		
<xs:annotation>
			
<xs:documentation>The Transaction Error Message contains textual detail of why a particular transaction failed.  Tansaction Error Message is only populated when there is a non-successful Transaction Status Code value.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="transactionId" type="cdm:TransactionIdType">
		
<xs:annotation>
			
<xs:documentation>Transaction uniquely identifies a grouping of  records.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="transactionQuantity" type="xs:integer">
		
<xs:annotation>
			
<xs:documentation>Transaction Quantity holds the number of Inventory Item units involved in the transaction.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="transactionReasonCode" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Transaction Reason Code                                                   Possible Order Status Change Reason Code values:              “H” =&gt; applying shipping exception                                “X” for updating the packing status                                                                           InventoryAdjustment Transaction Reason Code Value:                            SCR - Scrap transaction 
OUT - Outbound shipping error (cannot fix with shipping action - must use an adjustment) 
RCV - Receiving error 
MFG - Manufacturing error 
CDG - Carrier damage (damaged by transportation carrier) 
WDG - Warehouse damage 
RRE - Returns receiving error 
SYS - System error 
SKU - Sku change error           RK - RESKU</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="transactionRecordTypeCode" type="cdm:TransactionCodeType">
		
<xs:annotation>
			
<xs:documentation>Transaction Record Type Code identifies the subject area of the data in the transaction.

Valid Values:
'C' - Customer
'S' - Site</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="transactionSequenceNbr" type="xs:decimal">
		
<xs:annotation>
			
<xs:documentation>Transaction Sequence Number uniquely identifies a record within the context of a Transaction Identifier value.  Additionally Transaction Sequence Number denotes the processing sequence of the records.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="transactionStatusCode" type="cdm:TransactionStatusCodeType">
		
<xs:annotation>
			
<xs:documentation>The Transaction Status code communicates the status of this particular transaction. Valid values for Commicate Item Cost are:

S  =  Item successfully created and costed in Oracle IM for new items or successfully updated for existing items
C = Item cost update is performed with no reference in source data
F = One of these processes failed - Item Creation, Item Category creation, Item ABC assignment, Item UPC crossreference creation, Item Cost update, Item Update process.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="transactionTypeCode">
		
<xs:annotation>
			
<xs:documentation>Transaction Type Code identifies the Create, Read, Update or Delete (CRUD) functionality of the transaction.

The following distinct lists document the possible value lists known as of this date.  The actual codifcation used will be documented in the mapping deocument. 

Value List A: 
"A" =&gt; Create a new record
"C" =&gt; Update an existing record
"N" =&gt; Cancel

Value List B:
'10' =&gt; Add or Update
'90' =&gt; Close</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:TransactionTypeCodeType">
				
<xs:maxLength value="2"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="transformationFlag">
		
<xs:annotation>
			
<xs:documentation>Transformation Flag indicates whether a transform is needed or not.

Values:
N-No Transformation Required;
Y-Transformation Required</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="xs:string">
				
<xs:maxLength value="1"/>
				
<xs:enumeration value="N"/>
				
<xs:enumeration value="Y"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="transitDays" type="cdm:TransitDaysType">
		
<xs:annotation>
			
<xs:documentation>Transit Days represents the number of days that are added to the Estimated Ship Date to derive the Estimated Delivery Date.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="truckDoorSecuritySealId" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Truck Door Security Seal Id holds the idenification number for metallic tie used to seal the freight carrier's truck doors. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="unapprovedQuantity" type="xs:decimal">
		
<xs:annotation>
			
<xs:documentation>Unapproved Quantity holds the number of items requiring approval that have not yet been approved as of the Requested Shipment Date.                                             If current/system date is greater than Requested Shioment Date then Unapproved Quantity equals Order Item Quantity minus approved quantity                ELSE Unapproved Quantity is set to zero. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="unitOfMeasureCd">
		
<xs:annotation>
			
<xs:documentation>Unit Of Measurement Code represents the set of characters that represents a kind of unit (as of length, surface, volume, dry measure, liquid measure, money, weight, time, etc.), used as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot, 1 square yard, 1 cubic foot, 1 peck, 1 bushel, 1 gallon, 1 cent, 1 ounce, 1 pound, 1 hour, and the like.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:UnitOfMeasureCodeType">
				
<xs:maxLength value="5"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="unitOfMeasureName" type="cdm:UnitOfMeasureNameType">
		
<xs:annotation>
			
<xs:documentation>A Unit of Measure Name is the word or words by which a kind of unit (as of length, surface, volume, dry measure, liquid measure, money, weight, time, etc.), is used as a standard of comparison for others of the same kind.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="unitOfMeasureValue" type="cdm:UnitOfMeasureValueType">
		
<xs:annotation>
			
<xs:documentation>Unit Of Measure Value contains the numeric value of the actual item or instance as specified by the unit of measure code.  For example, if the unit of measure code contains 'Volume', then the unit of measure value would contain the value '16' that represents the volume of a specified item or instance, etc.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="universalProductCodeComponents" type="cdm:UniversalProductCodeComponentsType">
		
<xs:annotation>
			
<xs:documentation>The Universal Product Code Components contains the constituent components of the Universal Product Code (UPC).  These components combine into the 12 decimal digit value of the barcode widely used in the United States and Canada for inventory items in stores.  

The UPC components are:
UPC Prefix Digit
UPC Vendor Code
UPC Serial Product Number
UPC Post Digit</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="upcPostDigit" type="cdm:UpcPostDigitType">
		
<xs:annotation>
			
<xs:documentation>UPC Post Digit holds the last decimal digit representing the binary value of the check digit in the Universal Product Code (UPC).</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="upcPrefixDigit" type="cdm:UpcPrefixDigitType">
		
<xs:annotation>
			
<xs:documentation>UPC Prefix Digit holds the first decimal digit indicating the UPC Vendor Code immediately follows in the Universal Prodcut Code (UPC).</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="upcProductSerialNumber" type="cdm:UpcProductSerialNumberType">
		
<xs:annotation>
			
<xs:documentation>UPC Product Serial Number holds the 5 decimal digits  representing the binary value identifying the Product in the Universal Product Code (UPC).</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="upcVendorCode" type="cdm:UpcVendorCodeType">
		
<xs:annotation>
			
<xs:documentation>UPC Vendor Code holds the  5 decimal digits representing the binary value identifying the supplier of the Product in the Universal Product Code (UPC).</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="urbanAreaId">
		
<xs:annotation>
			
<xs:documentation>Urban Area ID identifies an urban area in the UFMI.  It is the first element of the DirectConnect UFMI number. The format of the UFMI number is: Urban Area Id * Fleet Id * Member Id. Example 164*100*3441.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:UrbanAreaIdType">
				
<xs:maxLength value="7"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="urbanFleetMemberId" type="cdm:UrbanFleetMemberIdType">
		
<xs:annotation>
			
<xs:documentation>Urban Fleet Member ID is an address in a format recognized within iDEN Push-To-Talk (PTT) or Direct Connect. For example, a UFMI number of 500*600*700, translates to 500 is the Urban Area ID, 600 is the Fleet, and 700 is the Member.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="urbanFleetMemberIdConcat">
		
<xs:annotation>
			
<xs:documentation>Urban Fleet Member ID is a concatenation of the Urban Area Id, Fleet Id, and Member Id that represent an address in a format recognized within iDEN Push-To-Talk (PTT) or Direct Connect. For example, a UFMI number of 500*600*700, translates to 500 is the Urban Area ID, 600 is the Fleet, and 700 is the Member.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:UrbanFleetMemberIdConcatType">
				
<xs:maxLength value="23"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="userId">
		
<xs:annotation>
			
<xs:documentation>User Identifier holds a value assigned to a PARTY granting the PARTY some access or privilege in a System, Application or Content.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:UserIdType">
				
<xs:maxLength value="15"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="userName" type="cdm:IndividualNameComponentsType">
		
<xs:annotation>
			
<xs:documentation>User Name holds the name components for the IDM User</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="uspsCountyCode">
		
<xs:annotation>
			
<xs:documentation>United States Postal Service County Code contains the Postal Service 2 character code for identification of a County.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:UspsCountyCodeType">
				
<xs:length value="2"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="uspsPostalAddress" type="cdm:UspsPostalAddressType">
		
<xs:annotation>
			
<xs:documentation>USPS Postal AddressType represents the primitive structures of a United States Postal Service Address.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="uspsPostalCd">
		
<xs:annotation>
			
<xs:documentation>USPS Postal Code contains the first 5 characters of the nine digit USPS Postal Code.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:UspsPostalCdType">
				
<xs:length value="5"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="uspsPostalCdExtension">
		
<xs:annotation>
			
<xs:documentation>USPS Postal Code Extension contains the last 4 characters of the nine digit USPS Postal Code.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:UspsPostalCdExtensionType">
				
<xs:length value="4"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="uspsStateAbbreviation">
		
<xs:annotation>
			
<xs:documentation>A United States Postal Service (USPS) State Abbreviation Code is the set of characters that are selected from a State or Protectorate name and specified by the USPS to represent the name of a State or US Protectorate for the purpose of mail delivery.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:UspsStateAbbreviationType"/>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="verbalLanguagePreferenceFlag" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Veral language Preference Flag identifies the PARTY's language as the language the PARTY preferrs in oral communication.                                                                    Valid values:                                            "Yes" =&gt;  the specified language is the preferrred language for oral communication.  "No" =&gt; the specified language is NOT the preferrred language for oral communication.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="vendor" type="cdm:VendorType">
		
<xs:annotation>
			
<xs:documentation>Vendor is a subtype of PARTY representing a PARTY that supplies  hardware, software or some other PRODUCT. </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="vertexGeographicCityCode" type="cdm:VertexGeographicCityCodeTpe">
		
<xs:annotation>
			
<xs:documentation>VertexGeographicCityCode is a character string concatenated with VertexGeographicCountyCode, VertexGeographicStateCode and Tax Authority ID to produce the unique identifier of a Taxing jurisdiction.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="vertexGeographicCountyCode" type="cdm:VertexGeographicCountyCodeType">
		
<xs:annotation>
			
<xs:documentation>VertexGeographicCountyCode is a character string concatenated with VertexGeographicCityCode, VertexGeographicStateCode and Tax Authority ID to produce the unique identifier of a Taxing jurisdiction.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="vertexGeographicStateCode" type="cdm:VertexGeographicStateCodeType">
		
<xs:annotation>
			
<xs:documentation>VertexGeographicStateCode is a character string concatenated with VertexGeographicCityCode, VertexGeographicCountyCode and Tax Authority ID to produce the unique identifier of a Taxing jurisdiction.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="warehouseFacility" type="cdm:WarehouseFacilityType">
		
<xs:annotation>
			
<xs:documentation>Warehouse Facilityr

Sprint Warehouse Facilities:
RW1 =&gt; Louisville Bldg 1 (Bldg2)
DC1 =&gt; Louisville Bldg 2 (1860)
DC2 =&gt; Reno
PR1 =&gt; Puerto Rico          RMS =&gt; Retail Store</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="warehouseFacilityId">
		
<xs:annotation>
			
<xs:documentation>Warehouse Facility Identifier uniquely identifies a warehouse or distribution center.

Values for Sprint Warehouse Facilities are:
RW1 =&gt; Louisville Bldg 1 (Bldg2)
DC1 =&gt; Louisville Bldg 2 (1860)
DC2 =&gt; Reno
PR1 =&gt; Puerto Rico          
RMS =&gt; Retail Store</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:FacilityIdType">
				
<xs:maxLength value="8"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="wirelessDeviceActivityCode">
		
<xs:annotation>
			
<xs:documentation>The wirelessDeviceActivityCode indicates what activity was last taken on the device in the supply chain steps.

Valid Values:
01  Account issue
02  Subinventory Transfer
03  Direct Inter-Organization Transfer
17  Return Assemblies to WIP
21  Intransit Shipment
31  Account alias issue
32  Miscellaneous issue
33  Sales Order Shipment
35  Issue Components to WIP
40  Account Receipt
41  Account Alias Receipt
42  Miscellaneous Receipt
43  Return Components from WIP
44  WIP Assembly Completion
80  Average Cost Update

The following code values to be assigned after D6682 implementation:
Purchase Receipt
Repair Vendor Receipt
Brightpoint Receipt
Cycle Count Adj Positive
Cycle Count Adj Negative
Adjustment Positive
Adjustment Negative
Return Warehouse Transfer
VOI Purchase Receipt
VOI Cycle Count Adj Positive
VOI Cycle Count Adj Negative
VOI Adjustment Positive
VOI Adjustment Negative</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:WirelessDeviceActivityCodeType">
				
<xs:maxLength value="2"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="wirelessDeviceActivityDate">
		
<xs:annotation>
			
<xs:documentation>The wirelessDeviceActivityDate gives the date that an activity was last taken on the device in the supply chain steps.
Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:WirelessDeviceActivityDateType"/>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="wirelessDeviceAddress" type="cdm:WirelessDeviceAddressType">
		
<xs:annotation>
			
<xs:documentation>Wireless Device Address holds the address for an authenticated device with access to the network.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="wirelessDeviceAddressTypeCode" type="cdm:WirelessDeviceAddressTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Wireless Device Address Type Codes identifies the type of address in Wireless Device Address. 

Possible types:
Medium Access Control Address (MAC Address)
Trusted Server Address</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="wirelessDeviceImplementation" type="cdm:WirelessDeviceImplementationType">
		
<xs:annotation>
			
<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="wirelessDeviceModeCode" type="cdm:WirelessDeviceModeCodeType">
		
<xs:annotation>
			
<xs:documentation>Wireless Device Mode Code is a Sprint defined code used to identify the wireless network technology used by the device.

Possible values:
"A" - Advanced Mobile Phone Service (AMPS)
"C" - Code Division Multiple Access (CDMA)
"D" - CDMA and AMPS
"T" - Time Division Multiple Access (TDMA)
"I" - Integrated Digital Enhanced Network (IDEN)</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="wirelessDevicePartyRole" type="cdm:WirelessDevicePartyRoleType">
		
<xs:annotation>
			
<xs:documentation>Wireless Device Party Role identifies the the various PARTYs associated with a specific device and the roles the PARTYs fill in the association.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="wirelessDevicePartyRoleCode" type="cdm:PartyRoleCodeType">
		
<xs:annotation>
			
<xs:documentation>Wireless Device Party Role Code identifies the role the specified PARTY fills in the association to the specified Device.

Possible roles:
"Owner"
"Account Administrator"
"Authorized User"</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="wirelessDevicePartyRoleEffectiveFromDate" type="cdm:EffectiveFromDateType">
		
<xs:annotation>
			
<xs:documentation>Wireless Device Party Role Effective From Date holds the first calendar day the specified PARTY filled the specified role within the context of the Device.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="wirelessDevicePartyRoleEffectiveThruDate" type="cdm:EffectiveThruDateType">
		
<xs:annotation>
			
<xs:documentation>Wireless Device Party Role Effective Thru Date holds the last calendar day the specified PARTY filled the specified role within the context of the Device.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="wirelessDeviceTypeCode">
		
<xs:annotation>
			
<xs:documentation>Wireless Device Type Code is a Sprint defined code used to identify the type of Wireless Network Access Device.

Possible Device Types:
"C" - CELLULAR
"D" - Personal Communication Service (PCS) and CELLULAR
"K" - Personal Communication Service (PCS) with Enhanced Variable Rate Coding (EVRC)
"L" - Personal Communication Service (PCS) and CELLULAR with Enhanced Variable Rate Coding (EVRC)
"M" - HYBRID
"P" - Personal Communication Service (PCS)</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:WirelessDeviceTypeCodeType">
				
<xs:length value="1"/>
				
<xs:enumeration value="C"/>
				
<xs:enumeration value="D"/>
				
<xs:enumeration value="K"/>
				
<xs:enumeration value="L"/>
				
<xs:enumeration value="M"/>
				
<xs:enumeration value="P"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="wirelessNetworkAccessDevice" type="cdm:WirelessNetworkAccessDeviceType">
		
<xs:annotation>
			
<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="withinCityLimitsYesNoCd">
		
<xs:annotation>
			
<xs:documentation>Within City Limits Yes No Code is a Yes/No flag  indicating the customer address is within the city limit or is outside the city limit.</xs:documentation>
		</xs:annotation>
		
<xs:simpleType>
			
<xs:restriction base="cdm:WithinCityLimitsYesNoCdType">
				
<xs:maxLength value="3"/>
				
<xs:enumeration value="Yes"/>
				
<xs:enumeration value="No"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	
<xs:element name="workEffort" type="cdm:WorkEffortType">
		
<xs:annotation>
			
<xs:documentation>Work Effort holds the detail describing a WORK EFFORT instance.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="workEffortActualFinishDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Work Effort Actual Finish Date hold the calendar day the WORK EFFORT was completed.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="workEffortActualFinishTime" type="cdm:SimpleTimeType">
		
<xs:annotation>
			
<xs:documentation>Work Effort Actual Finish Time holds the hour, minute and secon of the Work Effort Actual Finish Date the WORK EFFORT was completed.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="workEffortActualStartDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="workEffortActualStartTime" type="cdm:SimpleTimeType"/>
	
<xs:element name="workEffortAssociationFromDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Work Efort Association From Date holds the first calendar day the association from one WORK EFFORT to another exists.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="workEffortAssociationThruDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Work Effort Assciation Thru Date holds the last calendar day the associaiton from one WORK EFFORT to anoter exists.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="workEffortBreakdown" type="cdm:WorkEffortAssociationType">
		
<xs:annotation>
			
<xs:documentation>Work Effort Breakdown holds the parent child relationship of a  decomposition of a WORK EFFORT into its constituent WORK EFFORT instances.  For example, PROGRAMs might be broken down into PROJECTs, which may be broken down into ACTIVITYs, which may be broken down into TASKs                   </xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="workEffortComment" type="xs:string"/>
	
<xs:element name="workEffortConcurrency" type="cdm:WorkEffortAssociationType">
		
<xs:annotation>
			
<xs:documentation>Work Effort Concurrency holds the relationship from a WORK EFFORT to another WORK EFFORT that must be performed at the same time.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="workEffortPrecedency" type="cdm:WorkEffortAssociationType">
		
<xs:annotation>
			
<xs:documentation>Work Effort Precedency holds the relationship from a WORK EFFORT to another WORK EFFORT that must be completed before it can begin.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="workEffortEstimatedHours" type="xs:decimal"/>
	
<xs:element name="workEffortId" type="xs:string"/>
	
<xs:element name="workEffortLongDescription" type="xs:string"/>
	
<xs:element name="workEffortName" type="xs:string"/>
	
<xs:element name="workEffortPurposeCd" type="xs:string"/>
	
<xs:element name="workEffortScheduledFinishDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="workEffortScheduledFinishTime" type="cdm:SimpleTimeType"/>
	
<xs:element name="workEffortScheduledStartDate" type="cdm:SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="workEffortScheduledStartTime" type="cdm:SimpleTimeType"/>
	
<xs:element name="workEffortShortDescription" type="xs:string"/>
	
<xs:element name="workEffortStatusCd" type="xs:string"/>
	
<xs:element name="workEffortTotalHoursAllowed" type="xs:decimal"/>
	
<xs:element name="workEffortTotalDollarsAllowed" type="xs:decimal"/>
	
<xs:element name="workEffortTypeCd" type="xs:string"/>
	
<xs:element name="workOrderFulfillment" type="cdm:WorkOrderFulfillmentType">
		
<xs:annotation>
			
<xs:documentation>Work Order Fulfillment contains the details of a Work Order and the Job necessary to complete the Work Order.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="workOrderNumber" type="cdm:OrderNumberType">
		
<xs:annotation>
			
<xs:documentation>Work Order Number uniquely identifies an instance of Work Order.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="workOrderTypeCode" type="cdm:OrderTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Work Order Type Code

Values:
G050_WO_RF
G070_REKIT
WO_KIT
WO_DEKIT
WO_NST
WO_PLANNED</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="workRequirement" type="cdm:WorkRequirementType">
		
<xs:annotation>
			
<xs:documentation>Work Requirement represents the need to perform some type of work.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:element name="workRequirementFulfillment" type="cdm:WorkRequirementFulfillmentType"/>
	
<xs:element name="writtenLanguagePreferenceFlag" type="xs:string">
		
<xs:annotation>
			
<xs:documentation>Written language Preference Flag identifies the PARTY's language as the language the PARTY preferrs in written communication.                                                                    Valid values:                                             "Yes" =&gt;  the specified language is the preferrred language for written communication.                                          "No" =&gt; the specified language is NOT the preferrred language for written communication.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
<xs:simpleType name="AbaRoutingNumberType">
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="9"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="AccountCodeType">
		
<xs:annotation>
			
<xs:documentation>Account Code is used to allocate processing costs back to the department for whom the processing was done.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="AccountHeirarchyMemberFlagType">
		
<xs:annotation>
			
<xs:documentation>Account Hierarchy Member Flag

Valid Values:
Y - Indicates the account belongs to a hierarchy of accounts. 
N – Otherwise.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="1"/>
			
<xs:enumeration value="Y"/>
			
<xs:enumeration value="N"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="AccountNumberType">
		
<xs:annotation>
			
<xs:documentation>Account Number uniquely identifies an Account.  The Account may be a Financial Account, a Customer Account, Billing Account, etc.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="30"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="AccountStatusCodeType">
		
<xs:annotation>
			
<xs:documentation>Account Status Code is used to indicate the status of the account. Valid values are:
A - Active
F - Final
N - Non Paid Disconnect
W - Write Off</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="1"/>
			
<xs:enumeration value="A"/>
			
<xs:enumeration value="F"/>
			
<xs:enumeration value="N"/>
			
<xs:enumeration value="W"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="AccountTypeCodeType">
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="20"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ActiveExpiredCodeType">
		
<xs:restriction base="xs:string">
			
<xs:length value="1"/>
			
<xs:pattern value="A"/>
			
<xs:pattern value="E"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ActualOrderTotalCostType">
		
<xs:annotation>
			
<xs:documentation>Actual Order Total Cost holds the total cost of the Order including taxes.  The format of the field is 999,999,999.99 rounded up two decimal places.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:decimal">
			
<xs:totalDigits value="14"/>
			
<xs:fractionDigits value="2"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ActualShipDateType">
		
<xs:restriction base="cdm:SimpleDateType"/>
	</xs:simpleType>
	
<xs:simpleType name="ActualShippingCostType">
		
<xs:restriction base="xs:decimal">
			
<xs:totalDigits value="14"/>
			
<xs:fractionDigits value="2"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ActualShipmentDateTimeType">
		
<xs:annotation>
			
<xs:documentation>The date and time the shipment actually occurred.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="cdm:SimpleDateTimeType"/>
	</xs:simpleType>
	
<xs:simpleType name="AddressChangeFlagType">
		
<xs:annotation>
			
<xs:documentation>Flag to indicate if the specified address is to be replaced with the newAddress.  
0=Do not change address  
1=Change address with address in the newAddress record.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="1"/>
			
<xs:enumeration value="0"/>
			
<xs:enumeration value="1"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="AddressSequenceNumberType">
		
<xs:annotation>
			
<xs:documentation>Address Sequence Number is used to identify the address to be updated, changed, or deleted.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:long">
			
<xs:totalDigits value="5"/>
			
<xs:fractionDigits value="0"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="AddressTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Address Type Code distinguishes an address as either a Military address, Rural address, Street address, PO Box address or a Foreign address. </xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="1"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="AddressValidationCodeType">
		
<xs:annotation>
			
<xs:documentation>Code to indicate results of address validation.
0 = System unavailable
1 = Address was formatted and validated with different results
2 = Address was formatted and validated with same results
3 = Address was already formatted but was validated
4 = Address was already formatted and validated
5 = Address was formatted but could not be validated
6 = Address was already formatted and could not be validated
</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="1"/>
			
<xs:enumeration value="0"/>
			
<xs:enumeration value="1"/>
			
<xs:enumeration value="2"/>
			
<xs:enumeration value="3"/>
			
<xs:enumeration value="4"/>
			
<xs:enumeration value="5"/>
			
<xs:enumeration value="6"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="AddressVerificationSystemDeliveryPointBarCodeType">
		
<xs:annotation>
			
<xs:documentation>Address Verification System Delivery Point Bar Code Addon contains the delivery point bar code add on and check digit from CODE ONE address verification software.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="20"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="AddressVerificationSystemOverrideCodeType">
		
<xs:annotation>
			
<xs:documentation>Address Verificaton System Override Code is used to add an address that cannot be formatted into the exact same format as the address validation produces or to add an address if the address validation system is not available.

Values:
1 = TRUE -- Override the address verification system and add the address
0 = FALSE -- DO NOT override the address verification system. DO NOT add the address.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="1"/>
			
<xs:enumeration value="0"/>
			
<xs:enumeration value="1"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="AddressVerificationSystemReturnCodeType">
		
<xs:annotation>
			
<xs:documentation>Address Verification System Return Code holds the error or completion code returned from the address verification system.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="20"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="AddressVerificationSystemRuralRouteTypeCodeType">
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="20"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="AdjustmentReceiptTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Adjustment Receipt Type Code contains a value identifying the origin of the Adjustment.

Valid Values:
'1' -- Purchase Order Receipt
'2' -- Repair Vendor Receipt
'3' -- Brightpoint Receipt
'4' -- Cycle Count Adjustments
'5' -- Manual Inventory Adjustments
'6' -- Material Status Changes e.g.  damaged, hold, triage, etc
'7' -- VOI Ownership Transfer
'8' -- Return Warehouse Transfer</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="1"/>
			
<xs:enumeration value="1"/>
			
<xs:enumeration value="2"/>
			
<xs:enumeration value="3"/>
			
<xs:enumeration value="4"/>
			
<xs:enumeration value="5"/>
			
<xs:enumeration value="6"/>
			
<xs:enumeration value="7"/>
			
<xs:enumeration value="8"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="AdvancedShipmentNotificationIdType">
		
<xs:restriction base="cdm:AdvancedShipmentNotificationLineIdType"/>
	</xs:simpleType>
	
<xs:simpleType name="AdvancedShipmentNotificationLineIdType">
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="20"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="AdvancedShipmentNotificationLineQuantityType">
		
<xs:restriction base="xs:integer">
			
<xs:totalDigits value="4"/>
			
<xs:fractionDigits value="0"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="AdvancedShipmentNotificationTypeCodeType">
		
<xs:restriction base="xs:string">
			
<xs:length value="1"/>
			
<xs:enumeration value="P"/>
			
<xs:enumeration value="R"/>
			
<xs:enumeration value="S"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="AllocatedQuantityType">
		
<xs:annotation>
			
<xs:documentation>Allocated Quantity represents the number of items (SKU) reserved for an order.  Only items in "Main" can be Reserved.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:integer">
			
<xs:totalDigits value="10"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ApartmentDesignatorType">
		
<xs:annotation>
			
<xs:documentation>Apartment Designator is an Address Component that holds a value identifying the address as an apartment. 

Examples:
"APT"
"UNIT"
Etc.
</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ApartmentNumberType">
		
<xs:annotation>
			
<xs:documentation>Apartment Number is an Address Component that contains the identifier of the apartment within the context of a bilding's postal address.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ApplicationErrorStringType">
		
<xs:annotation>
			
<xs:documentation>Application Error String is a text field provided by the responding application providing user-comprehensible error feedback.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ApplicationErrorType">
		
<xs:annotation>
			
<xs:documentation>Application Error is a text field provided by the responding application providing user-comprehensible error feedback.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ApplicationFlexDataType">
		
<xs:annotation>
			
<xs:documentation>Application Flex Data contains application defined information.  It has a  maximum length of  1024.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ApplicationIdentifierType">
		
<xs:annotation>
			
<xs:documentation>Application Identifier uniquely identifies an Application</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ApplicationGroupType">
		
<xs:annotation>
			
<xs:documentation>Application Group is a unique Application Id that identifies the application that generated the request.  The application that generated a request needs to be captured within the message context.  This helps in tracking the source of errors (when messages start arriving with flawed contents), and in reporting on system usage patterns (what apps are sending messages where).  In cases where the messaging system has been architected with clearly defined component naming conventions, it should be possible to take the originating requester’s ‘name’, and relate it back to a particular responsible party.  This is three-part name of which ApplGroup is just the first.  Alphanumeric only.  Should usually be a Sprint ApplID.  If there is no Applid assigned the EAI Development staff should be contacted to define a unique applicationGroup.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ApplicationReferenceType">
		
<xs:annotation>
			
<xs:documentation>Application Reference holds an application specific unique identifier that has its origin in some business process, like an ‘order number’.  For example, in an audit log it could be included, and used as a search criteria.  A particular application reference value may appear on a number messages if, for example, several transaction messages are generated in the process of completing the overall business process to which it is related.
This is a 1 - 24 character optional field, with no restriction as to content, beyond the requirement that values be text based.  Imbedded spaces and periods are acceptable
</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="AttentionTextType">
		
<xs:annotation>
			
<xs:documentation>Attention Text of the mailing address.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="40"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="AuthenticationCertificateType">
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="AuthenticationKeyType">
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="BackOrderFlagType">
		
<xs:annotation>
			
<xs:documentation>Back Order Flag inidcates whether the specified Inventory Item is in stock and available for shipment or out of stock and not available for shipment.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="BackOrdersAcceptedFlagType">
		
<xs:annotation>
			
<xs:documentation>Back Orders Accepted Flag contains the Customer's designationas to whether they allow back orders when completeShipmentRequiredFlag equals 'N', Individual ordered items from an single Order may be shipped .</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="BatchRecordIdType">
		
<xs:annotation>
			
<xs:documentation>Batch Record Identifier contains a numeric value that uniquely identifies a a Bulk Message transaction record within the context of a Bulk Message Batch Identifier value.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	
<xs:simpleType name="BillingSystemCodeType">
		
<xs:annotation>
			
<xs:documentation>Billing System Code is used to specify which Billing System is responsible for providing billing for the specified MDN.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="3"/>
			
<xs:enumeration value="P2K"/>
			
<xs:enumeration value="ENS"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="BirthDateType">
		
<xs:annotation>
			
<xs:documentation>Birth Date contains the calendar month, day and year on which an Individual  was born.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:date"/>
	</xs:simpleType>
	
<xs:simpleType name="BomFromToRelationshipCodeType">
		
<xs:annotation>
			
<xs:documentation>BOM From To Relationship Code identifies the From To of the Inventory Item to other Inventory Items in a Bill Of Materials.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="BomLevelType">
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="CaseSensitiveFlagType">
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="CityNameType">
		
<xs:annotation>
			
<xs:documentation>City Name holds the textual string identifying a City.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="CombinedDeliveriesAllowedFlagType">
		
<xs:annotation>
			
<xs:documentation>Combined Deliveries Allowed Flag contains the Customer's designation as to whether they allow deliveries to be combined into a single delivery or require separate deliveries.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="CombinePickTicketsFlagType">
		
<xs:annotation>
			
<xs:documentation>Combine Pick Tickets Flag identifies Sales Orders that may be combined with other Sales Orders into a single aggregated Shipment.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="CompleteShipmentRequiredFlagType">
		
<xs:annotation>
			
<xs:documentation>Complete Shipment Required Flag identifies an Order where the entire list of ordered items must be shipped or nothing is shipped.  Values: 'Y' =&gt; The entire list of ordered items from a single Order must be shipped in a single shipment. 'N' =&gt; Individual ordered items from an single Order may be shipped in several different shipments.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ComponentGroupType">
		
<xs:annotation>
			
<xs:documentation>Component Group identifies a major sub-group within the applicationGroup (like a project or sub-system).</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="30"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ComponentIdType">
		
<xs:annotation>
			
<xs:documentation>Component Identifier uniquely identifies an instance of Component within the context of a Component Implementation.                                           Component Identifier identifeis the MDN, MSID, IMEI, SIM ID, Network Access Device, etc. implemented within th scope of the deployed Price Plan.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ComponentNameType">
		
<xs:annotation>
			
<xs:documentation>Component Name identifies the actual software component within the componentGroup that is responsible for the message.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="30"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ContactMethodIdType">
		
<xs:annotation>
			
<xs:documentation>Contact Method Identifier uniquely identifies an instance of Contact Method within the context of a PARTY or FACILITY.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="30"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ContactMethodTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Contact Method Type Code uniquely identifies a  method that may be used to contact a PARTY, CUSTOMER ACCOUNT, SUBSCRIPTION, etc.

Values:
"Electronic Address"
"Telecommunication Number"
"USPS Postal Address"</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ContractAssentFlagType">
		
<xs:restriction base="xs:boolean"/>
	</xs:simpleType>
	
<xs:simpleType name="ContainerIdType">
		
<xs:annotation>
			
<xs:documentation>CONTAINER represents a more granular location or package residing within a FACILITY or SHIPMENT process.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ContainerItemQuantityType">
		
<xs:annotation>
			
<xs:documentation>Container Item Quantity holds the total number of Items being shipped within this container.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	
<xs:simpleType name="ContentTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Content Type Code is used to capture the particular syntax that is used for data articulation in the message.  Typically today it has been used with the value of “XML”</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="CreditCheckRequiredFlagType">
		
<xs:annotation>
			
<xs:documentation>Credit Check Required Flag indicates whether the Customer Requires a Credit Check.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="CreditRestrictionCodeType">
		
<xs:annotation>
			
<xs:documentation>Credit Restriction Code.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="1"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="CustomerAccountNumberType">
		
<xs:annotation>
			
<xs:documentation>Customer Account Number uniquely identifies an Account that represents ongoing business relationship .</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="CustomerAuthenticationCodeType">
		
<xs:annotation>
			
<xs:documentation>Customer Authentication Code is returned from the Message Broker indicating whether the Customer is authenticated or not to use the CJV Web Services.

Values:
True - Customer Authenticated
False - Customer is not authenticated </xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:boolean"/>
	</xs:simpleType>
	
<xs:simpleType name="CustomerCategoryCodeType">
		
<xs:annotation>
			
<xs:documentation>Order Customer Category Code provides a mechnism to categorizes Customers.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="CustomerClassCodeType">
		
<xs:annotation>
			
<xs:documentation>Customer Class Code provides a mechanism to categorize Customers within various functionalities and other categories.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="CustomerProspectCodeType">
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="CustomerTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Customer Type Code provides a mechanism for categorizing Customers within the context of various functionalities.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="1"/>
			
<xs:enumeration value="I"/>
			
<xs:enumeration value="B"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="DefaultPaymentAmountType">
		
<xs:annotation>
			
<xs:documentation>Default Payment Amount is the default payment to be deducted from the payment card.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	
<xs:simpleType name="DeliveryRouteNumberType">
		
<xs:annotation>
			
<xs:documentation>Delivery Route Number holds the idenifier assigned by the United States  Postal Service to designate a pre-set path taken by a Postal Delivery Person to deliver mail, usually to a rural area.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="DeviceSerialNbrType">
		
<xs:annotation>
			
<xs:documentation>Device Serial Number a unique number that is embedded electronically by the manufacturer into a wireless communication device that identifies that individual unit.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:minLength value="8"/>
			
<xs:maxLength value="20"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="DeviceSerialNbrCdType">
		
<xs:annotation>
			
<xs:documentation>Device Serial Number Code is a value that classifies a device serial number as being an ESN, MEID, MSN, IMEI, or SIM.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:enumeration value="A"/>
			
<xs:enumeration value="D"/>
			
<xs:enumeration value="E"/>
			
<xs:enumeration value="I"/>
			
<xs:enumeration value="K"/>
			
<xs:enumeration value="M"/>
			
<xs:enumeration value="N"/>
			
<xs:enumeration value="S"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="DialogReferenceType">
		
<xs:annotation>
			
<xs:documentation>Dialog Reference is a 24 character required field, that should be unique within the scope of the EAI system.  Typical generation of this field will consist of the first eight characters of the MQSeries QManager name within which the message originated, followed by a hexadecimal representation of a binary high-resolution date/time stamp, or other system attribute that would be expected to be unique.  To maintain uniqueness, it is important that all MQSeries QManagers be named with names that are unique within the first eight characters.  External parties may elect to use other schemes to generate unique values, as long as they can be represented in text.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="DialogSubTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Dialog Subtype Code 

Values:
1=Business transaction; (what each calling application needs to send with a request)
2=internal transaction;
3=internal response;
4=business response; (what each calling application will receive with a reply)
5=System message  
6=Not Used

This value must be set on both the request and reply message LSprint BTs  If not need this value must be set to 6.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="DialogTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Dialog Type Code is used to inform the receiving party of the sort of exchange that is being initiated.

Values:
"1’ = Oneway dialog; 
‘2’ = Request and Reply dialog</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="DocumentIdType">
		
<xs:annotation>
			
<xs:documentation>Document Identifier is a unique number used to differentiate types of documents used in a business.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="EffectiveFromDateType">
		
<xs:annotation>
			
<xs:documentation>Effective From Date Type holds the first calendar day  a Role, preference, assignment, etc. the PARTY's preference went into effect.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="cdm:SimpleDateType"/>
	</xs:simpleType>
	
<xs:simpleType name="EffectiveThruDateType">
		
<xs:annotation>
			
<xs:documentation>Effective Thru Date holds the last calendar day Role, Preference, Assignment, etc. was in effect.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="cdm:SimpleDateType"/>
	</xs:simpleType>
	
<xs:simpleType name="ElectronicAddressStringType">
		
<xs:annotation>
			
<xs:documentation>ElectronicAddressString represents the character string of the electronic address.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ElectronicAddressTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Electronic Address Type Code identifies the instance as one of the following:
1) Email Contact Method
2) Internet Protocol Address Contact Method
3) Web Address Contact Method</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ElectronicBillingIndicatorType">
		
<xs:annotation>
			
<xs:documentation>The Electronic Billing Indicator is used to indicate whether or not the CUSTOMER has signed up for electronic billing. Valid values are:
0 - False, Not Signed up for electronic billing
1 - True, Signed up for electronic billing.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="1"/>
			
<xs:enumeration value="0"/>
			
<xs:enumeration value="1"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="EmailProtocolType">
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="EnrollmentCancelReasonCodeType">
		
<xs:annotation>
			
<xs:documentation>Reason code for removing a payment card enrollment.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="6"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="EnrollmentTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Enrollment Type defines the type of payment card enrollment.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:enumeration value="V"/>
			
<xs:enumeration value="K"/>
			
<xs:enumeration value="A"/>
			
<xs:enumeration value="D"/>
			
<xs:enumeration value="C"/>
			
<xs:enumeration value="P"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ErrorDescriptionType">
		
<xs:annotation>
			
<xs:documentation>Error Description holds a textual narrative dcescribing an error. </xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ErrorMessageType">
		
<xs:annotation>
			
<xs:documentation>The Transaction Error Message contains textual detail of why a particular transaction failed.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ErrorSystemType">
		
<xs:annotation>
			
<xs:documentation>Error System identifies the System that had the error.  (Ensemble, P2K, Lightbridge, etc).</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ErrorTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>The Error Type Code identifies the type of error transaction being processed.
For example:
Order
OrderItem
ESN
MEID
etc.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="5"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ErrorValueIdType">
		
<xs:annotation>
			
<xs:documentation>The Error Value Id holds the actual identifier of the error type being processed.  For example:

ORD - Order Number
OIM - Order Item Id
ESN - Electronic Serial Number
SKU - Stock Keeping Unit
MEID - Mobile Equipment Id
</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="EvdoFlagType">
		
<xs:annotation>
			
<xs:documentation>EVDO Flag  is a boolean indicator of EVDO functionality support.

Values:
true  -&gt; Yes, EVDO functionality IS supported
false -&gt; No, EVDO functionality IS NOT supported</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:boolean"/>
	</xs:simpleType>
	
<xs:simpleType name="EvdoRevAFlagType">
		
<xs:annotation>
			
<xs:documentation>EVDO Rev A Flag  is a boolean indicator of EVDO Revision A functionality support.

Values:
true  -&gt; Yes, EVDO Revision A functionality IS supported
false -&gt; No, EVDO Revision A functionality IS NOT supported</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:boolean"/>
	</xs:simpleType>
	
<xs:simpleType name="ExternalSystemUserIdType">
		
<xs:annotation>
			
<xs:documentation>External System User Identifier contains the identifier of the person as defined in an external system.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="FacilityIdType">
		
<xs:annotation>
			
<xs:documentation>Facility Identifier uniquely identifies an instaqnce of FACILITY.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="FacilityNameType">
		
<xs:annotation>
			
<xs:documentation>Facility Name holds the name of the FACILITY.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="FacilitySystemEntryDateType">
		
<xs:annotation>
			
<xs:documentation>Facility System Entry Date represents the date the information describing the FACILITY was entered into  a Sprint System.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="cdm:SimpleDateType"/>
	</xs:simpleType>
	
<xs:simpleType name="FacilityTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Facility Type Code identifies the type of FACILITY identified by the Facility Identifier.   </xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="FieldNameType">
		
<xs:annotation>
			
<xs:documentation>Field Name Type holds the name of a data element in an interface Logical Unit Of Work.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="FirstNameType">
		
<xs:annotation>
			
<xs:documentation>First Name or "Given Name" is a name which specifies and differentiates between members of a group of individuals, especially a family, all of whose members usually share the same family name.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="40"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="FleetIdType">
		
<xs:annotation>
			
<xs:documentation>Fleet Id is the second element of the DirectConnect UFMI number. The format of the UFMI number is: Urban User Id * Fleet Id * Member Id. Example 164*100*3441.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="FourGFlagType">
		
<xs:annotation>
			
<xs:documentation>Four G Flag  is a boolean indicator of Fourth Generation Network functionality support.

Values:
true  -&gt; Yes, Fourth Generation Network functionality IS supported
false -&gt; No, Fourth Generation Network functionality IS NOT supported</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:boolean"/>
	</xs:simpleType>
	
<xs:simpleType name="FractionalStreetNumberType">
		
<xs:annotation>
			
<xs:documentation>Fractional Street Number is a USPS Postal Address component that holds a fractional number that is added to the Street Number to identify an apartment at a Street Address.  For example in, "1231/2 Main Street" the "1/2" would be stored in Fractional Street Number.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="FreightCarrierDeterminesRoutingFlagType">
		
<xs:annotation>
			
<xs:documentation>Freight Carrier Determines Routing Flag  identifies whether the Shipment Method is chosen by the Freight Carrier of by the Customer.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="FreightChargeType">
		
<xs:annotation>
			
<xs:documentation>The freight charge is the carrier's published charge for shipping items of a specific type and is typically determined by freight class.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	
<xs:simpleType name="GenderCodeType">
		
<xs:annotation>
			
<xs:documentation>Gender Code Type identifies the PARTY as a Male or Female.

Values:
"M" - Male
"F" - Female</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="GeographicBoundaryIdType">
		
<xs:annotation>
			
<xs:documentation>Geographic Boundary Identifier uniquely identifies an arbitray geographic area.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="GloballyUniqueIdentifierType">
		
<xs:annotation>
			
<xs:documentation>Globally Unique Identifier (GUID) holds an internally generated identifier for the object. </xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:minLength value="15"/>
			
<xs:maxLength value="16"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="HighPerformancePushToTalkIdStringType">
		
<xs:annotation>
			
<xs:documentation>High Performance Push To Talk Identifier contains the concatenation of a user ID and a domain.The user ID can be 15 chars maximum and the domain can be 24 chars maximum so a total of 40 characters including ‘@’.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="40"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="HighPriorityNoteFlagType">
		
<xs:annotation>
			
<xs:documentation>Flag that indicates that a note is high priority or not.

Valid Values:
1 = TRUE (Indicates it is a high priority note.)
0 = FALSE (Indicates it is not a high priority note.)</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="1"/>
			
<xs:enumeration value="1"/>
			
<xs:enumeration value="0"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="I2ExtractRequiredFlagType">
		
<xs:annotation>
			
<xs:documentation>I2 Extract Required Flag identifies those CUSTOMER ORDER records that must always be extracted and sent to I2.  This is necessary so I2 can plan for the CUSTOMER.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="IdenFlagType">
		
<xs:annotation>
			
<xs:documentation>The iDen Flag is a boolean indicator identifying the device as having IDEN network capability.  

Values:
true  -&gt; IDEN Network capable 
false -&gt; Not IDEN Network Capable.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:boolean"/>
	</xs:simpleType>
	
<xs:simpleType name="IdentificationProofAnswerType">
		
<xs:annotation>
			
<xs:documentation>Identification Proof Answer is the answer to the Identificaiton Proof Question supplied by the PARTY to be used as proof of identity in Password updates.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="IdentificationProofQuestionType">
		
<xs:annotation>
			
<xs:documentation>Identification Proof Question holds an question that theoretically cna only be answered by the PARTY identified by the Login UserId  thus proving identity.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="InstructionSequenceNumberType">
		
<xs:annotation>
			
<xs:documentation>Instruction Sequence Number holds a number identifying the Instruction Text's ordinal position within a set of Instruction Text instances.  Instruction Sequence Number will increment with each occurrence of Instruction Text.  The instruction Sequence Number value is unique within the context of a set of Instuctions.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	
<xs:simpleType name="InstructionTextType">
		
<xs:annotation>
			
<xs:documentation>Instruction Text  holds the textual content of the instruction.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="100"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="InstructionTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Instruction Type Code Type categorizes the Instructions</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="InternationalMobileEquipmentIdDecType">
		
<xs:annotation>
			
<xs:documentation>International Mobile Equipment Identfier is a wireless telecommunications term. An equipment identification number, similar to a serial numberi, used to identify a wireless network access device.

Length 15 characters.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="InternationalMobileSubscriberIdentityStringType">
		
<xs:annotation>
			
<xs:documentation>International Mobile Subscriber Identity holds a unique identifier allocated to each mobile subscriber in a GSM and UMTS network. It consists of a MCC (Mobile Country Code), a MNC (Mobile Network Code) and a MSIN (Mobile Station Identification Number).</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="16"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ItemUnitCostType">
		
<xs:annotation>
			
<xs:documentation> Item Unit Cost is the current cost per unit.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	
<xs:simpleType name="InventoryItemQuantityType">
		
<xs:annotation>
			
<xs:documentation>Inventory Item Quantity is the total number of inventory items summed for a particular reason.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	
<xs:simpleType name="InventoryTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Inventory Type Code 

Valid Values:
"F" =&gt; Finished Good
"R" =&gt; Raw Good</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="InventoryWorkOrderProcessTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Inventory Work order Process Type Code identifies the type of Bill Of Materials work required by teh Work Order.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="InvoicedItemQuantityType">
		
<xs:annotation>
			
<xs:documentation>The quantity of items that have been invoiced.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	
<xs:simpleType name="InvoiceItemCaptionType">
		
<xs:annotation>
			
<xs:documentation>Invoice Caption is a descriptive phrase of the Product which appears on the invoice</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="40"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="Iso2CharCountryCodeType">
		
<xs:annotation>
			
<xs:documentation>An International Standardization Organization, ISO, 2-Charater Country Code is the set of two characters that are assigned by the ISO to represent the name of a soverign nation.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="Iso3CharCountryCodeType">
		
<xs:annotation>
			
<xs:documentation>An International Standardization Organization, ISO, 3-Character Country Code is the set of three characters that are assigned by the ISO to represent the name of a soverign nation.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="IsoCountryNameType">
		
<xs:annotation>
			
<xs:documentation>International Stadards Organization Country Name holds the text string of the country's name identified by an International Stadards Organization Country Code.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="JobTitleType">
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="LastNameType">
		
<xs:annotation>
			
<xs:documentation>Last Name represents the family name or surname is the part of an INDIVIDUAL PARTY's name that identifies what family the individual belongs to. </xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="40"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="LatitudeDegreeNumberType">
		
<xs:annotation>
			
<xs:documentation>A Latitude Degree Number is the number between -180 and +180 that represents the relative position (expressed as degrees of arc) of a location with respect to the Equator (0) and the North Pole (+180) or South Pole (-180) of the planet Earth.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:integer"/>
	</xs:simpleType>
	
<xs:simpleType name="LatitudeMinuteNumberType">
		
<xs:annotation>
			
<xs:documentation>A Latitude Minute Number is the  number that represents the relative North-South position of a location with respect to the closest latitudinal degree line that is nearer to the equator of the planet Earth (the base longitudinal line).  Each minute unit represents 1/60th of a degree of arc between the base latitudinal line and the latiitudinal line that is the next further away from the equator.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:integer"/>
	</xs:simpleType>
	
<xs:simpleType name="LatitudeNumberType">
		
<xs:annotation>
			
<xs:documentation>Latitude Number is the concatenation of degrees, minutes and seconds that represent the angle at the center of the coordinate system between any point on the earth's surface and the plane of the equator.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="LatitudeSecondNumberType">
		
<xs:annotation>
			
<xs:documentation>A Latitude Second Number is the  number that represents the relative North-South position of a location with respect to the closest latitudinal degree and minute line that is nearer to the equator of the planet Earth (the base latitudinal line).  Each second unit represents 1/60th of a minute of arc between the base latitudinal line and the latitudinal minute line that is the next further away from the equator but has the same latitudinal degree line as a base latitudinal line.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:decimal">
			
<xs:totalDigits value="6"/>
			
<xs:fractionDigits value="4"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="LongitudeDegreeNumberType">
		
<xs:annotation>
			
<xs:documentation>A Longitude Degree Number is the number between -180 and +180 that represents the relative East-West position (expressed as degrees of arc) of a location with respect to the Prime Meridian (0) of the planet Earth where West is indicated by negative numbers and East by positive numbers.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:integer"/>
	</xs:simpleType>
	
<xs:simpleType name="LongitudeMinuteNumberType">
		
<xs:annotation>
			
<xs:documentation>A Longitude Minute Number is the  number that represents the relative East-West position of a location with respect to the closest longitudinal degree line that is nearer to the prime meridian of the planet Earth (the base longitudinal line).  Each minute unit represents 1/60th of a degree of arc between the base longitudinal line and the longitudinal line that is the next further away from the prime meridian.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:integer"/>
	</xs:simpleType>
	
<xs:simpleType name="LongitudeNumberType">
		
<xs:annotation>
			
<xs:documentation>Longitude Number is the concatenation of the degrees, minutes, and seconds that represent the angle east or west, at the center of the coordinate system, between any point on the earth's surface and the plane of an arbitrary north-south line between the two geographical poles.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="LongitudeSecondNumberType">
		
<xs:annotation>
			
<xs:documentation>A Longitude Second Number is the  number that represents the relative East-West position of a location with respect to the closest longitudinal degree and minute line that is nearer to the prime meridian of the planet Earth (the base longitudinal line).  Each second unit represents 1/60th of a minute of arc between the base longitudinal line and the longitudinal minute line that is the next further away from the prime meridian but has the same longitudinal degree line as a base longitudinal line.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:decimal">
			
<xs:totalDigits value="6"/>
			
<xs:fractionDigits value="4"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="LookupFailedFlagType">
		
<xs:annotation>
			
<xs:documentation>Lookup Failed Flag is used with the address validation, always false on get.  Value TRUE (TRUE = 1; FALSE = 0) if no tax authorities were found for the associated postalCd.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="1"/>
			
<xs:enumeration value="0"/>
			
<xs:enumeration value="1"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ManufacturerSerialNumberType">
		
<xs:annotation>
			
<xs:documentation>Manufacturer Serial Number is the manufacturer's electronic identifier for IDEN phones. Manufacturer Serial Number is a non-numeric string of alphabetic characters and decimal mumbers.

Length 10 character string.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="MaxQuantityAllowedPerOrderItemType">
		
<xs:annotation>
			
<xs:documentation>Maximum Quantity Allowed Per Order Item holds the largest number of items that can be ordered on a single Order Line Item.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="MaxSKUQuantityAllowedPerOrderItemType">
		
<xs:annotation>
			
<xs:documentation>Maximum SKU Quantity Allowed Per Order Item contains the largest number of distinct models (SKU) allowed per Order Line Item.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="MediumAccessControlAddressType">
		
<xs:annotation>
			
<xs:documentation>Medium Access Control Address (MAC ID) contains a 12 byte hexadecimal value used to identify a device used in the IEEE sublayer of a network which controls access to the shared medium by network-attached devices. 

In the context of the OSI reference model, the Medium Access Control (MAC) layer extends above to the Data Link Layer and below to the Physical Layer.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="12"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="MemberIdType">
		
<xs:annotation>
			
<xs:documentation>Member Id is the third element of the DirectConnect UFMI number. The format of the UFMI number is: Urban User Id * Fleet Id * Member Id. Example 164*100*3441.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="MessageIdentifierType">
		
<xs:restriction base="xs:unsignedLong"/>
	</xs:simpleType>
	
<xs:simpleType name="MessageDateTimeType">
		
<xs:restriction base="cdm:SimpleDateTimeType"/>
	</xs:simpleType>
	
<xs:simpleType name="MessageHeaderVersionType">
		
<xs:annotation>
			
<xs:documentation>Message Header Version contains a numeric value, in the range of 1 to 9999, identifying the iteration of the MQ Message header used.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:integer"/>
	</xs:simpleType>
	
<xs:simpleType name="MiddleNameType">
		
<xs:annotation>
			
<xs:documentation>Middle Name is effectively a second given name.  Many INDIVIDUAL PARTY's names include one or more Middle Names, placed between the first given name and the surname.   In the United States there is usually only one middle name, abbreviated by its possessor.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="40"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="MobileCountryCodeType">
		
<xs:annotation>
			
<xs:documentation>Mobile Country Code holds a three digit number uniquely identifying a given country. It is utilized within the IMSI (International Mobile Subscriber Identity) and LAI (Location Area Identity).</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="3"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="MobileEquipmentIdentifierDecType">
		
<xs:annotation>
			
<xs:documentation>A Mobile Equipment IDentifier (MEID) is a globally unique number for a physical piece of mobile station equipment. Equipment identifiers are 'burned' into a CDMA device, and should be resistant to modification.  The ESN will migrate to the MEID with assignments anticipated to begin in the 2004 to 2005 timeframe.   

This is the 18 character decimal representation.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="18"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="MobileNetworkCodeType">
		
<xs:annotation>
			
<xs:documentation>Mobile Network COde holds a two or three digit number used to uniquely identify a given network from within a specified country (MCC (Mobile Country Code)). The MNC is used as part of the IMSI (International Mobile Subscriber Identity) and LAI (Location Area Identity) etc.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:minLength value="2"/>
			
<xs:maxLength value="3"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="MobileStationIdentificationNumberType">
		
<xs:restriction>
			
<xs:simpleType>
				
<xs:restriction base="xs:string">
					
<xs:length value="10"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ModelNameType">
		
<xs:annotation>
			
<xs:documentation>Model Name holds the Manufacturer's name for the class or model of  PRODUCT.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="MoreRecordsAvailableFlagType">
		
<xs:annotation>
			
<xs:documentation>More Records Available Flag indicates that there are more records available for retrieval.  

Values:
TRUE = 1 (there are more records available for retrieval) 
FALSE = 0 (there are no more records available for retrieval)</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="1"/>
			
<xs:enumeration value="0"/>
			
<xs:enumeration value="1"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="MqServiceNameType">
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="MqServiceQualifierType">
		
<xs:annotation>
			
<xs:documentation>ServiceName may be qualified to route to a speeific instance of a service.  For example, East or West for regionalized services.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="MqServiceVersionType">
		
<xs:annotation>
			
<xs:documentation>Identifier that acts as a modifier to a serviceName.  Default is 1.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:integer"/>
	</xs:simpleType>
	
<xs:simpleType name="NaiAccessLevelType">
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="10"/>
			
<xs:enumeration value="Account"/>
			
<xs:enumeration value="NAI"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="NaiPasswordStatusType">
		
<xs:annotation>
			
<xs:documentation>NAI Password Status contains the explanation of how the password was generated.
Valid Values are:
SystemGenerated
AccountGenerated
NAIGenerated</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="20"/>
			
<xs:enumeration value="SystemGenerated"/>
			
<xs:enumeration value="AccountGenerated"/>
			
<xs:enumeration value="NAIGenerated"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="NaiRealmType">
		
<xs:annotation>
			
<xs:documentation>The NAI realm is the portion of the Network Access Identifier (NAI) that comes after the @ sign.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="43"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="NaiReferenceIdentifierType">
		
<xs:annotation>
			
<xs:documentation>The NAI Reference Identifer is used to reference a Network Access Identifer within a billing system.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="15"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="NaiTemporaryLockIdentiferType">
		
<xs:annotation>
			
<xs:documentation>The NAI Temporary Lock Identifer is used to identify the temporary lock that is associated with a Network Access Identier.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="6"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="NaiUserNameType">
		
<xs:annotation>
			
<xs:documentation>The NAI User Name is the user name portion of the Network Access Identifer (NAI) that comes before the @ sign.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="20"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="NamePrefixType">
		
<xs:annotation>
			
<xs:documentation>Name Prefix represents the pre-nominal letters indicating a title of some kind placed placed before the name of a person as distinct from a post-nominal title which is placed after the name. Examples of pre-nominal titles, for instance professional titles.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="NameSuffixType">
		
<xs:annotation>
			
<xs:documentation>Name Suffix holds any affix that may occurr at the end of the name of an INDIVIDUAL designating a dignity, honor, distinction, or preeminence attached to the INDIVIDUAL by virtue of rank, office, precedent, privilege, attainment, or lands.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="NetworkAccessIdentifierStringType">
		
<xs:annotation>
			
<xs:documentation>Network Access Identifier holds the concatenation of the a user name and realm.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="64"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="NetworkIndicatorCodeType">
		
<xs:annotation>
			
<xs:documentation>Network Indicator Code specifies the network being used.  I -&gt; iDEN; C -&gt; CDMA; B -&gt; Both</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="1"/>
			
<xs:enumeration value="I"/>
			
<xs:enumeration value="B"/>
			
<xs:enumeration value="C"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="NetworkTechnologyTypeIdType">
		
<xs:annotation>
			
<xs:documentation>The Network Technology Type ID is used to help distinguish which network will be utilized by a product.  Current values are: CD = CDMA or Dual; IN = iDEN</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="NoteIdType">
		
<xs:annotation>
			
<xs:documentation>Note Identifier uniquely identifies an instance of NOTE.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="NoteTextType">
		
<xs:annotation>
			
<xs:documentation>Text of the note.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="NoteTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Note Type Code uniquely identifies an instance of NOTE TYPE used to categorize a NOTE.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="NpaNumberType">
		
<xs:annotation>
			
<xs:documentation>Numbering Plan Area (NPA) Number is one of the geographical divisions of the United States, Canada, Bermuda, the Caribbean, Northwestern Mexico, Alaska, Hawaii, within which no two telephones will have the same seven-digit telephone number. (An NPA is represented by an Area Code.)</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="3"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="NumberOfPickListItemsType">
		
<xs:annotation>
			
<xs:documentation>Number Of Pick List Line Items holds the count of Pick List Line Items comprising the Pick List</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	
<xs:simpleType name="NxxNumberType">
		
<xs:annotation>
			
<xs:documentation>Network Numbering Exchange (NXX) Number represents the first three digits of the 7 digit phone number that identifies the specific telephone company central office which serves that number. These digits are referred to as the NXX where N can be any number from 2 to 9 and X can be any number. (NNX once upon a time was used to identify the local central office exchange. Now NNX has been changed to NXX, which allows local central offices to have numbers which look like area codes.)</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="3"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="PaymentCardCustomerRefNumberType">
		
<xs:annotation>
			
<xs:documentation>Payment Card Customer Reference Number</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="14"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="PaymentCardExpDateType">
		
<xs:annotation>
			
<xs:documentation>Payment Card Expiration Date is the Month and Year the payment card will expire.  MM-YY</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="5"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="PaymentCardLast4DigitsType">
		
<xs:annotation>
			
<xs:documentation>Payment Card Last 4 Digits is the last four digits of the payment card number.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="4"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="PaymentCardNumberType">
		
<xs:annotation>
			
<xs:documentation>Payment Card Number is the number issued on the card.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="20"/>
			
<xs:minLength value="15"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="PaymentCardSecurityCodeType">
		
<xs:annotation>
			
<xs:documentation>Payment Credit Card Security Code is a 3 digit code issued by the card issuer as a security feature.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="3"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="PaymentCardTAAType">
		
<xs:annotation>
			
<xs:documentation>The Payment Card Transaction Advice Addendum Record (TAA code) is a travel industry code used by American Express to distinguish between flight and non-flight charges, in order to help identify charges that should trigger an insurance premium.  TAA fields are four fields that further describe the purchase. These fields are used only with American Express cards for Level II or non-Level II transactions.  </xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="40"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="PaymentCardTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Payment Card Type </xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="2"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="PinType">
		
<xs:annotation>
			
<xs:documentation>A personal identification number (PIN) is a secret numeric password shared between a user and a system that can be used to authenticate the user to the system</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="10"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="OrderFulfillmentIterationType">
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="OrderCancelDateType">
		
<xs:annotation>
			
<xs:documentation>The date when the order was cancelled.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="cdm:SimpleDateType"/>
	</xs:simpleType>
	
<xs:simpleType name="OrderHistoryRetrievalDaysType">
		
<xs:annotation>
			
<xs:documentation>Time period in days for order history information retrieval.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	
<xs:simpleType name="OrderItemCancelQuantityType">
		
<xs:annotation>
			
<xs:documentation>The quantity of items cancelled in the order.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:integer">
			
<xs:totalDigits value="10"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="OrderItemIdType">
		
<xs:annotation>
			
<xs:documentation>MRF 6/21/2007: DEPRECATED

Use OrderLineItemNumberType

Order Item Identifier  uniquely identifies an instance of ORDER ITEM within the scope of an ORDER.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="OrderItemReturnReasonCodeType">
		
<xs:annotation>
			
<xs:documentation>Order Item Return Reason Code communicates the reason why the Return Kit was requested for the specified Order Item.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="OrderLineItemNumberType">
		
<xs:annotation>
			
<xs:documentation>Order Line Item Number uniquely identifies an instance of ORDER ITEM within the scope of an ORDER.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="OrderNumberType">
		
<xs:annotation>
			
<xs:documentation>Order Number uniquely identifies an instance of ORDER.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="OrderQuantityMultiplierType">
		
<xs:annotation>
			
<xs:documentation>Order Quantity Multiplier contains the number used as a Multiplier where the ORDER quantity represents a set of PRODUCTs not a single instance. </xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="PaymentCardLevelTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Debit Credit Card Level Type Code Type</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="1"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="OrderReasonMessageType">
		
<xs:annotation>
			
<xs:documentation>Order Reason Message Text holds a free form textual description of why the Order was placed.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="OrderTypeCodeType">
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="OrganizationNameType">
		
<xs:annotation>
			
<xs:documentation>Organization Name is a label  applied to those instances of PARTY of type  ORGANIZATION.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="40"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="OtherProductIdType">
		
<xs:annotation>
			
<xs:documentation>Other Product Identifier holds a Stock Keeping Unit or identifying value other tha Sprint's Stock Keeping Unit.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="OutboundExtractIndicatorStringType">
		
<xs:annotation>
			
<xs:documentation>Outbound Extract Indicator String holds a string of one or more single character flags identifyig OMIM extract types and destinations.  For example 'EPC....'</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="OverrideValidationFlagType">
		
<xs:annotation>
			
<xs:documentation>Required to perform change of address that cannot be formatted into the exact same values as the address validation produces, or to perform a change of address if the address validation system is not available.  Value TRUE (TRUE = 1; FALSE = 0) indicates.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="1"/>
			
<xs:enumeration value="0"/>
			
<xs:enumeration value="1"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="PackingSlipTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Packing Slip Type Code identifies the format and content of the Packing Slip.  This element will be required if Sprint moves to more than one Packing Slip format.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="PageNumberType">
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="5"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="PagerPinType">
		
<xs:annotation>
			
<xs:documentation>Pager PIN (Persoanl Identification Number) holds the code used by the PAGER subscriber to gain access to the Pager.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ParentDialogReferenceType">
		
<xs:annotation>
			
<xs:documentation>Parent Dialog Reference Code is used in those multi-part business processing sequences can often generate multiple message exchange dialogs.  These will each carry their own dialog reference, but may need to be linked back to an ‘ancestor’ dialog that spawned the current one.  </xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="PartyCategoryCodeType">
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="PartyContactPreferenceCodeType">
		
<xs:annotation>
			
<xs:documentation>Party Contact Preference Code identifies the preferred contact method for a PARTY.

Values:
Banner
Email
Mail
Phone
Popup
Text Message
</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="PartyDataSharingPreferenceCodeType">
		
<xs:annotation>
			
<xs:documentation>Party Data Sharing Preference Code identifies the data sharing preferences of a PARTY with Partners.

Values:
"Y" - Yes, share data with partners
"N" - No, do not share data with Parnters</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="PartyIdType">
		
<xs:annotation>
			
<xs:documentation>Party Identifier contains a value that uniquely identifies an INDIVIDUAL or ORGANIZATION Sprint wishes to track for business reasons as a PARTY.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="PartyNameStringType">
		
<xs:annotation>
			
<xs:documentation>Party Name String holds all of the Individual Name components, Last Name, Middle Name and First Name concatenated into a single string.  Used in those interfaces where Individual Names are not passed as components or an Organization name when the transaction does not require name components.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="PartyOtherIdEffectiveFromDateType">
		
<xs:annotation>
			
<xs:documentation>Party Other Identifier Effective From Date represents the first calendar day the PARTY EXTERNAL IDENTIFIER is applicable to the specified PARTY.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="cdm:SimpleDateType"/>
	</xs:simpleType>
	
<xs:simpleType name="PartyOtherIdEffectiveThruDateType">
		
<xs:annotation>
			
<xs:documentation>Party Other Identifier Effective Thru Date represents the last calendar day the PARTY EXTERNAL IDENTIFIER is applicable to the specified PARTY.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="cdm:SimpleDateType"/>
	</xs:simpleType>
	
<xs:simpleType name="PartyOtherIdentifierIdType">
		
<xs:annotation>
			
<xs:documentation>Party Other Identifier Identifier is a system generated value used in combination with the Party Identifier and Party Identification Type Code to uniquely identify an instance of PARTY IDENTIFICATION.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="30"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="PartyOtherIdTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Party Other Identifier Type Code uniquely identifies a PARTY EXTERNAL IDENTIFIER TYPE instance representing a possible type of external identifier of a PARTY.

Possible values:
U. S. Social Security Number
Canadian Social Security Number
Permanent Resident Identifier
Federal Employer Identification Number
Dunn and Bradstreet Number
Passport Number
Motor Vehicle Operator License Number
United Airlines Membership Identifier</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="40"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="PartyOtherIdValueType">
		
<xs:annotation>
			
<xs:documentation>Party Other Identifier Value represents the string of characters and/or numbers of the PARTY OTHER IDENTIFIER.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="30"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="PartyPrivacyPreferenceCodeType">
		
<xs:annotation>
			
<xs:documentation>Party Privacy Preference Code identifies the preferred privacy for a PARTY.

Values:
Banner
Email
Mail
Phone
Popup
Text Message
</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="PartyRoleCodeType">
		
<xs:annotation>
			
<xs:documentation>Party Role Code identifies the role a PARTY fills within the context of Billing Accounts, Subscriptions, Products, Implementations, Product Deployments, etc.   Party Role Code is categorized by the context it's used in.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="PartyRoleIdType">
		
<xs:annotation>
			
<xs:documentation>Party Role Identifier uniquely identifies an instance of PARTY ROLE within the context of CUSTOMER, BILLING ACCOUNT, SUBSCRIPTION, ORDER, SHIPMENT, etc.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="PartyRoleContextCodeType">
		
<xs:annotation>
			
<xs:documentation>Party Role Context Code identifies the context the Party Role Code is used in.

Values:
"Agreement"
"Billing Account"
"Customer Account"
"Invoice"
"Order"
"Order Line Item"
"Product Deployment"
"Service Agreement"
"Service Agreement Line Item"
"Shipment"
"Shipment Line Item"
"Subscription"
"etc."</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="PasswordType">
		
<xs:annotation>
			
<xs:documentation>Password Type holds the string characters a PARTy designated as a Password into a system or Customer Account.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="PaymentMethodCodeType">
		
<xs:annotation>
			
<xs:documentation>Payment Method Code identifies the method used by the customer to pay for services or products.

Values:
Check By Phone
Credit Card
Bill To Account</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="PhoneExtensionType">
		
<xs:annotation>
			
<xs:documentation>Phone Extention holds the additional digits that identify an additional phone connected to a single telephone line or line group.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="PhoneLineNumberType">
		
<xs:annotation>
			
<xs:documentation>Phone Line Number represents teh 4 digits of the 7 digit phone numbe rthat follow the Network Numbering Exchange (NXX) Number.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="4"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="PickListLineItemIdType">
		
<xs:annotation>
			
<xs:documentation>Pick LIst Line Item Identifier uniquely identifies an instance of Pick List Item.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="PicklistLineItemQuantityType">
		
<xs:annotation>
			
<xs:documentation>Pick List Line Item Quantity holds the number of Inventory Items to be picked from inventory to fulfill the Pick List Item.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	
<xs:simpleType name="PickListNameTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Pick List Name Type Code identifies the name associated with the Pick List as the Ship To Name,Shipt To Name 2, Sold To Name, Sold To Name 2, etc.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="PickListReleaseDateType">
		
<xs:annotation>
			
<xs:documentation>Pick List Release Date holds the calendar day the Pick List  was released to the Warehouse floor.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="cdm:SimpleDateType"/>
	</xs:simpleType>
	
<xs:simpleType name="PickListStatusCodeType">
		
<xs:annotation>
			
<xs:documentation>Pick List Status Code indicates if this is the final Shipment Confirmation.                                                 Valid values:                        "I" - full shipment confirmation                   "M" - additional shipment confirmations</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="PeoplesoftIdRequiredFlagType">
		
<xs:annotation>
			
<xs:documentation> This identiifies whether or not the Peoplesoft Item ID is required for this product.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="PlanningMethodCodeType">
		
<xs:annotation>
			
<xs:documentation> Planning Method for items that are not being planned by i2, this indicates which planning method should be used by Oracle.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="PortingStatusCodeType">
		
<xs:annotation>
			
<xs:documentation> Porting Status Code is used to indicate the status of a porting request for a specific MDN. If a PAI cannot be found spaces will be returned. Valid values are:
PIP
PINP
POND
PCP
PCNP
PSP
PSNP
PSCP
PSCNP
PNDS
NCPA</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="5"/>
			
<xs:enumeration value="PIP"/>
			
<xs:enumeration value="PINP"/>
			
<xs:enumeration value="POND"/>
			
<xs:enumeration value="PCP"/>
			
<xs:enumeration value="PCNP"/>
			
<xs:enumeration value="PSP"/>
			
<xs:enumeration value="PSNP"/>
			
<xs:enumeration value="PSCP"/>
			
<xs:enumeration value="PSCNP"/>
			
<xs:enumeration value="PNDS"/>
			
<xs:enumeration value="NCPA"/>
			
<xs:enumeration value=" "/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="PostalAddressLineType">
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="PostOfficeBoxNumberType">
		
<xs:annotation>
			
<xs:documentation>Post Office Box Number holds a United States Postal Service Post Office Box Number.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="PrecedingDirectionType">
		
<xs:annotation>
			
<xs:documentation>Preceding Direction is a USPS Postal Address component that holds the compass direction that appears before the Street Name in some cases.  For example in, "North Main Street", "North" would reside in Preceding Direction.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="PreferenceCriteriaCdType">
		
<xs:annotation>
			
<xs:documentation> The NAFTA Preference Criteria Code describes which criteria is applicable in order to entitle this item for preferential tariff treatment.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="PriceComponentAmountType">
		
<xs:annotation>
			
<xs:documentation>Price Component Amount contains the dollar amount or the price component.  Either Price Amount or Percent will contain a value but not both for a given Price Component Indentifier.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	
<xs:simpleType name="PrimaryAddressIndicatorType">
		
<xs:annotation>
			
<xs:documentation>Primary Address Indicator

Valid Values:
Y – Indicates address is primary but only one address on a customer may be Y for primary at one time.
N – Indicates address is not the primary address for the customer.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="1"/>
			
<xs:enumeration value="Y"/>
			
<xs:enumeration value="N"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="PrimaryContactIndicatorType">
		
<xs:annotation>
			
<xs:documentation>Primary contact indicator.  

Valid Values: 
Y – Means contact phone number is primary but only 1 can be primary.
N – Means contact phone number is not primary.

Note: Default is 'N', but 1st occurrence on createCustomer or addContactPhoneNumber will default to 'Y' if none are set to 'Y'.  Setting a contact phone number as primary sets all others to non-primary.  A contact phone number that is primary cannot be changed to non-primary except by setting another contact phone number as primary.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="1"/>
			
<xs:enumeration value="Y"/>
			
<xs:enumeration value="N"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ProducerCdType">
		
<xs:annotation>
			
<xs:documentation> The NAFTA Producer is a code set that validates that the producer of the good is within the NAFTA zone. </xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ProductCategoryCodeType">
		
<xs:annotation>
			
<xs:documentation> Product Category Code is used for the categorization of products allowing grouping, selection, and pricing flexiblity.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ProductCategoryGroupCodeType">
		
<xs:annotation>
			
<xs:documentation> Product Category Group Code is a higher level of grouping of the product categories.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ProductCharacteristicApplicabilityIdType">
		
<xs:annotation>
			
<xs:documentation>A unique identifier of a product characteristic to a product.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="10"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ProductCharacteristicDescriptionType">
		
<xs:annotation>
			
<xs:documentation>Product Characteristic Description:  A narrative that explains the characteristic of the product.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="256"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ProductCharacteristicIdType">
		
<xs:annotation>
			
<xs:documentation>Product Characteristic Identifier:  A unique identifier for a Product Characteristic to differentiate one characteristic from the other.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="10"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ProductCharacteristicNameType">
		
<xs:annotation>
			
<xs:documentation>The name assigned to a Capability type.
This value can be used to present to a front end.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="64"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ProductCharacteristicValueTextType">
		
<xs:annotation>
			
<xs:documentation>Product Characteristic Value Text:  The value associated with a product's characteristics.  </xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="256"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ProductClassificationAssignmentType">
		
<xs:annotation>
			
<xs:documentation> Product Classification Assignment Type is used to aid technicians in assigning default specific attributes to an item in the product catalog.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ProductEffectiveFromDateType">
		
<xs:annotation>
			
<xs:documentation>Product Effective From Date contains the calendar date of a product that is at the beginning of its lifecycle and is available to be offered to customers.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="cdm:SimpleDateType"/>
	</xs:simpleType>
	
<xs:simpleType name="ProductGroupSetCodeType">
		
<xs:annotation>
			
<xs:documentation> Product Group Set Code is a higher level roll up of the product groups into sets.  </xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ProductIdType">
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="30"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ProductLongDescriptionType">
		
<xs:annotation>
			
<xs:documentation>Product Long Description contains an extended textual description of the PRODUCT.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="800"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ProductPriceEffectiveFromDateType">
		
<xs:annotation>
			
<xs:documentation> Product Price Effective From Date contains the calendar date that price goes into effect for this particular product.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="cdm:SimpleDateType"/>
	</xs:simpleType>
	
<xs:simpleType name="ProductTerminationFlagType">
		
<xs:annotation>
			
<xs:documentation> Product Termination Flag signifies that a product is at the end of its lifecycle and should no longer be offered to customers.  Values:  Y = Product is at the end of its lifecycle; N = Product is not at the end of its lifecycle</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ProductPartyRoleCodeType">
		
<xs:annotation>
			
<xs:documentation> The Product Party Role Code identifies the role that the PARTY fulfills within the context of the specified PRODUCT.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ProductReturnableFlagType">
		
<xs:annotation>
			
<xs:documentation> Product Returnable Flag indicates whether this product is eligible to be returned by the customer. At this point, all items would be returnable. Defaults to "Yes".</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ProgramIdType">
		
<xs:annotation>
			
<xs:documentation>Program ID uiquely identifies a Program.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ProvisionBeforeShippingFlagType">
		
<xs:annotation>
			
<xs:documentation>Provision Before Shipping Flag identifies orders where the Wireless Network Access Device should be provisioned to the network before they are shipped (Hot Phones)</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="PurposeCodeType">
		
<xs:annotation>
			
<xs:documentation>Purpose Code Type identifies what a Name or Contact Method (Postal Address, telephone Number, Electronic Address, etc) is used for.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="RadixCodeType">
		
<xs:annotation>
			
<xs:documentation>The Radix Code specifies whether the serialized fields contain either decimal or hexadecimal format.  D = Decimal  H = Hexadecimal</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ReplyCompletionCodeType">
		
<xs:annotation>
			
<xs:documentation>Reply Completion Code holds the the provider’s declaration of the Service's success or failure in processing the submitted request.

Values:
0 = Successful completion, 
4 = Successful completion, but with a warning as to some unusual circumstance, 
8 = Error, request was not processed successfully, 
12 = Severe error, represents a failure that could indicate a major system irregularity</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ReplyReasonCodeType">
		
<xs:annotation>
			
<xs:documentation>Reply Reason Code contains the Reason a non-zero Reply Completion Code was returned.  Required when Reply Completion Code was non-zero.  </xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ReqSentDateTimeType">
		
<xs:restriction base="cdm:SimpleDateTimeType"/>
	</xs:simpleType>
	
<xs:simpleType name="RequestedShipDateType">
		
<xs:annotation>
			
<xs:documentation>Requested Ship Date is the date the customer expects the order to ship from the warehouse.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="cdm:SimpleDateType"/>
	</xs:simpleType>
	
<xs:simpleType name="RmaExceptionTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>RMA Exception Type Code identifies the scenario that caused the RMA Exception.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="RmaOrderTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>RMA Order Type Code Values:
RH = New Returns – RMA Returns to NOL
R7 = RMA returns to RTNS-ex: Plan B
RZ = Retail Returns  generated through RMS 
RK = Order type for RMA kit 
RT = Order type for 3rd Party returns</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="RmaReasonCodeType">
		
<xs:annotation>
			
<xs:documentation>The reason why the return kit is requested. Valid only if the order in question has been issued an RMA kit.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="RowCountNumberType">
		
<xs:restriction base="xs:integer">
			
<xs:totalDigits value="3"/>
			
<xs:fractionDigits value="0"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="RuralRouteBoxNumberType">
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="SalesOrderLineItemQuantityType">
		
<xs:annotation>
			
<xs:documentation>Sales Order Line Item Quantity holds the number of a specific Product ID ordered on a Sales Order Item.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	
<xs:simpleType name="SalesOrderSourceCodeType">
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="SalesOrderTypeCdType">
		
<xs:annotation>
			
<xs:documentation>Possible Sales Order Type Code values:
R-Regular order that did not require i2 allocation approval. 
P - promised backorder - a partially or fully approved 3rd party order. 
U - Uncommitted backorder - a totally unapproved 3rd party order.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ScheduleBNumberType">
		
<xs:annotation>
			
<xs:documentation> Schedule B Number is the Statistical Classification of Domestic and Foreign Commodities Exported from the United States. The Schedule B contains approximately 8,000 individual 10-digit commodity numbers covering everything from live animals and food products to computers and airplanes, including a distinction between civilian and military airplanes. Every item being exported falls under a particular Schedule B number.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="SerializationTypeFormatType">
		
<xs:annotation>
			
<xs:documentation>JRH: Under discussion.

Serialization Type Format specifies whether the serialized fields contain either decimal or hexadecimal format.  D = Decimal  H = Hexadecimal</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="SerializationTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Serialization Type Code specifies which type of serialization is used to identify an instance of the product.

Current Values are:
E = CDMA Handset 
D = Handset Kit for Dual Mode
K = IDEN Handset Kit (model #)
S = Stand-Alone SIM
M = Stand-Alone Handset (only for handsets which need SIM but dont have as part of this SKU)
I = IMEI Handset (no need for SIM)
N = Serialized Accessory (other than SIMs)</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="1"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ServiceNameType">
		
<xs:annotation>
			
<xs:documentation>Service Names exist in one-to-one correspondence to the existing application contracts in place. 

In addition, in a system that seeks to create a logical network view based on function, this also is used to determine the destination for a message.  Service Name is required, and is composed of three parts:
•	Service Group: 1 – 4 characters, represents the major level classification for the service.   May or may not relate to a Sprint ApplID.
•	Service Sub-group:  1-10 characters, represents a mid-level classification for the service 
•	Service Name description:1 – 12 characters, used as a short descriptive attribute.

These three components are concatenated, with period delimiters (e.g. “HR.EMPLEE.NEWHIRE”).  There should be no imbedded spaces or periods, with the first character of each node an alpha character.  All characters should be upper case.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="255"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ServiceQualifierType">
		
<xs:annotation>
			
<xs:documentation>Service Qualifier qualifies a Service Name to a specific instance of a service.  For example, East or West for regionalized services.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ShipmentIdType">
		
<xs:annotation>
			
<xs:documentation>Shipment Identifier uniquely identifies an instance of Shipment.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ShipmentLineItemQuantityType">
		
<xs:annotation>
			
<xs:documentation>Shipment Line Item Quantity holds the number of Inventory Items to be shipped from inventory to fulfill the Shipment Item.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	
<xs:simpleType name="ShipmentLineItemIdType">
		
<xs:annotation>
			
<xs:documentation>Shipment Line Item Identifier uniquely identifies an instance of Shipment Line Item within the context of a Sipment.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ShipmentMethodCodeType">
		
<xs:annotation>
			
<xs:documentation>Shipment Method Code identifies the method the Carrier uses to ship the Inventory.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="30"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ShipmentPalletQuantityType">
		
<xs:annotation>
			
<xs:documentation>Shipment Pallet Quantity holds the total number of pallets contained in a SHIPMENT.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	
<xs:simpleType name="ShipmentStatusReasonCodeType">
		
<xs:annotation>
			
<xs:documentation>Shipment Status Reason Code holds the reason the Shipment Status Codxe was assigned to the Shipment.  For example this would identify the reason for a Shipment Hold or Cancelation.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="ShippableFlagType">
		
<xs:annotation>
			
<xs:documentation> Shippable Flag identifies the product instance as available for shipment to a customer.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="SimpleDateTimeType">
		
<xs:annotation>
			
<xs:documentation>The standard datetime format to be assigned to all data elements of a datetime type.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:dateTime"/>
	</xs:simpleType>
	
<xs:simpleType name="SimpleDateType">
		
<xs:annotation>
			
<xs:documentation>The standard date format to be assigned to all data elements of a date type.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:date"/>
	</xs:simpleType>
	
<xs:simpleType name="SimpleTimeType">
		
<xs:annotation>
			
<xs:documentation>The standard time format to be assigned to all data elements of a time type.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:time"/>
	</xs:simpleType>
	
<xs:simpleType name="SingleSignOnPreferenceCodeType">
		
<xs:annotation>
			
<xs:documentation>Single Sign On Preference Code identifies the PARTY's sign on preference for the identified System and Product.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="SoftAllocationRequiredCodeType">
		
<xs:annotation>
			
<xs:documentation>Soft Allocation Required Code identifies Customers requiring a 'Soft' inventory allocation before Order Management Inventory Management can initiate a 'Hard' inventory allocation.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="SsnLast4DigitsType">
		
<xs:annotation>
			
<xs:documentation>Social Security Number Last 4 Digits  holds tha last 4 digits of the Customer's Social Securiy Number. Used to authenticate the Customer when they or someone on their behalf accesses CJV Web Services.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="StatusCodeType">
		
<xs:annotation>
			
<xs:documentation>Status Code</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="StatusDescriptionType">
		
<xs:annotation>
			
<xs:documentation>Status Description</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="StockKeepingUnitType">
		
<xs:annotation>
			
<xs:documentation>Stock Keeping Unit represents the Sprint Inventory Stock Keeping Unit (SKU).  Stock Keeping Unit identifies a group of PRODUCT instances.  It could identify a handset Model and Model Number, a Kit or an accessory.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="StreetAddressStringType">
		
<xs:annotation>
			
<xs:documentation>Street Address String holds all of the individual street address lines concatenated into a single string field.  It is used in some interfaces where individual street address lines are not passed as components.  Street Address String does NOT contain the city, state, or postal code.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="68"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="StreetNameType">
		
<xs:annotation>
			
<xs:documentation>Street Name is a USPS Postal Address component that holds the name of a street.  For example in, "123 Main Street", "Main" would reside in Street Name.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="StreetNumberType">
		
<xs:annotation>
			
<xs:documentation>Street Number is a component of a USPS Posatal Address that holds the house or building number on a street.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="StreetSuffixType">
		
<xs:annotation>
			
<xs:documentation>Street Suffix is a USPS Postal Address component that holds the trailing part of the street name.  For example in, "123 Main Street", "Street" would reside in Street Suffix.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="SubscriberIdentityModuleIdDecType">
		
<xs:annotation>
			
<xs:documentation>Subscriber Identify Module (SIM) Identifier identifies the ''smart'' card installed or inserted into a IDEN mobile telephone containing all subscriber-related data. This facilitates a telephone call from any valid mobile telephone since the subscriber data is used to complete the call rather than the telephone internal serial number.

Length 15 characters.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="15"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="SubscriptionIdType">
		
<xs:annotation>
			
<xs:documentation>Subscription Identifier uniquely identifies an instance of SUBSCRIPTION </xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="15"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="SubscriptionStatusCodeType">
		
<xs:annotation>
			
<xs:documentation>Subscription Status Code holds the current state of the Customer's Subscription (Service Agreement) set by the Customer, an Account Administrator or Customer Care Representative.

Values:
H (hotline) 
D (disabled)
E (enabled)
S (suspended) 
P (pending number change) </xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="SubscriptionTypeCodeType">
		
<xs:restriction base="xs:string">
			
<xs:length value="1"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="SystemIdType">
		
<xs:annotation>
			
<xs:documentation>System Identifier Type is a string the holds the unique identifier of a System.  For example, a Billing System.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="SystemElectronicAddressAssignmentFromDateType">
		
<xs:annotation>
			
<xs:documentation>System Electronic Address Assignment From Date holds the first calendar day the the specified Electroinc Address is available for use by the PARTY.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="cdm:SimpleDateType"/>
	</xs:simpleType>
	
<xs:simpleType name="SystemElectronicAddressAssignmentThruDateType">
		
<xs:annotation>
			
<xs:documentation>System Electronic Address Assignment Thru Date holds the last calendar day the specified Electroinc Address is available for use by the PARTY.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="cdm:SimpleDateType"/>
	</xs:simpleType>
	
<xs:simpleType name="TaxAuthorityIdType">
		
<xs:annotation>
			
<xs:documentation>Tax Authority ID is a sequence number concatenated to VertexGeographicCityCode, VertexGeographicCountyCode and VertexGeographicStateCode to produce the unique identifier of a Taxing jurisdiction.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="10"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="TaxAuthorityNameType">
		
<xs:annotation>
			
<xs:documentation>Tax Authority Name is a label  applied to those instances of PARTY of type  that fill the Tax Authority role.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="26"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="TaxExemptionNumberType">
		
<xs:annotation>
			
<xs:documentation>A number assigned by the IRS indicating that an organization is exempt from federal income taxation.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="20"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="TechnicalErrorType">
		
<xs:annotation>
			
<xs:documentation>Technical Error is a text field provided by the responding application providing error feedback that may be required by technical staffers.  </xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="TelecomNumberTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Telecommunication NumberType Code identifies the the telephone number as  a Phone, FAX or Pager Number.

Valid values:
"PHONE"
"FAX"
"PAGER"</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="TelephonyCountryCodeType">
		
<xs:annotation>
			
<xs:documentation>Telephony Country Code holds teh one, two or three digit number that, in the World Numbering Plan, identifies each country or integrated numbering plan in the world.  In short, the one, two or three digits that precede the national number in an international phone call.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="TermIdType">
		
<xs:annotation>
			
<xs:documentation>Term Code uniquely identifes a Term of a Agreement, Order, Shipment, etc.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="TermDollarAmountType">
		
<xs:annotation>
			
<xs:documentation>Term Dollar Amount provides the dollar amount associated with a specific term of agreement, order, etc.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:decimal">
			
<xs:totalDigits value="9"/>
			
<xs:fractionDigits value="2"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="TotalNumberOfLineItemsType">
		
<xs:annotation>
			
<xs:documentation>Total Number Of Line Items holds the number of original line items on an ORDER, SHIPMENT, etc.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	
<xs:simpleType name="ThreeGFlagType">
		
<xs:annotation>
			
<xs:documentation>Three G Flag  is a boolean indicator of Third Generation Network functionality support.

Values:
true  -&gt; Yes, Third Generation Network functionality IS supported
false -&gt; No, Third Generation Network functionality IS NOT supported</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:boolean"/>
	</xs:simpleType>
	
<xs:simpleType name="TrackingNumberType">
		
<xs:annotation>
			
<xs:documentation>The Tracking Number is a unique number used by the shipping company to identify and trace packages and freight shipments as they move through the shipment process to their destination. The shipping company automatically assigns a tracking number to the package or shipment. </xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="TrailingDirectionType">
		
<xs:annotation>
			
<xs:documentation>Trailing Direction is a USPS POstal Address component that holds the compass direction that sometimes appears at the end of a street address.  For example in, "123 Main Street East", "East" would reside in Trailing Direction.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="TransactionAcknowledgementIdType">
		
<xs:annotation>
			
<xs:documentation>Transaction Acknowledgement Identifier may hold one of the following based upon the Transaction Acknowledgement Type Code:

Acknowledgement Type           Identifier type 
'Cust'                                        Party Identifier            
'Item'                                        Stock Keeping Unit
'Site'                                         Faciity Identifier
'MEID'                                       ESN/MEID
</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="TransactionAcknowledgementTypeCodeType">
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="TransactionCodeType">
		
<xs:annotation>
			
<xs:documentation>Tansaction Type Code

Valid Transaction Type Code values:
SDR =&gt; SalesOrder
WDR =&gt; WorkOrder
RMA =&gt; RMA
SCM =&gt; ShipConfirm
WCM =&gt; WIPConfirmation
RRC =&gt; RMAReceiptConfirmation
PDR =&gt; PurchaseOrder
EDF =&gt; EDF
PRC =&gt; POReceiptConfirmation
ADJ =&gt; Adjustment
IMS =&gt; ItemMaster
ISN =&gt; InventorySnapshot
UPD =&gt; UpdateOrders</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="TransactionIdType">
		
<xs:annotation>
			
<xs:documentation>Transaction ID uniquely identifies a logical unit of work in an interface.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="24"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="TransactionTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Transaction Type Code identifies the Create, Read, Update or Delete (CRUD) functionality of the transaction.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="TransactionStatusCodeType">
		
<xs:annotation>
			
<xs:documentation> The Transaction Status code communicates the status of this particular transaction.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="TransitDaysType">
		
<xs:annotation>
			
<xs:documentation>Transit Days represents the number of days that are added to the Estimated Ship Date to derive the Estimated Delivery Date.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:integer"/>
	</xs:simpleType>
	
<xs:simpleType name="UnitOfMeasureNameType">
		
<xs:annotation>
			
<xs:documentation> A Unit of Measure Name is the word or words by which a kind of unit (as of length, surface, volume, dry measure, liquid measure, money, weight, time, etc.), is used as a standard of comparison for others of the same kind.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="UnitOfMeasureValueType">
		
<xs:annotation>
			
<xs:documentation>Unit Of Measure Value contains the numeric value of the actual item or instance as specified by the unit of measure code.  For example, if the unit of measure code contains 'Volume', then the unit of measure value would contain the value '16' that represents the volume of a specified item or instance, etc.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	
<xs:simpleType name="UnitOfMeasureCodeType">
		
<xs:annotation>
			
<xs:documentation>Unit Of Measurement Code represents the set of characters that represents a kind of unit (as of length, surface, volume, dry measure, liquid measure, money, weight, time, etc.), used as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot, 1 square yard, 1 cubic foot, 1 peck, 1 bushel, 1 gallon, 1 cent, 1 ounce, 1 pound, 1 hour, and the like.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="UpcPostDigitType">
		
<xs:annotation>
			
<xs:documentation>UPC Post Digit holds the last decimal digit representing the binary value of the check digit in the Universal Product Code.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	
<xs:simpleType name="UpcPrefixDigitType">
		
<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	
<xs:simpleType name="UpcProductSerialNumberType">
		
<xs:annotation>
			
<xs:documentation>UPC Product Serial Number holds the 5 decimal digits  representing the binary code identifying the Product in the Universal Product code.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	
<xs:simpleType name="UpcVendorCodeType">
		
<xs:annotation>
			
<xs:documentation>UPC Vendor Code holds the  5 decimal digits of the Universal Product Code that identify the supplier of the product.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	
<xs:simpleType name="UrbanAreaIdType">
		
<xs:annotation>
			
<xs:documentation>Urban Area ID identifies an urban area in the UFMI.  It is the first element of the DirectConnect UFMI number. The format of the UFMI number is: Urban Area Id * Fleet Id * Member Id. Example 164*100*3441.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="UrbanFleetMemberIdConcatType">
		
<xs:annotation>
			
<xs:documentation>Urban Fleet Member ID is a concatenation of the Urban Area Id, Fleet Id, and Member Id that represent an address in a format recognized within iDEN Push-To-Talk (PTT) or Direct Connect. For example, a UFMI number of 500*600*700, translates to 500 is the Urban Area ID, 600 is the Fleet, and 700 is the Member.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="uicc">
		
<xs:annotation>
			
<xs:documentation>uicc id contains a 20 byte decimal value used to identify a device in the LTE network. 
</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="20"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="UserIdType">
		
<xs:annotation>
			
<xs:documentation>User Identifier represents an identifier of a PARTY used in logging into a computerized system.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="UspsCountyCodeType">
		
<xs:annotation>
			
<xs:documentation>United States Postal Service County Code contains the Postal Service 2 character code for identification of a County.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="UspsPostalCdExtensionType">
		
<xs:annotation>
			
<xs:documentation>USPSPostalCdExtension contains the last 4 characters of the nine digit USPS Postal Code.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="UspsPostalCdType">
		
<xs:annotation>
			
<xs:documentation>USPSPostalCd contains the first 5 characters of the nine digit USPS Postal Code.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="UspsStateAbbreviationType">
		
<xs:annotation>
			
<xs:documentation>A United States Postal Service (USPS) State Abbreviation Code is the set of characters that are selected from a State or Protectorate name and specified by the USPS to represent the name of a State or US Protectorate for the purpose of mail delivery.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:length value="2"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="VersionNumberType">
		
<xs:annotation>
			
<xs:documentation>Version Number Type is a string containing the release of a Service, Header, Trailer, Business Transaction, API, etc.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="VertexGeographicCityCodeTpe">
		
<xs:annotation>
			
<xs:documentation>VertexGeographicCityCode is a character string concatenated with VertexGeographicCountyCode, VertexGeographicStateCode and Tax Authority ID to produce the unique identifier of a Taxing jurisdiction.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="4"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="VertexGeographicCountyCodeType">
		
<xs:annotation>
			
<xs:documentation>VertexGeographicCountyCode is a character string concatenated with VertexGeographicCityCode, VertexGeographicStateCode and Tax Authority ID to produce the unique identifier of a Taxing jurisdiction.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="3"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="VertexGeographicStateCodeType">
		
<xs:annotation>
			
<xs:documentation>VertexGeographicStateCode is a character string concatenated with VertexGeographicCityCode, VertexGeographicCountyCode and Tax Authority ID to produce the unique identifier of a Taxing jurisdiction.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="2"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="WipEnabledFlagType">
		
<xs:annotation>
			
<xs:documentation>WIP Enabled Flag indicates whether this item can be a part of a work order or not. Values can be either "Y" or "N".</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="WirelessDeviceActivityCodeType">
		
<xs:annotation>
			
<xs:documentation>The wirelessDeviceActivityCode indicates what activity was last taken on the device in the supply chain steps.

Valid Values:
01  Account issue
02  Subinventory Transfer
03  Direct Inter-Organization Transfer
17  Return Assemblies to WIP
21  Intransit Shipment
31  Account alias issue
32  Miscellaneous issue
33  Sales Order Shipment
35  Issue Components to WIP
40  Account Receipt
41  Account Alias Receipt
42  Miscellaneous Receipt
43  Return Components from WIP
44  WIP Assembly Completion
80  Average Cost Update

The following code values to be assigned after D6682 implementation:
Purchase Receipt
Repair Vendor Receipt
Brightpoint Receipt
Cycle Count Adj Positive
Cycle Count Adj Negative
Adjustment Positive
Adjustment Negative
Return Warehouse Transfer
VOI Purchase Receipt
VOI Cycle Count Adj Positive
VOI Cycle Count Adj Negative
VOI Adjustment Positive
VOI Adjustment Negative</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="2"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="WirelessDeviceActivityDateType">
		
<xs:annotation>
			
<xs:documentation>The wirelessDeviceActivityDate gives the date that an activity was last taken on the device in the supply chain steps.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="cdm:SimpleDateType"/>
	</xs:simpleType>
	
<xs:simpleType name="WirelessDeviceAddressType">
		
<xs:annotation>
			
<xs:documentation>Wireless Device Address holds the address for an authenticated device with access to the network.  Wireless Device Address Type Codes identifies the type of address in Wireless Device Address. 

Possible types:
Medium Access Control Address (MAC Address)
Trusted Server Address</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="WirelessDeviceAddressTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Wireless Device Address Type Codes identifies the type of address in Wireless Device Address. 

Possible types:
Medium Access Control Address (MAC Address)
Trusted Server Address</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="WirelessNetworkDeviceTypeCdType">
		
<xs:annotation>
			
<xs:documentation>Wireless Network Device Type Code specifies which type of serialization is used to identify an instance of the product.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="WirelessDeviceModeCodeType">
		
<xs:annotation>
			
<xs:documentation>Wireless Device Mode Code is a Sprint defined code used to identify the wireless network technology used by the device.

Possible values:
"A" - Advanced Mobile Phone Service (AMPS)
"C" - Code Division Multiple Access (CDMA)
"D" - CDMA and AMPS
"T" - Time Division Multiple Access (TDMA)
"I" - Integrated Digital Enhanced Network (IDEN)</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="WirelessDeviceTypeCodeType">
		
<xs:annotation>
			
<xs:documentation>Wireless Device Type Code is a Sprint defined code used to identify the type of Wireless Network Access Device.

Possible Device Types:
"C" - CELLULAR
"D" - Personal Communication Service (PCS) and CELLULAR
"K" - Personal Communication Service (PCS) with Enhanced Variable Rate Coding (EVRC)
"L" - Personal Communication Service (PCS) and CELLULAR with Enhanced Variable Rate Coding (EVRC)
"M" - HYBRID
"P" - Personal Communication Service (PCS)</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="WithinCityLimitsYesNoCdType">
		
<xs:annotation>
			
<xs:documentation>Within City Limits Yes No Code is a Yes/No flag  indicating the customer address is within the city limit or is outside the city limit.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:complexType name="AccountHolderType">
		
<xs:sequence>
			
<xs:element ref="cdm:party"/>
			
<xs:element ref="cdm:partyNamePurpose"/>
			
<xs:element ref="cdm:partyContactMethod"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="AcknowledgeTransactionType">
		
<xs:sequence>
			
<xs:element ref="cdm:TransactionAcknowledgement" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="AdvancedShipmentNotificationLineType">
		
<xs:sequence>
			
<xs:element ref="cdm:advancedShipmentNotificationId" minOccurs="0"/>
			
<xs:element ref="cdm:advancedShipmentNotificationLineId" minOccurs="0"/>
			
<xs:element ref="cdm:advancedShipmentNotificationLineQuantity" minOccurs="0"/>
			
<xs:element ref="cdm:advancedShipmentNotificationFromLocation" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="AffinityPartnerMemberType">
		
<xs:sequence>
			
<xs:element ref="cdm:affinityPartnerMemberId">
				
<xs:annotation>
					
<xs:documentation>Affinity Partner Identiier uniquely identifies an instance of Product Deployment Affinity Prtner within the context of the specified Product Deployment.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:affinityPartnerMembershipEffectiveFromDate">
				
<xs:annotation>
					
<xs:documentation>Affinity Partner Membership Effective From Date contains the first calendar day the Subscriber's Affinity partner membership is associated with the specified Price Plan.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:affinityPartnerMembershipEffectiveThruDate" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Affinity Partner Membership Effective Thru Date contains the last calendar day the Subscriber's Affinity partner membership is associated with the specified Price Plan.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:productDeploymentTerminationReasonCode" minOccurs="0"/>
			
<xs:element ref="cdm:productId"/>
			
<xs:element ref="cdm:partyId"/>
			
<xs:element ref="cdm:affinityPartnerMemberName"/>
			
<xs:element ref="cdm:affinityPartnerMembershipIdentifier"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="BillingAccountContactMethodType">
		
<xs:sequence>
			
<xs:element ref="cdm:billingAccount"/>
			
<xs:element name="billingAccountContactMethodPurposeCode" type="xs:string" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Billing Account Contact Method Purpose Code identifies the role the Contact Method fills within the context of the BILLING ACCOUNT.                                                                   Possible value:                                             "Billing Address"                                           "Report Destination Address"                          "External Account Administrator Contact Method"                                             "Sprint Customer Care Group Contact Method"  etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="billingAccountContactMethodId" type="xs:string" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Billing Account Contaact MEthod Identifier uniquely identifies the instance of Contact Methos and its purpose within the context of the BILLING ACCOUNT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="billingAccountContactMethodEffectiveFromDate" type="xs:date" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Billing Account Contact Method Effective from Date holds the first calendar day the Contact Method fills the specified purpose within the context of the BILLING ACCOUNT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="billingAccountContactmethodEffectiveThruDate" type="xs:date" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Billing Account Contact Method Effective from Date holds the last calendar day the Contact Method fills the specified purpose within the context of the BILLING ACCOUNT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:partyContactMethod"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="BillingAccountMdnImplementationType">
		
<xs:sequence>
			
<xs:element ref="cdm:billingAccountSubscriptionAssignment"/>
			
<xs:element ref="cdm:mobileDirectoryNumberImplementation"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="BillingAccountPartyRoleType">
		
<xs:sequence>
			
<xs:element ref="cdm:billingAccount"/>
			
<xs:element name="billingAccountPartyRoleId" type="xs:string" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Billing Account PartyRole Identifier uniquely identifies the instance of Party Role within the context of the specified BILLING ACCOUNT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="billingAccountPartyRoleCode" type="xs:string" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Billing Account Party Role Code identifies the Role the PARTY plays within the context of the specified BILLING ACCOUNT.                                                                          Possible values:                              "ACCOUNT HOLDER"                    "EXTERNAL ACCONT ADMINISTRATOR"                        "AFFILIATE"                                 "SPRINT ACCOUNT MANAGER"    "SALES CHANNEL"                        "CUSTOMER CARE GROUP"           etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="billingAccountPartyRoleEffectiveFromDate" type="xs:date" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Billing Account Party Role Effective From Date holds the first calendar day the PARTY fills the role within the context of the BILLING ACCOUNT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="billingAccountPartyRoleEffectiveThruDate" type="xs:date" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Billing Account Party Role Effective Thru Date holds the last calendar day the PARTY fills the role within the context of the BILLING ACCOUNT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:roleParty"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="BillingAccountSubscriptionAssignmentType">
		
<xs:sequence>
			
<xs:element ref="cdm:billingAccount"/>
			
<xs:element ref="cdm:subscription"/>
			
<xs:element ref="cdm:billingAccountSubscriptionAssignmentEffectiveFromDate"/>
			
<xs:element ref="cdm:billingAccountSubscriptionAssignmentEffectiveThruDate"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="BillingAccountType">
		
<xs:sequence>
			
<xs:element ref="cdm:billingAccountNumber">
				
<xs:annotation>
					
<xs:documentation>Billing Account Number uniquely identifies an instance of Billing Account used to accrue charges for invoicing.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="billingSystemId" type="xs:string" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Billing System Identifier identifies the Billing System the Account resides in.                                                   Valid values:                       "Ensemble"                         "P2K"</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:billingAccountEstablishedDate" minOccurs="0"/>
			
<xs:element name="accountTypeCd" type="xs:string" minOccurs="0"/>
			
<xs:element name="singleUserIndicator" type="xs:string" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Single User Indicator identifies the BILLING ACCOUNT as an account with only one SUBSCRIPTION.                                                        Valid values:                        "T" =&gt; TRUE, the account has a single Subscription        "F" =&gt; FALSE the account has more than one Subscription.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="hierarchyRootIndicator" type="xs:string" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Hierarchy Root Indicator identifies the BILLING ACCOUNT as a root node in an Account Hierarchy.                                                                 Valid values:                            "T" =&gt; TRUE, the billing Account is a Root Node             "F" =&gt; FALSE, the Billing Account is NOT a Root Node                 </xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="inCollectionIndicator" type="xs:string" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>In Collection Indicator identifies the BILLING ACCOUNT as an account in collections.

Valid values:
"T" =&gt; TRUE, the account is in Collections
"F" =&gt; FALSE the account is NOT in collections.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="BillOfMaterialsInstructionType">
		
<xs:sequence>
			
<xs:element ref="cdm:billOfMaterialsInstructionId"/>
			
<xs:element ref="cdm:billOfMaterialsInstructionString"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="BulkExceptionsType">
		
<xs:sequence>
			
<xs:element ref="cdm:exceptionConditionCode" minOccurs="0"/>
			
<xs:element ref="cdm:exceptionReasonCode" minOccurs="0"/>
			
<xs:element ref="cdm:exceptionRecordId" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Exception Record Identifier  holds the ordinal postion number of the record within the batch file.  Exception Record Identifier  will be return by Transform tool.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:exceptionTechInfo" minOccurs="0"/>
			
<xs:element ref="cdm:exceptionMessage1" minOccurs="0"/>
			
<xs:element ref="cdm:exceptionMessage2" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="BulkHeaderType">
		
<xs:sequence>
			
<xs:element ref="cdm:batchHeaderVersion" minOccurs="0"/>
			
<xs:element ref="cdm:fileTransferId" minOccurs="0"/>
			
<xs:element ref="cdm:fileTransferType" minOccurs="0"/>
			
<xs:element ref="cdm:transformationFlag" minOccurs="0"/>
			
<xs:element ref="cdm:senderId" minOccurs="0"/>
			
<xs:element ref="cdm:recieverId" minOccurs="0"/>
			
<xs:element ref="cdm:batchId" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="BusinessContactType">
		
<xs:sequence>
			
<xs:element ref="cdm:lastName" minOccurs="0"/>
			
<xs:element ref="cdm:firstName" minOccurs="0"/>
			
<xs:element ref="cdm:middleName" minOccurs="0"/>
			
<xs:element ref="cdm:namePrefix" minOccurs="0"/>
			
<xs:element ref="cdm:nameSuffix" minOccurs="0"/>
			
<xs:element ref="cdm:jobTitle" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="BusinessInteractionType">
		
<xs:sequence>
			
<xs:element ref="cdm:event"/>
			
<xs:element ref="cdm:businessInteractionContactTypeCode" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="BusinessInteractionPartyRoleType">
		
<xs:sequence>
			
<xs:element ref="cdm:event" minOccurs="0"/>
			
<xs:element ref="cdm:businessInteractionPartyRoleCode" minOccurs="0"/>
			
<xs:element ref="cdm:businessInteractionPartyRoleEffectiveFromDate" minOccurs="0"/>
			
<xs:element ref="cdm:roleParty"/>
			
<xs:element ref="cdm:businessInteractionPartyRoleEffectiveThruDate" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="BusinessInteractionPurposeType">
		
<xs:sequence>
			
<xs:element ref="cdm:businessInteraction"/>
			
<xs:element ref="cdm:businessInteractionPurposeCode" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="BusinessInteractionWorkEffortType">
		
<xs:sequence>
			
<xs:element ref="cdm:businessInteraction"/>
			
<xs:element ref="cdm:workEffort"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="CarrierType">
		
<xs:sequence>
			
<xs:element ref="cdm:party"/>
			
<xs:element ref="cdm:namePurpose" maxOccurs="unbounded"/>
			
<xs:element ref="cdm:contactMethod" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="CarrierShipmentMethodType">
		
<xs:sequence>
			
<xs:element ref="cdm:carrier"/>
			
<xs:element ref="cdm:shipmentMethodCode"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="CaseType">
		
<xs:sequence>
			
<xs:element ref="cdm:caseId"/>
			
<xs:element ref="cdm:caseDescription"/>
			
<xs:element ref="cdm:caseStartDate"/>
			
<xs:element ref="cdm:caseStartTime"/>
			
<xs:element ref="cdm:caseEndDate"/>
			
<xs:element ref="cdm:caseEndTime"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="CdmaNetworkDeviceType">
		
<xs:sequence>
			
<xs:element ref="cdm:electronicSerialNumber" minOccurs="0"/>
			
<xs:element ref="cdm:mobileEquipmentIdentifier" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="CollectionCaseType">
		
<xs:sequence>
			
<xs:element ref="cdm:case"/>
			
<xs:element ref="cdm:billingAccount"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="ContactMethodType">
		
<xs:annotation>
			
<xs:documentation>PARTY CONTACT METHOD represents the list of possible mechanisms that may be used to contact an instance of PARTY.

Examples:
Telephone Number
Pager Number
FAX Number
Street Address
Rural Route Address
Post Office Box
Email Address
IP Address
Web Address
Banner
Popup</xs:documentation>
		</xs:annotation>
		
<xs:sequence>
			
<xs:element ref="cdm:contactMethodId"/>
			
<xs:element name="contactMethodTypeCd" type="xs:string" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Contact Method Type Code uniquely identifies a  method that may be used to contact a PARTY, CUSTOMER ACCOUNT, SUBSCRIPTION, etc.

Values:
"Electronic Address"                  "Telecommunication Number"    "USPS Postal ADdress"</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:contactMethodEffectiveFromDate" minOccurs="0"/>
			
<xs:element ref="cdm:contactMethodEffectiveThruDate" minOccurs="0"/>
			
<xs:choice>
				
<xs:element ref="cdm:electronicAddrContactMethod"/>
				
<xs:element ref="cdm:telecomNbrContactMethod"/>
				
<xs:element ref="cdm:uspsPostalAddress"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="ContainerInventoryItemType">
		
<xs:sequence>
			
<xs:element ref="cdm:container"/>
			
<xs:element ref="cdm:inventoryItem" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="ContainerType">
		
<xs:sequence>
			
<xs:element ref="cdm:containerId"/>
			
<xs:element ref="cdm:containerTypeCd"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="DeliverableType">
		
<xs:sequence/>
	</xs:complexType>
	
<xs:complexType name="DistributionOrderItemType">
		
<xs:annotation>
			
<xs:documentation>Order Number required if Recommendation Type Code = "A".   
Ordre Item Identifier  required if Recommendatioin Type Code = "A".
Eestimated Ship Date required if Recommendation Type Code = "R"
Estimated Delivery Date required if Recommendation Type Code = "K" or "P".
Tranist Days required if Recommendation Type Code = "R"</xs:documentation>
		</xs:annotation>
		
<xs:sequence>
			
<xs:element ref="cdm:orderItem"/>
			
<xs:element ref="cdm:orderItemproduct"/>
			
<xs:element name="estimatedShipDate" type="xs:date" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Estimated Ship Date contains the estimated calendar date of the shipment will leave the warehouse.  This may or may not be the same as the customer want date.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="estimatedDeliveryDate" type="xs:date" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Estimated Delivery Date holds the calendar date computed by adding the Customer's specified Transit Days to the Estimated Ship Date.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="transitDays" type="xs:decimal" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Transit Days represents the number of days that are added to the Estimated Ship Date to derive the Estimated Delivery Date.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="totalShippedQauntity" type="xs:decimal" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Total Shipped Quantity holds the number of items from this Order Item that have been shipped.                                                                  Total Shipped Quantity should be less than or equal to orderITemQuantity.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="openQuantity" type="xs:decimal" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Open Quantity holds the  number of items requiring approval that have not yet been approved as of the current or system date.                                                  Open Quantity = Order Item Quantity minus the number of items previously approved.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="backorderedQuantity" type="xs:decimal" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Back Ordered Quantity holds the number of items on backorder.                                                                 Back Ordered Quantity should be equal to or less than Order Item Quantity.  If no items are backordered Back Ordered Quantity will be set to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="unapprovedQuantity" type="xs:decimal" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Unapproved Quantity holds the number of items requiring approval that have not yet been approved as of the Requested Shipment Date.                                             If current/system date is greater than Requested Shioment Date then Unapproved Quantity equals Order Item Quantity minus approved quantity                ELSE Unapproved Quantity is set to zero. </xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="approvedQuantity" type="xs:decimal" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Approved Quantity holds the number items requiring approaval tha have been approved.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="allocatedQuantity" type="xs:decimal" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Allocated Quantity holds the number of items that have been checked, pick verified and packed.  If no items have beeen checked, pick verified and packed Allocated Quanityt will be zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="InventoryItemIssuanceId" type="xs:string" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Inventory Item Issuance Identifier identifies a grouping of  Order Item  used in the creation of a Pick List for shipping purposes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="returnQualityCd" type="xs:string" minOccurs="0"/>
			
<xs:element ref="cdm:backOrderFlag" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="DistributionOrderType">
		
<xs:sequence>
			
<xs:element ref="cdm:order"/>
			
<xs:element ref="cdm:salesOrderTypeCd"/>
			
<xs:element name="distributionOrderSourceCd" type="xs:string" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Distribution Order Source Code based on the front end placing the order:                                                             Possible values:
A = 
S = 
Q = 
D = Direct Ship from a retail store
R = </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="ElectronicAddrContactMethodType">
		
<xs:annotation>
			
<xs:documentation>Electronic Address Contact Method</xs:documentation>
		</xs:annotation>
		
<xs:sequence>
			
<xs:element ref="cdm:electronicAddressPurposeCode" minOccurs="0"/>
			
<xs:element ref="cdm:electronicAddressTypeCode" minOccurs="0"/>
			
<xs:element ref="cdm:electronicAddressString"/>
			
<xs:element ref="cdm:emailProtocol" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="ElectronicSerialNumberType">
		
<xs:sequence>
			
<xs:element ref="cdm:electronicSerialNumberDec" minOccurs="0"/>
			
<xs:element ref="cdm:electronicSerialNumberHex" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="EquipmentIdentifierType">
		
<xs:choice>
			
<xs:element ref="cdm:electronicSerialNumberDec"/>
			
<xs:element ref="cdm:mobileEquipmentIdentifierDec"/>
			
<xs:element ref="cdm:internationalMobileEquipmentIdDec"/>
			
<xs:element ref="cdm:manufacturerSerialNumber"/>
			
<xs:element ref="cdm:subscriberIdentityModuleIdDec"/>
		</xs:choice>
	</xs:complexType>
	
<xs:complexType name="ErrorMessageProcessingType">
		
<xs:sequence>
			
<xs:element ref="cdm:errorTypeCode"/>
			
<xs:element ref="cdm:errorValueId"/>
			
<xs:element ref="cdm:errorMessageText"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="EventType">
		
<xs:annotation>
			
<xs:documentation>Event Type contains the generic elements of the various ccategories of EVENT.</xs:documentation>
		</xs:annotation>
		
<xs:sequence>
			
<xs:element ref="cdm:eventId" minOccurs="0"/>
			
<xs:element ref="cdm:eventStartDate" minOccurs="0"/>
			
<xs:element ref="cdm:eventStartTIme" minOccurs="0"/>
			
<xs:element ref="cdm:eventEndDate" minOccurs="0"/>
			
<xs:element ref="cdm:eventEndTime" minOccurs="0"/>
			
<xs:element ref="cdm:eventTypeCode" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="ExceptionDetailType">
		
<xs:sequence>
			
<xs:element ref="cdm:errorSystem"/>
			
<xs:element ref="cdm:errorTransactionId" minOccurs="0"/>
			
<xs:element ref="cdm:errorProgramId" minOccurs="0"/>
			
<xs:element ref="cdm:fieldInError" minOccurs="0"/>
			
<xs:element ref="cdm:generalErrorDescription"/>
			
<xs:element ref="cdm:detailedErrorDescription"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="FacilityContactMethodType">
		
<xs:sequence>
			
<xs:element ref="cdm:facility"/>
			
<xs:element ref="cdm:facilityContactMethodId" minOccurs="0"/>
			
<xs:element ref="cdm:facilityContactMethodEffectiveFromDate" minOccurs="0"/>
			
<xs:element ref="cdm:facilityContactMethodEffectiveThruDate" minOccurs="0"/>
			
<xs:element ref="cdm:contactMethod"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="FacilityContainerType">
		
<xs:sequence>
			
<xs:element ref="cdm:facility"/>
			
<xs:element ref="cdm:container"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="FacilityPartyRoleType">
		
<xs:sequence>
			
<xs:element ref="cdm:facilityPartyRoleCode" minOccurs="0"/>
			
<xs:element ref="cdm:partyId"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="FacilityType">
		
<xs:sequence>
			
<xs:element ref="cdm:facilityId">
				
<xs:annotation>
					
<xs:documentation>Facility Identifier uniquely identifies an instance of FACILITY.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:facilityName" minOccurs="0"/>
			
<xs:element ref="cdm:facilityDescription" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="FacilityTypeListType">
		
<xs:sequence>
			
<xs:element ref="cdm:facilityTypeCode"/>
			
<xs:element ref="cdm:facilityTypeDescription"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="FixedAssetType">
		
<xs:sequence>
			
<xs:element ref="cdm:fixedAssetId"/>
			
<xs:element ref="cdm:fixedAssetName"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="FormattedPostalAddressLinesType">
		
<xs:annotation>
			
<xs:documentation>Formatted Postal Address Line holds the components of the postal address (StreetName, HouseNumber,ec.) in three lines formatted to USPS standards.</xs:documentation>
		</xs:annotation>
		
<xs:sequence>
			
<xs:element ref="cdm:postalAddressLine1"/>
			
<xs:element ref="cdm:postalAddressLine2" minOccurs="0"/>
			
<xs:element ref="cdm:postalAddressLine3" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="IdenNetworkDeviceType">
		
<xs:sequence>
			
<xs:element ref="cdm:manufacturerSerialNumber" minOccurs="0"/>
			
<xs:element ref="cdm:subscriberIdentityModuleIdDec" minOccurs="0"/>
			
<xs:element ref="cdm:internationalMobileEquipmentIdDec" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="IdmUserIdType">
		
<xs:annotation>
			
<xs:documentation>IDM User Identifier Type describes the data elements that hold the User ID and name related data describing the INDIVIDUAL identified as the IDM User.</xs:documentation>
		</xs:annotation>
		
<xs:sequence>
			
<xs:element ref="cdm:partyNameEffectiveFromDate"/>
			
<xs:element ref="cdm:partyNameEffectiveThruDate" minOccurs="0"/>
			
<xs:element ref="cdm:userId"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="IdmUserType">
		
<xs:sequence>
			
<xs:element ref="cdm:userId"/>
			
<xs:element ref="cdm:password"/>
			
<xs:element ref="cdm:identificationQuestion"/>
			
<xs:element ref="cdm:identificationAnswer"/>
			
<xs:element ref="cdm:birthDate"/>
			
<xs:element ref="cdm:genderCode" minOccurs="0"/>
			
<xs:element ref="cdm:contactMethod" minOccurs="0" maxOccurs="unbounded"/>
			
<xs:element ref="cdm:otherSystemLogin" minOccurs="0" maxOccurs="unbounded"/>
			
<xs:element ref="cdm:systemMdnAssignment" minOccurs="0" maxOccurs="unbounded"/>
			
<xs:element ref="cdm:systemElectronicAddressAssignment" minOccurs="0" maxOccurs="unbounded"/>
			
<xs:element ref="cdm:partyRolePreference" minOccurs="0" maxOccurs="unbounded"/>
			
<xs:element ref="cdm:systemCustomerAccountPartyRole" minOccurs="0" maxOccurs="unbounded"/>
			
<xs:element ref="cdm:systemSubscriptionPartyRole" minOccurs="0" maxOccurs="unbounded"/>
			
<xs:element ref="cdm:systemProductDeploymentPartyRole" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="IndividualNameComponentsType">
		
<xs:sequence>
			
<xs:element ref="cdm:namePrefix" minOccurs="0"/>
			
<xs:element ref="cdm:firstName" minOccurs="0"/>
			
<xs:element ref="cdm:middleName" minOccurs="0"/>
			
<xs:element ref="cdm:lastName"/>
			
<xs:element ref="cdm:nameSuffix" minOccurs="0"/>
			
<xs:element ref="cdm:jobTitle" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="IndividualNameType">
		
<xs:choice>
			
<xs:element ref="cdm:individualNameComponents">
				
<xs:annotation>
					
<xs:documentation>Individual Name Components consists of a sequence of the separate components of an Individual's name.   These components are: Last Name, Middle Name, First Name, Name Prefix, Name Suffix and Job Title.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:partyNameString"/>
		</xs:choice>
	</xs:complexType>
	
<xs:complexType name="InstructionType">
		
<xs:sequence>
			
<xs:element ref="cdm:instructionTypeCode"/>
			
<xs:element ref="cdm:instructionSequenceNbr"/>
			
<xs:element ref="cdm:instructionText"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="InternationalMobileSubscriberIdentityType">
		
<xs:sequence>
			
<xs:element ref="cdm:mobileCountryCode"/>
			
<xs:element ref="cdm:mobileNetworkCode"/>
			
<xs:element ref="cdm:mobileStationIdentificationNumber"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="InTransitOrderSynchronizationType">
		
<xs:sequence>
			
<xs:element ref="cdm:distributionOrderItem"/>
			
<xs:element ref="cdm:shipment"/>
			
<xs:element ref="cdm:shipmentLineItem"/>
			
<xs:element ref="cdm:fromInventoryLocation"/>
			
<xs:element ref="cdm:toInventoryLocation"/>
			
<xs:element ref="cdm:inventoryItemIssuance"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="InventoryAdjustmentType">
		
<xs:sequence>
			
<xs:element ref="cdm:inventoryTransaction"/>
			
<xs:element ref="cdm:inventoryLocation"/>
			
<xs:element ref="cdm:product"/>
			
<xs:element ref="cdm:inventoryAdjustmentQuantity"/>
			
<xs:element ref="cdm:inventoryAdjustmentTypeCode">
				
<xs:annotation>
					
<xs:documentation>Inventory Adjustment Type Code

Values:
'A' = Add Inventory (Increment)
'S' = Subtract Inventory (Decrement)</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:adjustmentReceiptTypeCode" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Adjustment Receipt Type Code contains a value identifying the origin of the Adjustment.

Valid Values:
1 – PeopleSoft Purchase Order
2 – UPS DC X-fer
3 – Packaging Plus
4 – Repair Vendor (OEM/ non-OEM)
5 – VOI
6 – Brightpoint Receipts
7 -  Return Warehouse Transfer</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:sequence minOccurs="0">
				
<xs:element ref="cdm:inventoryWorkOrderFulfillment" minOccurs="0">
					
<xs:annotation>
						
<xs:documentation>Inventory Work Order Fulfillment contains the details of a Work Order and the Job necessary to complete the Work Order.</xs:documentation>
					</xs:annotation>
				</xs:element>
				
<xs:element ref="cdm:inventoryAdjustmentOrder" minOccurs="0"/>
				
<xs:element ref="cdm:inventoryAdjustmentShipment" minOccurs="0">
					
<xs:annotation>
						
<xs:documentation>Inventory Adjustment Shipment holds the details describing the Shipment and Shipment Item that prompted the Inventory Adjustment.</xs:documentation>
					</xs:annotation>
				</xs:element>
				
<xs:element ref="cdm:vendor" minOccurs="0"/>
				
<xs:element ref="cdm:returnWarehouseTransferTransaction" minOccurs="0"/>
			</xs:sequence>
			
<xs:element ref="cdm:inventoryItem" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="InventoryAdjustmentOrderItemType">
		
<xs:sequence>
			
<xs:element ref="cdm:orderItemShipmentItem"/>
			
<xs:element ref="cdm:shipment"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="InventoryAdjustmentOrderType">
		
<xs:sequence>
			
<xs:element ref="cdm:order"/>
			
<xs:element ref="cdm:rmaReceiptQualityCode"/>
			
<xs:element ref="cdm:inventoryAdjustmentOrderItem" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="InventoryAdjustmentShipmentItemType">
		
<xs:sequence>
			
<xs:element ref="cdm:orderItemShipmentItem"/>
			
<xs:element ref="cdm:order"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="InventoryAdjustmentShipmentType">
		
<xs:sequence>
			
<xs:element ref="cdm:shipment"/>
			
<xs:element ref="cdm:InventoryAdjustmentShipmentItem" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="InventoryItemIssuanceType">
		
<xs:sequence>
			
<xs:element name="inventoryItemIssuanceId" type="xs:string" minOccurs="0"/>
			
<xs:element name="inventoryItemIssuanceDateTime" type="xs:dateTime" minOccurs="0"/>
			
<xs:element name="issuedItemQuantity" type="xs:decimal" minOccurs="0"/>
			
<xs:element ref="cdm:shipment" minOccurs="0"/>
			
<xs:element ref="cdm:orderItemShipmentItem" minOccurs="0"/>
			
<xs:element ref="cdm:distributionOrder" minOccurs="0"/>
			
<xs:element ref="cdm:inventoryItem" minOccurs="0" maxOccurs="unbounded"/>
			
<xs:element ref="cdm:pickList" minOccurs="0"/>
			
<xs:element ref="cdm:pickListLineItem" minOccurs="0"/>
			
<xs:element ref="cdm:plannedShipmentRouteSegment" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="InventoryItemType">
		
<xs:sequence>
			
<xs:element ref="cdm:product"/>
			
<xs:choice>
				
<xs:element ref="cdm:wirelessNetworkAccessDevice"/>
				
<xs:element name="accessory"/>
			</xs:choice>
			
<xs:element ref="cdm:inventoryItemWeight"/>
			
<xs:element ref="cdm:inventoryItemVolume"/>
			
<xs:element ref="cdm:inventoryTypeCode"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="InventoryFacilityContactMethodType">
		
<xs:sequence>
			
<xs:element ref="cdm:contactMethod"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="InventoryFacilityPartyRoleType">
		
<xs:sequence>
			
<xs:element ref="cdm:facility"/>
			
<xs:element ref="cdm:facilityPartyRole"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="InventoryFacilityType">
		
<xs:sequence>
			
<xs:element ref="cdm:facility"/>
			
<xs:element name="inventoryFacilityStatusCd" type="xs:string" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Valid facilityStatusCd values:
"A" =&gt; Active
"I" =&gt; Inactive</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="inventoryFacilityTypeCd" type="xs:string" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>R-Sprint Retail Stores
P-Physical Distribution Center Code
L-Logical Distribution Center Code</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:contactMethod" minOccurs="0" maxOccurs="unbounded"/>
			
<xs:element ref="cdm:inventoryFacilityPartyRole" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="InventoryLocationType">
		
<xs:sequence>
			
<xs:element name="warehouseFacility" type="cdm:InventoryFacilityType" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Warehouse Facility Identifier

Valid Warehouse Facility Identifier values:
RW1 =&gt; Louisville Bldg 1 (Bldg2)
DC1 =&gt; Louisville Bldg 2 (1860)
DC2 =&gt; Reno
PR1 =&gt; Puerto Rico          RMS =&gt; Retail Store</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="subInventoryFacility" type="cdm:InventoryFacilityType" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Sub-Inventory Facility Identifier identifies a subdivision of a warehouse or  an RMS store.

Valid sub-Inventory Facility Identifier Values:
QA =&gt; Quarantine
MN =&gt; Main
ST =&gt; Stage
PP =&gt; Receiving
HD =&gt; Hold
SC =&gt; Scrap
CN =&gt; Consignment
BR =&gt; BER
TR =&gt; Triage
RT =&gt; Returns</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="containerTypeCd" type="xs:string" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Container ype Code contains a code value that identifies the kind of container identified by Container Identifier.                                                                    Valid Values:                       PALLET                              CARTON                                                                   Other possible Examples:      Self
File Drawer
Bin
Barrel
Room</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="containerId" type="xs:string" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>CONTAINER represents a more granular location residing within a FACILITY.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="InventoryOnHandType">
		
<xs:sequence>
			
<xs:element ref="cdm:inventoryLocation"/>
			
<xs:element ref="cdm:product"/>
			
<xs:element ref="cdm:availableQuantity"/>
			
<xs:element ref="cdm:restrictedQuantity"/>
			
<xs:element ref="cdm:inventoryOnHandQuantity"/>
			
<xs:element ref="cdm:allocatedQuantity"/>
			
<xs:element ref="cdm:availableForSaleFlag"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="InventoryRecommendationType">
		
<xs:sequence>
			
<xs:element name="fromInventoryLocation" type="cdm:InventoryLocationType">
				
<xs:annotation>
					
<xs:documentation>Inventory loation the items is transfered from.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="toInventoryLocation" type="cdm:InventoryLocationType">
				
<xs:annotation>
					
<xs:documentation>Inventory location the item is transfered to.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:distributionOrder"/>
			
<xs:element ref="cdm:distributionOrderItem"/>
			
<xs:element name="recommendationTypeCode" type="xs:string">
				
<xs:annotation>
					
<xs:documentation>Recommendation Type Code Values:
A - Approval Recommendation
R - Replenishment Recommendation; DC to DC transfer
K – Internal Kitting 
P – External Kitting (Packaging Plus)
</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="InventoryTransactionType">
		
<xs:sequence>
			
<xs:element ref="cdm:transactionCode" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Transaction Code

Valid Transaction Type Code values:
SDR =&gt; SalesOrder
WDR =&gt; WorkOrder
RMA =&gt; RMA
SCM =&gt; ShipConfirm
WCM =&gt; WIPConfirmation
RRC =&gt; RMAReceiptConfirmation
PDR =&gt; PurchaseOrder
EDF =&gt; EDF
PRC =&gt; POReceiptConfirmation
ADJ =&gt; Adjustment
IMS =&gt; ItemMaster
ISN =&gt; InventorySnapshot
UPD =&gt; UpdateOrders</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:transactionDescription" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Transaction Description holds the textual description of the code value in Transaction Code.

Valid Transaction Description values:
SalesOrder
WorkOrder
RMA
ShipConfirm
WIPConfirmation
RMAReceiptConfirmation
PurchaseOrder
EDF
POReceiptConfirmation
Adjustment
ItemMaster
InventorySnapshot
UpdateOrders</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:transactionId" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Transaction Identifier uniquely identifies a grouping of  records.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:transactionSequenceNbr" minOccurs="0"/>
			
<xs:element ref="cdm:transactionReasonCode" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Transaction Reason Code

Possible Order Status Change Reason Code values:
“H” =&gt; applying shipping exception
“X” for updating the packing status

InventoryAdjustment Transaction Reason Code Value:
SCR - Scrap transaction
OUT - Outbound shipping error (cannot fix with shipping action - must use an adjustment)
RCV - Receiving error
MFG - Manufacturing error
CDG - Carrier damage (damaged by transportation carrier)
WDG - Warehouse damage
RRE - Returns receiving error
SYS - System error 
SKU - Sku change error
RK - RESKU</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:transactionDateTime" minOccurs="0"/>
			
<xs:element ref="cdm:externalSystemUserId" minOccurs="0"/>
			
<xs:element ref="cdm:transactionTypeCode" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Transaction Type Code

The following distinct lists document the possible value lists known as of this date.  The actual codifcation used will be documented in the mapping deocument. 

Value List A: 
"A" =&gt; Create a new record
"C" =&gt; Update an existing record
"N" =&gt; Cancel

Value List B:
'10' =&gt; Add or Update
'90' =&gt; Close</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="InventoryWorkOrderFulfillmentType">
		
<xs:sequence>
			
<xs:element ref="cdm:inventoryWorkOrder"/>
			
<xs:element ref="cdm:billOfMaterialsMasterComponentCode" minOccurs="0"/>
			
<xs:element name="job" type="cdm:WorkEffortType">
				
<xs:annotation>
					
<xs:documentation>Set Work Effort Type Code to "JOB"</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="InventoryWorkOrderItemFulfillmentType">
		
<xs:sequence>
			
<xs:element ref="cdm:orderItem"/>
			
<xs:element ref="cdm:inventoryLocation"/>
			
<xs:element ref="cdm:kitBillOfMaterials">
				
<xs:annotation>
					
<xs:documentation>Kit Bill Of Materials describes the components of a Kit. </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="InventoryWorkOrderType">
		
<xs:sequence>
			
<xs:element ref="cdm:inventoryLocation"/>
			
<xs:element ref="cdm:order"/>
			
<xs:element ref="cdm:workOrderTypeCode">
				
<xs:annotation>
					
<xs:documentation>Work Order Type Code
Possible values:
WO_KIT
WO_DEKIT
WO_RF
WO_NST
WO_PLANNED</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:inventoryWorkOrderProcessTypeCode"/>
			
<xs:element ref="cdm:totalNumberOfKitsQuantity"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="KitComponentType">
		
<xs:sequence>
			
<xs:element ref="cdm:componentProduct"/>
			
<xs:element ref="cdm:componentInventoryFacility"/>
			
<xs:element ref="cdm:numberOfComponentsUsedQuantity"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="KitBillOfMaterialsType">
		
<xs:sequence>
			
<xs:element ref="cdm:Kit">
				
<xs:annotation>
					
<xs:documentation>Kit holds the Product details describing the Kit.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:kitInventoryFacility"/>
			
<xs:element ref="cdm:kitComponent"/>
			
<xs:element ref="cdm:billOfMaterialsInstruction" minOccurs="0" maxOccurs="unbounded">
				
<xs:annotation>
					
<xs:documentation>Bill Of Materials Instruction holds the textual description describing how the component Product is assembled into the parent Product.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:totalKitComponentQuantity"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="LatitudeType">
		
<xs:sequence>
			
<xs:element ref="cdm:latitudeDegreeNumber"/>
			
<xs:element ref="cdm:latitudeMinuteNumber"/>
			
<xs:element ref="cdm:latitudeSecondNumber"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="LongitudeType">
		
<xs:sequence>
			
<xs:element ref="cdm:longitudeDegreeNumber"/>
			
<xs:element ref="cdm:longitudeMinuteNumber"/>
			
<xs:element ref="cdm:longitudeSecondNumber"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="ManufacturerType">
		
<xs:annotation>
			
<xs:documentation>Manufacturer is a type of PARTY the produces </xs:documentation>
		</xs:annotation>
		
<xs:sequence>
			
<xs:element ref="cdm:manufacturerPartyId"/>
			
<xs:element ref="cdm:namePurpose" maxOccurs="unbounded"/>
			
<xs:element ref="cdm:contactMethod" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="ManufacturerWirelessNetworkAccessDeviceModelType">
		
<xs:sequence>
			
<xs:element ref="cdm:manufacturer"/>
			
<xs:element ref="cdm:modelName" minOccurs="0"/>
			
<xs:element ref="cdm:modelNumber" minOccurs="0"/>
			
<xs:element ref="cdm:wirelessDeviceTypeCode"/>
			
<xs:element ref="cdm:wirelessDeviceModeCode"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="MarketingProgramEnrollmentType">
		
<xs:sequence>
			
<xs:element ref="cdm:communicationServiceAreaId" minOccurs="0"/>
			
<xs:element ref="cdm:marketingProgramId" minOccurs="0"/>
			
<xs:element ref="cdm:marketingProgramEnrollmentEffectiveFromDate" minOccurs="0"/>
			
<xs:element ref="cdm:marketingProgramEnrollmentId"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="MobileDirectoryNumberInventoryItemType">
		
<xs:sequence>
			
<xs:element ref="cdm:mobileDirectoryNumber"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="MobileDirectoryNumberImplementationType">
		
<xs:sequence>
			
<xs:element ref="cdm:componentId"/>
			
<xs:element ref="cdm:networkAccessImplementation"/>
			
<xs:element ref="cdm:mobileDirectoryNumber"/>
			
<xs:element ref="cdm:portAwarenessIndicator" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="MobileEquipmentIdentifierType">
		
<xs:sequence>
			
<xs:element ref="cdm:mobileEquipmentIdentifierDec" minOccurs="0"/>
			
<xs:element ref="cdm:mobileEquipmentIdentifierHex" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="MobileStationIdentificationNumberInventoryItemType">
		
<xs:sequence>
			
<xs:element ref="cdm:mobileStationIdentificationNumber"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="MobileStationIdentificationNumberImplementationType">
		
<xs:sequence>
			
<xs:element ref="cdm:componentId"/>
			
<xs:element ref="cdm:networkAccessImplementation"/>
			
<xs:element ref="cdm:mobileStationIdentificationNumber"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="MqMessageHeaderType">
		
<xs:sequence>
			
<xs:element ref="cdm:messageHeaderVersion"/>
			
<xs:element ref="cdm:serviceName"/>
			
<xs:element ref="cdm:serviceQualifier" minOccurs="0"/>
			
<xs:element ref="cdm:serviceVersion"/>
			
<xs:element ref="cdm:messageSubType" minOccurs="0"/>
			
<xs:element ref="cdm:dialogTypeCode"/>
			
<xs:element ref="cdm:dialogSubTypeCode"/>
			
<xs:element ref="cdm:contentTypeCode" minOccurs="0"/>
			
<xs:element ref="cdm:parentDialogReference" minOccurs="0"/>
			
<xs:element ref="cdm:dialogReference"/>
			
<xs:element ref="cdm:applicationReference" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Application specific unique identifier that has its origin in some business process, like an ‘order number’.  For example, in an audit log it could be included, and used as a search criteria.  A particular application reference value may appear on a number messages if, for example, several transaction messages are generated in the process of completing the overall business process to which it is related.
This is a 1 - 24 character optional field, with no restriction as to content, beyond the requirement that values be text based.  Imbedded spaces and periods are acceptable
</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:applicationGroup">
				
<xs:annotation>
					
<xs:documentation>Unique Application Id which generated the request.  The application that generated a request needs to be captured within the message context.  This helps in tracking the source of errors (when messages start arriving with flawed contents), and in reporting on system usage patterns (what apps are sending messages where).  In cases where the messaging system has been architected with clearly defined component naming conventions, it should be possible to take the originating requester’s ‘name’, and relate it back to a particular responsible party.  This is three-part name of which ApplGroup is just the first.  Alphanumeric only.  Should usually be a Sprint ApplID.  If there is no Applid assigned the EAI Development staff should be contacted to define a unique applicationGroup.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:componentGroup">
				
<xs:annotation>
					
<xs:documentation>text field, referring to a major sub-group within the applicationGroup (like a project or sub-system)</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:componentName">
				
<xs:annotation>
					
<xs:documentation>text field, referring to the actual software component within the componentGroup that is responsible for the message</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:reqSentDateTime"/>
			
<xs:element ref="cdm:financialAccountNumber" minOccurs="0"/>
			
<xs:element ref="cdm:applicationUserId"/>
			
<xs:element ref="cdm:applicationFlexData" minOccurs="0"/>
			
<xs:element ref="cdm:replyCompletionCode" minOccurs="0"/>
			
<xs:element ref="cdm:replyReasonCode" minOccurs="0"/>
			
<xs:element ref="cdm:exceptionDetail" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="NamePurposeType">
		
<xs:sequence>
			
<xs:element ref="cdm:partyNamePurposeCd" minOccurs="0"/>
			
<xs:element ref="cdm:namePurposeEffectiveFromDate" minOccurs="0"/>
			
<xs:element ref="cdm:namePurposeEffectiveThruDate" minOccurs="0"/>
			
<xs:element ref="cdm:partyName"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="NanpTelecomNumberType">
		
<xs:sequence>
			
<xs:element ref="cdm:npaNumber"/>
			
<xs:element ref="cdm:nxxNumber"/>
			
<xs:element ref="cdm:phoneLineNumber"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="NetworkAccessImplementationType">
		
<xs:sequence>
			
<xs:element ref="cdm:componentImplementation"/>
			
<xs:element ref="cdm:networkAccessActivationFromDate" minOccurs="0"/>
			
<xs:element ref="cdm:networkAccessActivationFromTime" minOccurs="0"/>
			
<xs:element ref="cdm:networkAccessActivationThruDate" minOccurs="0"/>
			
<xs:element ref="cdm:networkAccessActivationThruTime" minOccurs="0"/>
			
<xs:element ref="cdm:networkAccessStatusCode" minOccurs="0"/>
			
<xs:element ref="cdm:networkAccessStatusAssignmentDate" minOccurs="0"/>
			
<xs:element ref="cdm:networkAccessStatusAssignmentTime" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="OpenOrderType">
		
<xs:sequence>
			
<xs:element ref="cdm:inventoryTransaction"/>
			
<xs:element name="fromInventoryLocation" type="cdm:InventoryLocationType"/>
			
<xs:element name="toInventoryLocation" type="cdm:InventoryLocationType"/>
			
<xs:element ref="cdm:distributionOrder"/>
			
<xs:element ref="cdm:distributionOrderItem"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="OrderItemAvailableQuantityType">
		
<xs:annotation>
			
<xs:documentation>Order Item Available Quantity holds the various number of the items specified in the ORDER ITEM.</xs:documentation>
		</xs:annotation>
		
<xs:sequence>
			
<xs:element ref="cdm:order"/>
			
<xs:element ref="cdm:orderItem"/>
			
<xs:element ref="cdm:inventoryOnHand"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="OrderItemproductType">
		
<xs:sequence>
			
<xs:element ref="cdm:product"/>
			
<xs:element ref="cdm:orderItemQuantity"/>
			
<xs:element ref="cdm:orderItemUnitCost"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="OrderItemShipmentItemType">
		
<xs:sequence>
			
<xs:element ref="cdm:distributionOrderItem" minOccurs="0"/>
			
<xs:element ref="cdm:product" minOccurs="0"/>
			
<xs:element ref="cdm:shipmentLineItem" minOccurs="0"/>
			
<xs:element ref="cdm:orderItemShipmentItemQuantity" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="OrderItemType">
		
<xs:annotation>
			
<xs:documentation>Order Number required if Recommendation Type Code = "A".   
Ordre Item Identifier  required if Recommendatioin Type Code = "A".
Eestimated Ship Date required if Recommendation Type Code = "R"
Estimated Delivery Date required if Recommendation Type Code = "K" or "P".
Tranist Days required if Recommendation Type Code = "R"</xs:documentation>
		</xs:annotation>
		
<xs:sequence>
			
<xs:element ref="cdm:orderItemId" minOccurs="0"/>
			
<xs:element name="orderItemTypeCd" type="xs:string" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Order Item Type Code identifies the Order Item as a Sales Order Item, Purchase Order Item, Work Order Item, etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="orderItemStatusCd" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Order Item Status Code                                                Possible OrderItem Status Code values:                       "O" =&gt; Open                </xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="orderItemQuantity" type="xs:decimal" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Order Item Quantity holds the total number of units of the specified Product ID ordered in the ORDER ITEM instance.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="orderItemUnitCost" type="xs:decimal" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Order Item Unit Cost contains the dollar amount per unit charged for thePRODUCT in the ORDER ITEM.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="OrderNoteType">
		
<xs:sequence>
			
<xs:element ref="cdm:noteId"/>
			
<xs:element ref="cdm:noteTypeCode"/>
			
<xs:element ref="cdm:noteText"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="OrderPartyRoleType">
		
<xs:sequence>
			
<xs:element ref="cdm:orderPartyRoleId"/>
			
<xs:element ref="cdm:orderPartyRoleCode"/>
			
<xs:element ref="cdm:partyId"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="OpenRmaOrderType">
		
<xs:sequence>
			
<xs:element ref="cdm:inventoryTransaction"/>
			
<xs:element name="fromInventoryLocation" type="cdm:InventoryLocationType"/>
			
<xs:element name="toInventoryLocation" type="cdm:InventoryLocationType"/>
			
<xs:element ref="cdm:rmaOrder"/>
			
<xs:element ref="cdm:rmaOrderItem" maxOccurs="unbounded"/>
			
<xs:element ref="cdm:orderItemShipmentItem"/>
			
<xs:element ref="cdm:shipmentRouteSegment"/>
			
<xs:element ref="cdm:shippedToLocation"/>
			
<xs:element ref="cdm:originalOrder"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="OrderShipmentType">
		
<xs:sequence>
			
<xs:element ref="cdm:distributionOrderItem"/>
			
<xs:element ref="cdm:shipmentLineItem"/>
			
<xs:element ref="cdm:orderShipmentQuantity" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="OrderStatusType">
		
<xs:sequence>
			
<xs:element ref="cdm:inventoryTransaction"/>
			
<xs:element ref="cdm:inventoryLocation"/>
			
<xs:element ref="cdm:order"/>
			
<xs:element ref="cdm:orderItem"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="OrderType">
		
<xs:sequence>
			
<xs:element ref="cdm:orderNumber"/>
			
<xs:element name="orderTypeCd" type="xs:string" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Order Type Code identifies the ORDER as one of the following:                    Sales Order                        Purchase Order                   Work Order                         RMA Order                         Replenishment Order            etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:orderEntryDate" minOccurs="0"/>
			
<xs:element name="requestedShipDate" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Requested Ship Date is the date the customer expects the order to ship from the warehouse.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="orderEffectiveFromDate" type="xs:date" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Order Effective From Date holds the first calendar date the ORDER  is available for rocessing. </xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="orderEffectiveThruDate" type="xs:date" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Order Effective From Date holds the lastt calendar date the ORDER  should be pressed by.  If the ORDER has not been processed by this date set the Oorder Status to Inactive.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:orderStatusCode" minOccurs="0"/>
			
<xs:element ref="cdm:orderStatusReasonCode" minOccurs="0"/>
			
<xs:element name="creditholdFlag" type="xs:string" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Credit Hold Flag identifies whether a hold is placed upon the Sales Order for credit reasons.                                                              Yes =&gt; credit hold             No =&gt; no credit hold </xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="manualHoldFlag" type="xs:string" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Manual Hold Flag identifies whether a hold is placed upon the Sales Order for fraud reasons.                                                              Yes =&gt; Manual hold            No =&gt; no Manual hold </xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="orderWantDate" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Order Want Date is the date the Order Placer requests the delivery of the PRODUCT or completion of the JOB.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:orderPartyRole" minOccurs="0" maxOccurs="unbounded"/>
			
<xs:element ref="cdm:contactMethod" minOccurs="0" maxOccurs="unbounded"/>
			
<xs:element ref="cdm:totalOrderedQuantity" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="OriginalOrderType">
		
<xs:sequence>
			
<xs:element ref="cdm:distributionOrder"/>
			
<xs:element ref="cdm:distributionOrderItem" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="OtherProductIdentifierType">
		
<xs:sequence>
			
<xs:element ref="cdm:otherProductId"/>
			
<xs:element ref="cdm:otherProductIdTypeCd"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="CdmaNetworkServiceClassificationType">
		
<xs:sequence>
			
<xs:element ref="cdm:networkServiceClassificationCode"/>
			
<xs:element ref="cdm:networkServiceClassificationDescription"/>
			
<xs:element ref="cdm:switchManagerActivationNumber"/>
			
<xs:element ref="cdm:networkServiceClassificationBackdateFlag"/>
			
<xs:element ref="cdm:internetProtocolServiceTypeCode"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="PartyNamePurposeType">
		
<xs:sequence>
			
<xs:element ref="cdm:party"/>
			
<xs:element ref="cdm:namePurpose"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="PartyNameType">
		
<xs:sequence>
			
<xs:element ref="cdm:partyNameEffectiveFromDate" minOccurs="0"/>
			
<xs:element ref="cdm:partyNameEffectiveThruDate" minOccurs="0"/>
			
<xs:choice>
				
<xs:element ref="cdm:individualName"/>
				
<xs:element ref="cdm:organizationName" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="PartyType">
		
<xs:sequence>
			
<xs:element ref="cdm:partyId" minOccurs="0"/>
			
<xs:element ref="cdm:organizationPersonIndicatorCd" minOccurs="0"/>
			
<xs:element ref="cdm:partyOtherIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			
<xs:element ref="cdm:partyLanguagePreference" minOccurs="0" maxOccurs="9999999"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="PartyContactMethodType">
		
<xs:sequence>
			
<xs:element ref="cdm:party"/>
			
<xs:element ref="cdm:contactMethod"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="PartyLanguagePreferenceType">
		
<xs:sequence>
			
<xs:element ref="cdm:languageTypeCode" minOccurs="0"/>
			
<xs:element ref="cdm:verbalLanguagePreferenceFlag" minOccurs="0"/>
			
<xs:element ref="cdm:writtenLanguagePreferenceFlag" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="PartyOtherIdentifierType">
		
<xs:sequence>
			
<xs:element ref="cdm:partyOtherIdTypeCode"/>
			
<xs:element ref="cdm:partyOtherIdentifierId"/>
			
<xs:element ref="cdm:partyOtherIdEffectiveFromDate" minOccurs="0"/>
			
<xs:element ref="cdm:partyOtherIdEffectiveThruDate" minOccurs="0"/>
			
<xs:element ref="cdm:partyOtherIdValue">
				
<xs:annotation>
					
<xs:documentation>Party Other Identifier Value represents the string of characters and/or numbers of the PARTY OTHER IDENTIFIER.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:uspsStateAbbreviation" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="PartyRolePreferenceType">
		
<xs:annotation>
			
<xs:documentation>Party Role Preferences holds the data elements that describe the Contact, Privacy and Data Sharing preferences of the PARTY.</xs:documentation>
		</xs:annotation>
		
<xs:sequence>
			
<xs:element ref="cdm:partyRoleContextCode"/>
			
<xs:element ref="cdm:partyRoleCode">
				
<xs:annotation>
					
<xs:documentation>Party Role Code identifies the role a PARTY fills within the context of Billing Accounts, Subscriptions, Products, Implementations, Product Deployments, etc.   Party Role Code is categorized by usage context identified by the Party Role Context Code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:partyRolePreferenceEffectiveFromDate"/>
			
<xs:element ref="cdm:partyRolePreferenceEffectiveThruDate"/>
			
<xs:element ref="cdm:partyRoleContactPreferenceCode"/>
			
<xs:element ref="cdm:partyRoleDataSharingPreferenceCode"/>
			
<xs:element ref="cdm:partyRolePrivacyPreferenceCode"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="PickListLineItemType">
		
<xs:sequence>
			
<xs:element ref="cdm:pickListLineItemId" minOccurs="0"/>
			
<xs:element ref="cdm:picklistLineItemQuantity" minOccurs="0"/>
			
<xs:element ref="cdm:inventoryItem"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="PickListType">
		
<xs:sequence>
			
<xs:element ref="cdm:pickListId" minOccurs="0"/>
			
<xs:element ref="cdm:pickListEntryDate" minOccurs="0"/>
			
<xs:element ref="cdm:pickListReleaseDate" minOccurs="0"/>
			
<xs:element ref="cdm:pickListStatusCode" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="PostalAddressComponentsType">
		
<xs:annotation>
			
<xs:documentation>Postal Address Components  contains the constituent parts of an address.  A address may be  a Street Address, Post Office Box or Rural Route address.</xs:documentation>
		</xs:annotation>
		
<xs:choice>
			
<xs:element name="streetAddress">
				
<xs:complexType>
					
<xs:sequence>
						
<xs:element ref="cdm:streetNumber" minOccurs="0"/>
						
<xs:element ref="cdm:fractionalStreetNumber" minOccurs="0"/>
						
<xs:element ref="cdm:precedingDirection" minOccurs="0"/>
						
<xs:element ref="cdm:streetName" minOccurs="0"/>
						
<xs:element ref="cdm:streetSuffix" minOccurs="0"/>
						
<xs:element ref="cdm:trailingDirection" minOccurs="0"/>
						
<xs:element ref="cdm:apartmentDesignator" minOccurs="0"/>
						
<xs:element ref="cdm:apartmentNumber" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			
<xs:element ref="cdm:postOfficeBoxNumber"/>
			
<xs:element name="ruralRouteAddress">
				
<xs:complexType>
					
<xs:sequence>
						
<xs:element ref="cdm:deliveryRouteNumber"/>
						
<xs:element ref="cdm:ruralRouteBoxNumber"/>
						
<xs:element ref="cdm:addressVerificationSystemRuralRouteTypeCode"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	
<xs:complexType name="PriceComponentType">
		
<xs:sequence/>
	</xs:complexType>
	
<xs:complexType name="ProductDeploymentPartyRoleType">
		
<xs:sequence>
			
<xs:element ref="cdm:productDeploymentPartyRoleCode">
				
<xs:annotation>
					
<xs:documentation>Product Deployment Party Role Code identifies the frole filled by the specified Party withint hte context of the specified Product Deployment.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:productDeploymentPartyRoleEffectiveFromDate"/>
			
<xs:element ref="cdm:productDeploymentPartyRoleEffectiveThruDate" minOccurs="0"/>
			
<xs:element ref="cdm:partyId"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="ProductDeploymentType">
		
<xs:sequence>
			
<xs:element ref="cdm:productDeploymentId"/>
			
<xs:element ref="cdm:productDeploymentEffectiveFromDate"/>
			
<xs:element ref="cdm:productDeploymentEffectiveThruDate"/>
			
<xs:element ref="cdm:product"/>
			
<xs:element ref="cdm:productDeploymentTerminationReasonCode"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="ProductType">
		
<xs:sequence>
			
<xs:element ref="cdm:productId" minOccurs="0"/>
			
<xs:element ref="cdm:stockKeepingUnit" minOccurs="0"/>
			
<xs:element ref="cdm:unitOfMeasureCd" minOccurs="0"/>
			
<xs:element ref="cdm:productName" minOccurs="0"/>
			
<xs:element ref="cdm:productDescription" minOccurs="0"/>
			
<xs:element ref="cdm:productStatusCode" minOccurs="0"/>
			
<xs:element ref="cdm:otherProductIdentifier" minOccurs="0" maxOccurs="unbounded"/>
			
<xs:element ref="cdm:preferredRoamingListId" minOccurs="0"/>
			
<xs:element ref="cdm:softwareVersion" minOccurs="0"/>
			
<xs:element ref="cdm:manufacturerPartyId" minOccurs="0"/>
			
<xs:element ref="cdm:manufacturerName" minOccurs="0"/>
			
<xs:element ref="cdm:modelName" minOccurs="0"/>
			
<xs:element ref="cdm:modelNumber" minOccurs="0"/>
			
<xs:element ref="cdm:internetProtocolServiceTypeCode"/>
			
<xs:element ref="cdm:cdmaNetworkServiceClassification"/>
			
<xs:element ref="cdm:specialProgramFlag"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="PurchaseOrderType">
		
<xs:sequence>
			
<xs:element ref="cdm:order"/>
			
<xs:element ref="cdm:orderItem" maxOccurs="unbounded"/>
			
<xs:element ref="cdm:billingAccount"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="PurchaseOrderItemType">
		
<xs:sequence>
			
<xs:element ref="cdm:orderItem"/>
			
<xs:element ref="cdm:product"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="RequirementType">
		
<xs:annotation>
			
<xs:documentation>Requirement Type contains the generic elements of the various categories of REQUIREMENT.</xs:documentation>
		</xs:annotation>
		
<xs:sequence>
			
<xs:element ref="cdm:requirementId" minOccurs="0"/>
			
<xs:element ref="cdm:requirementStatement" minOccurs="0"/>
			
<xs:element ref="cdm:requirementCreationDate" minOccurs="0"/>
			
<xs:element ref="cdm:requiredByDate" minOccurs="0"/>
			
<xs:element ref="cdm:requirementEstimatedBudget" minOccurs="0"/>
			
<xs:element ref="cdm:requirementQuantity" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="RmaOrderItemType">
		
<xs:sequence>
			
<xs:element ref="cdm:orderItemShipmentItem"/>
			
<xs:element ref="cdm:shipment"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="RmaOrderType">
		
<xs:sequence>
			
<xs:element ref="cdm:inventoryTransaction"/>
			
<xs:element ref="cdm:rmaOrderTypeCode"/>
			
<xs:element ref="cdm:fromInventoryLocation"/>
			
<xs:element ref="cdm:toInventoryLocation"/>
			
<xs:element ref="cdm:originalOrder"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="RolePartyType">
		
<xs:sequence>
			
<xs:element ref="cdm:party"/>
			
<xs:element ref="cdm:partyNamePurpose" maxOccurs="9999999"/>
			
<xs:element ref="cdm:partyContactMethod" maxOccurs="9999999"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="ShipmentLineItemType">
		
<xs:sequence>
			
<xs:element ref="cdm:shipmentLineItemId" minOccurs="0"/>
			
<xs:element name="shipmentLineItemQuantity" type="xs:decimal" minOccurs="0"/>
			
<xs:element name="shipmentLineItemContentDescription" type="xs:string" minOccurs="0"/>
			
<xs:element name="shipmentLineItemStatusCode" minOccurs="0"/>
			
<xs:choice>
				
<xs:element ref="cdm:inventoryItem" maxOccurs="unbounded"/>
				
<xs:element ref="cdm:containerInventoryItem"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="ShipmentPackagingContentType">
		
<xs:sequence>
			
<xs:element ref="cdm:shipment"/>
			
<xs:element ref="cdm:shipmentLineItem"/>
			
<xs:element name="shipmentPackageId" type="xs:string" minOccurs="0"/>
			
<xs:element name="packagedQuantity" type="xs:integer" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Packaged Quantity holds the number of Invnetory Items in the PACKAGE.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="ShipmentPartyRoleType">
		
<xs:sequence>
			
<xs:element ref="cdm:shipmentPartyRoleCode"/>
			
<xs:element ref="cdm:partyId"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="ShipmentReceiptType">
		
<xs:sequence>
			
<xs:element name="shipmentReceiptId" type="xs:string" minOccurs="0"/>
			
<xs:element name="shipmentReceivedDateTime" type="xs:dateTime" minOccurs="0"/>
			
<xs:element name="acceptedQuantity" type="xs:decimal" minOccurs="0"/>
			
<xs:element name="rejectedQuantity" type="xs:decimal" minOccurs="0"/>
			
<xs:element name="rejectionReasonCd" type="xs:string" minOccurs="0"/>
			
<xs:element ref="cdm:shipmentPackagingContent"/>
			
<xs:element ref="cdm:orderItem"/>
			
<xs:element ref="cdm:inventoryItem"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="ShipmentRouteSegmentType">
		
<xs:sequence>
			
<xs:element ref="cdm:shipment"/>
			
<xs:element ref="cdm:shipmentRouteSegmentId"/>
			
<xs:element ref="cdm:routeSegmentFromLocation"/>
			
<xs:element ref="cdm:routeSegmentToLocation"/>
			
<xs:element ref="cdm:carrier"/>
			
<xs:element ref="cdm:shipmentMethodCode" minOccurs="0"/>
			
<xs:element ref="cdm:estimatedShipmentSegmentStartDate" minOccurs="0"/>
			
<xs:element ref="cdm:estimatedShipmentSegmentStartTime" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Estimated Shipment Segment Start Time holds the hour, minute and second of the Estimated Shipment Segment Start Date the shipment  is scheduled to begin traversing the Shipment Route Segment.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:estimatedShipmentSegmentArrivalDate" minOccurs="0"/>
			
<xs:element ref="cdm:estimatedShipmentSegmentArrivalTime" minOccurs="0"/>
			
<xs:element ref="cdm:actualShipmentSegmentStartDate" minOccurs="0"/>
			
<xs:element ref="cdm:actualShipmentSegmentStartTime" minOccurs="0"/>
			
<xs:element ref="cdm:actualShipmentSegmentArrivalDate" minOccurs="0"/>
			
<xs:element ref="cdm:actualShipmentSegmentArrivalTime" minOccurs="0"/>
			
<xs:element ref="cdm:trailerId" minOccurs="0"/>
			
<xs:element ref="cdm:truckDoorSecuritySealId" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="ShipmentType">
		
<xs:sequence>
			
<xs:element ref="cdm:shipmentId" minOccurs="0"/>
			
<xs:element name="estimatedShipDate" type="xs:date" minOccurs="0"/>
			
<xs:element name="estimatedReadyDate" type="xs:date" minOccurs="0"/>
			
<xs:element name="estimatedFirstArrivalDate" type="xs:date" minOccurs="0"/>
			
<xs:element name="estimatedLastArrivalDate" type="xs:date" minOccurs="0"/>
			
<xs:element name="actualShipDate" type="xs:date" minOccurs="0"/>
			
<xs:element name="estimatedShippingCost" type="xs:decimal" minOccurs="0"/>
			
<xs:element name="actualShippingCost" type="xs:decimal" minOccurs="0"/>
			
<xs:element name="latestCancelDate" type="xs:date" minOccurs="0"/>
			
<xs:element name="shipmentTypeCode" type="xs:string" minOccurs="0"/>
			
<xs:element name="handlingInstructions" type="xs:string" minOccurs="0"/>
			
<xs:element ref="cdm:shipmentStatusCode" minOccurs="0"/>
			
<xs:element ref="cdm:shipmentStatusReasonCode" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Shipment Status Reason Code holds the reason the Shipment Status Code was assigned to the Shipment.  For example this would identify the reason for a Shipment Hold or Cancelation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:shipmentPartyRole" minOccurs="0" maxOccurs="unbounded"/>
			
<xs:element ref="cdm:shippedFromLocation" minOccurs="0"/>
			
<xs:element ref="cdm:shippedToLocation" minOccurs="0"/>
			
<xs:element name="totalShipmentWeight" type="xs:decimal" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Total Shipment Weight holds the actual weight of the items in shipment.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="totalShipmentQuantity" type="xs:decimal" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Total Shipment Quantity holds the total number of items shipped in the Shipment.  This is the sum of all of the shipmentItemQuantity values in the dependant Sipment Item instances.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="totalNumberOfMovableUnits" type="xs:decimal" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Total Number Of Movable Units holds the count of cartons, boxes, pallets, etc. in the Shipment.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="totalNumberOfOrderLineItems" type="xs:decimal" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Total Number Of Order Line Items  holds the number of the original Order Line Items fulfilled in the Shipment.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="cashOnDeliveryFlag" type="xs:string" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>CAsh On Delivery Flag identifies the shipment as requiring or not requiring cash payment upon delivery.                                                                     Valid Values:                       "Y" - Cash on Delivery Required                              "N" - Cash On Deliery is NOT required</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="SubInventoryFacilityType">
		
<xs:sequence>
			
<xs:element ref="cdm:inventoryFacility"/>
			
<xs:element ref="cdm:container"/>
			
<xs:element ref="cdm:inventoryFacilityPartyRole" minOccurs="0" maxOccurs="9999999"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="SubscriptionComponentImplementationType">
		
<xs:sequence>
			
<xs:element ref="cdm:componentImplementationId" minOccurs="0"/>
			
<xs:element ref="cdm:componentImplementationEffectiveFromDate" minOccurs="0"/>
			
<xs:element ref="cdm:componentImplementationEffectiveFromTime" minOccurs="0"/>
			
<xs:element ref="cdm:componentImplementationEffectiveThruDate" minOccurs="0"/>
			
<xs:element ref="cdm:componentImplementationEffectiveThruTime" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="SubscriptionContactMethodType">
		
<xs:sequence>
			
<xs:element ref="cdm:subscription"/>
			
<xs:element name="subscriptionContactMethodPurposeCode">
				
<xs:annotation>
					
<xs:documentation>Subscription Contact Method Purpose Code identifies the role the Contact Method fills within the context of the SUBSCRIPTION.                                                                   Possible value:                                             "Wireless Service Taxing Address"                   "Authorized User Contact Method"                  "External Account Administrator Contact Method"                                              "Sprint Customer Care Group Contact Method"  etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="subscriptionContactMethodId">
				
<xs:annotation>
					
<xs:documentation>Subscription Contaact MEthod Identifier uniquely identifies the instance of Contact Methos and its purpose within the context of the SUBSCRIPTION.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="subscriptionContactMethodEffectiveFromDate">
				
<xs:annotation>
					
<xs:documentation>Subscription Contact Method Effective from Date holds the first calendar day the Contact Method fills the specified purpose within the context of the SUBSCRIPTION.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="subscriptionContactmethodEffectiveThruDate">
				
<xs:annotation>
					
<xs:documentation>Subscription Contact Method Effective from Date holds the last calendar day the Contact Method fills the specified purpose within the context of the SUBSCRIPTION.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:partyContactMethod"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="SubscriptionPartyRoleType">
		
<xs:sequence>
			
<xs:element ref="cdm:subscription"/>
			
<xs:element name="subscriptionPartyRoleId" type="xs:string">
				
<xs:annotation>
					
<xs:documentation>Subscription PartyRole Identifier uniquely identifies the instance of Party Role within the context of the specified SUBSCRIPTION.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="subscriptionPartyRoleCode" type="xs:string">
				
<xs:annotation>
					
<xs:documentation>Subscription Party Role Code identifies the Role the PARTY plays within the context of the specified SUBSCRIPTION.                                                                          Possible values:                              "AUTHORIZED USER"                    "EXTERNAL ACCONT ADMINISTRATOR"                        "SPRINT ACCOUNT MANAGER"      "SALES CHANNEL"                        "CUSTOMER CARE GROUP"           etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="subscriptionPartyRoleEffectiveFromDate" type="xs:date">
				
<xs:annotation>
					
<xs:documentation>Subscription Party Role Effective From Date holds the first calendar day the PARTY fills the role within the context of the SUBSCRIPTION.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="subscriptionPartyRoleEffectiveThruDate" type="xs:date">
				
<xs:annotation>
					
<xs:documentation>Subscrciption Party Role Effective Thru Date holds the last calendar day the PARTY fills the role within the context of the SUBSCRIPTION.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:roleParty"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="SubscriptionProductDeploymentType">
		
<xs:sequence>
			
<xs:element ref="cdm:productDeploymentId"/>
			
<xs:element ref="cdm:productDeploymentEffectiveFromDate"/>
			
<xs:element ref="cdm:productDeploymentEffectiveFromTime"/>
			
<xs:element ref="cdm:productDeploymentEffectiveThruDate" minOccurs="0"/>
			
<xs:element ref="cdm:productDeploymentEffectiveThruTime" minOccurs="0"/>
			
<xs:element ref="cdm:product"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="SubscriptionType">
		
<xs:sequence>
			
<xs:element name="subscriptionId" type="xs:string">
				
<xs:annotation>
					
<xs:documentation>SubscriptionIdentifier uniquely identifies an instance of SUBSCRIPTION .</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="SystemCustomerAccountPartyRoleType">
		
<xs:annotation>
			
<xs:documentation>System Customer Account Party Role Type describes the data elements that hold the data describing the Party's association to Customer Accounts in different systems and the role the PARTY plays in the in those associations.</xs:documentation>
		</xs:annotation>
		
<xs:sequence>
			
<xs:element ref="cdm:systemId"/>
			
<xs:element ref="cdm:customerAccountNumber"/>
			
<xs:element ref="cdm:customerAccountPartyRoleCode"/>
			
<xs:element ref="cdm:customerAccountPartyRoleEffectiveFromDate"/>
			
<xs:element ref="cdm:customerAccountPartyRoleEffectiveThruDate"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="SystemElectronicAddressAssignmentType">
		
<xs:sequence>
			
<xs:element ref="cdm:systemId"/>
			
<xs:element ref="cdm:electronicAddressTypeCode"/>
			
<xs:element ref="cdm:electronicAddressString"/>
			
<xs:element ref="cdm:emailProtocol"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="SystemMdnAssignmentType">
		
<xs:sequence>
			
<xs:element ref="cdm:systemId"/>
			
<xs:element ref="cdm:mobileDirectoryNumber"/>
			
<xs:element ref="cdm:systemMdnAssignmentFromDate"/>
			
<xs:element ref="cdm:systemMdnAssignmentThruDate" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="SystemUserIdPasswordType">
		
<xs:sequence>
			
<xs:element ref="cdm:systemId"/>
			
<xs:element ref="cdm:userId"/>
			
<xs:element ref="cdm:password"/>
			
<xs:element ref="cdm:systemLoginEffectiveFromDate"/>
			
<xs:element ref="cdm:systemLoginEffectiveThruDate" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="SystemProductDeploymentPartyRoleTypeType">
		
<xs:annotation>
			
<xs:documentation>System Product Deployment Party Role  identifies the association of thre PARTY to various Products across different systems. </xs:documentation>
		</xs:annotation>
		
<xs:sequence>
			
<xs:element ref="cdm:systemId"/>
			
<xs:element ref="cdm:productId"/>
			
<xs:element ref="cdm:productName" minOccurs="0"/>
			
<xs:element ref="cdm:productDeploymentPartyRoleCode"/>
			
<xs:element ref="cdm:productDeploymentEffectiveFromDate"/>
			
<xs:element ref="cdm:productDeploymentEffectiveThruDate" minOccurs="0"/>
			
<xs:element ref="cdm:productStatusCode"/>
			
<xs:element ref="cdm:singleSignOnPreferenceCode"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="SystemSubscriptionPartyRoleType">
		
<xs:annotation>
			
<xs:documentation>System Subscription Party Role Type describes the data elements that hold the data describing the association of a PATY to SUBSCRIPTIONS in various Systems and the role the PARTY fills in those associations.</xs:documentation>
		</xs:annotation>
		
<xs:sequence>
			
<xs:element ref="cdm:systemId"/>
			
<xs:element ref="cdm:subscriptionId"/>
			
<xs:element ref="cdm:subscriptionStatusCode"/>
			
<xs:element ref="cdm:subscriptionPartyRoleCode"/>
			
<xs:element ref="cdm:subscriptionPartyRoleEffectiveFromDate"/>
			
<xs:element ref="cdm:subscriptionPartyRoleEffectiveThruDate"/>
			
<xs:element ref="cdm:subscriptionId"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="TaxAuthorityType">
		
<xs:annotation>
			
<xs:documentation>Tax Authority Details</xs:documentation>
		</xs:annotation>
		
<xs:sequence>
			
<xs:element ref="cdm:vertexGeographicCityCode"/>
			
<xs:element ref="cdm:vertexGeographicCountyCode"/>
			
<xs:element ref="cdm:vertexGeographicStateCode"/>
			
<xs:element ref="cdm:taxAuthorityId"/>
			
<xs:element ref="cdm:taxAuthorityName"/>
			
<xs:element ref="cdm:taxAuthorityRangeStartUspsPostalCode"/>
			
<xs:element ref="cdm:taxAuthorityRangeStartUspsPostalExtensionCode" minOccurs="0"/>
			
<xs:element ref="cdm:taxAuthorityRangeEndUspsPostalCode"/>
			
<xs:element ref="cdm:taxAuthorityRangeEndUspsPostalExtensionCode" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="TelecomNbrContactMethodType">
		
<xs:annotation>
			
<xs:documentation>Telecom Number Contact Method  holds data describing a telecommunication number used  to contact a PARTY.  </xs:documentation>
		</xs:annotation>
		
<xs:sequence>
			
<xs:element ref="cdm:telecomNbrTypeCd" minOccurs="0"/>
			
<xs:element ref="cdm:telecomNumberPurposeCd" minOccurs="0"/>
			
<xs:element ref="cdm:telephonyCountryCd" minOccurs="0"/>
			
<xs:element ref="cdm:telecomNumber"/>
			
<xs:element ref="cdm:phoneExtension" minOccurs="0"/>
			
<xs:element ref="cdm:pagerPin" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="TransactionAcknowledgementType">
		
<xs:sequence>
			
<xs:element ref="cdm:transactionAcknowledgementTypeCode"/>
			
<xs:element ref="cdm:transactionAcknowledgementId"/>
			
<xs:element ref="cdm:transactionStatusCode"/>
			
<xs:element ref="cdm:itemUnitCost" minOccurs="0"/>
			
<xs:element ref="cdm:transactionErrorMessage" minOccurs="0" maxOccurs="4"/>
			
<xs:element ref="cdm:batchRecordId"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="UniversalProductCodeComponentsType">
		
<xs:sequence>
			
<xs:element ref="cdm:upcPrefixDigit"/>
			
<xs:element ref="cdm:upcVendorCode"/>
			
<xs:element ref="cdm:upcProductSerialNumber"/>
			
<xs:element ref="cdm:upcPostDigit"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="UrbanFleetMemberIdType">
		
<xs:sequence>
			
<xs:element ref="cdm:urbanAreaId"/>
			
<xs:element ref="cdm:fleetId"/>
			
<xs:element ref="cdm:memberId"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="UspsPostalAddressType">
		
<xs:annotation>
			
<xs:documentation>USPS Postal AddressType represents the primitive structures of a United States Postal Service Address.</xs:documentation>
		</xs:annotation>
		
<xs:sequence>
			
<xs:element ref="cdm:postalAddressPurposeCode" minOccurs="0"/>
			
<xs:choice>
				
<xs:element ref="cdm:formattedPostalAddressLines"/>
				
<xs:element ref="cdm:postalAddressComponents"/>
			</xs:choice>
			
<xs:element ref="cdm:cityName"/>
			
<xs:element ref="cdm:uspsCountyCode" minOccurs="0"/>
			
<xs:element ref="cdm:uspsStateAbbreviation" minOccurs="0"/>
			
<xs:element ref="cdm:uspsPostalCd" minOccurs="0"/>
			
<xs:element ref="cdm:uspsPostalCdExtension" minOccurs="0"/>
			
<xs:element ref="cdm:withinCityLimitsYesNoCd" minOccurs="0"/>
			
<xs:element ref="cdm:addressVerificationSystemDeliveryPointBarCode" minOccurs="0"/>
			
<xs:element ref="cdm:addressVerificationSystemOverrideCode" minOccurs="0"/>
			
<xs:element ref="cdm:isoCountryName" minOccurs="0"/>
			
<xs:element ref="cdm:taxAuthority" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="VendorType">
		
<xs:sequence>
			
<xs:element ref="cdm:party"/>
			
<xs:element ref="cdm:namePurpose" maxOccurs="unbounded"/>
			
<xs:element ref="cdm:contactMethod" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="WarehouseFacilityType">
		
<xs:sequence>
			
<xs:element ref="cdm:inventoryFacility"/>
			
<xs:element ref="cdm:inventoryFacilityPartyRole" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="WirelessDeviceImplementationType">
		
<xs:sequence>
			
<xs:element ref="cdm:subscription"/>
			
<xs:element ref="cdm:subscriptionProductDeployment" minOccurs="0"/>
			
<xs:element ref="cdm:implementationEffectiveFromDate"/>
			
<xs:element ref="cdm:implementationEffectiveFromTime"/>
			
<xs:element ref="cdm:implementationEffectiveThruDate" minOccurs="0"/>
			
<xs:element ref="cdm:implementationEffectiveThruTime" minOccurs="0"/>
			
<xs:element ref="cdm:wirelessNetworkAccessDevice"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="WirelessNetworkAccessDeviceType">
		
<xs:sequence>
			
<xs:choice>
				
<xs:element ref="cdm:cdmaNetworkDevice"/>
				
<xs:element ref="cdm:idenNetworkDevice"/>
			</xs:choice>
			
<xs:element ref="cdm:preferredRoamingListId" minOccurs="0"/>
			
<xs:element ref="cdm:masterSubsidyLockCode" minOccurs="0"/>
			
<xs:element ref="cdm:oneTimeKeypadSubisidyLockCode" minOccurs="0"/>
			
<xs:element ref="cdm:authenticationKey" minOccurs="0"/>
			
<xs:element ref="cdm:softwareVersion" minOccurs="0"/>
			
<xs:element ref="cdm:mediumAccessControlAddress" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="WorkEffortType">
		
<xs:sequence>
			
<xs:element ref="cdm:workEffortId" minOccurs="0"/>
			
<xs:element ref="cdm:workEffortShortDescription" minOccurs="0"/>
			
<xs:element ref="cdm:workEffortLongDescription" minOccurs="0"/>
			
<xs:element ref="cdm:workEffortName" minOccurs="0"/>
			
<xs:element ref="cdm:workEffortScheduledStartDate" minOccurs="0"/>
			
<xs:element ref="cdm:workEffortScheduledStartTime" minOccurs="0"/>
			
<xs:element ref="cdm:workEffortScheduledFinishDate" minOccurs="0"/>
			
<xs:element ref="cdm:workEffortScheduledFinishTime" minOccurs="0"/>
			
<xs:element ref="cdm:workEffortTotalDollarsAllowed" minOccurs="0"/>
			
<xs:element ref="cdm:workEffortTotalHoursAllowed" minOccurs="0"/>
			
<xs:element ref="cdm:workEffortEstimatedHours" minOccurs="0"/>
			
<xs:element ref="cdm:workEffortActualStartDate" minOccurs="0"/>
			
<xs:element ref="cdm:workEffortActualStartTime" minOccurs="0"/>
			
<xs:element ref="cdm:workEffortActualFinishDate" minOccurs="0"/>
			
<xs:element ref="cdm:workEffortActualFinishTime" minOccurs="0"/>
			
<xs:element ref="cdm:actualTotalDollarsAtFinish" minOccurs="0"/>
			
<xs:element ref="cdm:actualTotalHoursAtFinish" minOccurs="0"/>
			
<xs:element ref="cdm:workEffortComment" minOccurs="0"/>
			
<xs:element ref="cdm:workEffortTypeCd" minOccurs="0"/>
			
<xs:element ref="cdm:workEffortPurposeCd" minOccurs="0"/>
			
<xs:element ref="cdm:workEffortStatusCd" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="WorkEffortAssociationType">
		
<xs:sequence>
			
<xs:element ref="cdm:fromWorkEffort"/>
			
<xs:element ref="cdm:toWorkEffort"/>
			
<xs:element ref="cdm:workEffortAssociationFromDate" minOccurs="0"/>
			
<xs:element ref="cdm:workEffortAssociationThruDate" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="WorkRequirementType">
		
<xs:sequence>
			
<xs:element ref="cdm:requirement"/>
			
<xs:choice>
				
<xs:element ref="cdm:product"/>
				
<xs:element ref="cdm:deliverable"/>
				
<xs:element ref="cdm:fixedAsset"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="WorkRequirementFulfillmentType">
		
<xs:sequence>
			
<xs:element ref="cdm:workRequirement"/>
			
<xs:element ref="cdm:workEffort"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="WorkOrderFulfillmentType">
		
<xs:sequence>
			
<xs:element ref="cdm:order"/>
			
<xs:element ref="cdm:job">
				
<xs:annotation>
					
<xs:documentation>Job represents a type of WORK EFFORT that would be a parent member of  WORK EFFORT BREAKDOWN Task instances.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element ref="cdm:billOfMaterialsMasterComponentCode"/>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="WirelessDevicePartyRoleType">
		
<xs:annotation>
			
<xs:documentation>Wireless Device Party Role identifies the the various PARTYs associated with a specific device and the roles the PARTYs fill in the association.</xs:documentation>
		</xs:annotation>
		
<xs:sequence>
			
<xs:element ref="cdm:wirelessDevicePartyRoleCode"/>
			
<xs:element ref="cdm:partyId"/>
			
<xs:element ref="cdm:userId"/>
			
<xs:element ref="cdm:wirelessDevicePartyRoleEffectiveFromDate"/>
			
<xs:element ref="cdm:wirelessDevicePartyRoleEffectiveThruDate" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
</xs:schema>