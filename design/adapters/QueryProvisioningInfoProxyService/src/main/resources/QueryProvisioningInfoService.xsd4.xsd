<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:tns="http://integration.sprint.com/interfaces/queryDeviceProvisioningEvents/v1/queryDeviceProvisioningEvents.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://integration.sprint.com/interfaces/queryDeviceProvisioningEvents/v1/queryDeviceProvisioningEvents.xsd" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0">
	
<!-- Date              Author                             Version     	Change                   Rel                            SR# -->
	
<!--7/9/2013       Mitali Handoo                  Initial                     1.0                        GBL13.3        		 PJ008329-->
	
<!--7/11/2013   Steve Heichelheim            1.0      Added MVM standards and simple types.               GBL13.3        PJ008329-->
	
<!--10/8/2013   Mitali Handoo                    1.1      Updated the activityType and timestamp as optional      GBL13.3        PJ008329-->
	
<!--11/20/2013   Dweepant Bakshi            1.2      Removed 256 length restriction on  provisioningItemResults as it can be 93K long     GBL13.3        CS#638946 -->
	
<xs:element name="queryDeviceProvisioningEvents" type="tns:QueryDeviceProvisioningEventsRequestType"/>
	
<xs:element name="queryDeviceProvisioningEventsResponse" type="tns:QueryDeviceProvisioningEventsResponseType"/>
	
<xs:complexType name="QueryDeviceProvisioningEventsRequestType">
		
<xs:sequence>
			
<xs:element name="startTime" type="tns:StartDateTimeType">
				
<xs:annotation>
					
<xs:documentation>Epoch time (time in ms). Time in milliseconds. </xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="endTime" type="tns:EndDateTimeType">
				
<xs:annotation>
					
<xs:documentation>Epoch time (time in ms). Time in milliseconds. </xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="searchByField" type="tns:DataElementNameType" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>The allowable values are IMSI and MSISDN. If the request specifies a searchByField query parameter, it must specify a searchFieldValue parameter and vice versa.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="searchFieldValue" type="tns:SearchCriteriaTextType" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>The value of the field to look for while searching . If the request specifies a searchByField query parameter, it must specify a searchFieldValue parameter and vice versa.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="recordsPerPage" type="tns:PageBufferRowCountNumberType">
				
<xs:annotation>
					
<xs:documentation>The recordsPerPage must be a +ve integer. The API will return an error if recordsPerPage value exceeds maximum records allowed per page by the server.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="QueryDeviceProvisioningEventsResponseType">
		
<xs:sequence>
			
<xs:element name="moreRecordsAvailable" type="tns:MoreRecordsAvailableFlagType">
				
<xs:annotation>
					
<xs:documentation>This flag indicates that there are more records available under the search results. Client needs to perform another request with appropriate parameters to retrieve next set of the search results. </xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="nextPageRecordkey" type="tns:RecordIdentifierType" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>The value of this field will be present if there are more records available. The value of this field can be used to retrieve next page of records. </xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="records" type="tns:RecordListType">
				
<xs:annotation>
					
<xs:documentation>List of Records</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="RecordInfoType">
		
<xs:sequence>
			
<xs:element name="activityType" type="tns:ActivityCodeType" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Type of activity for which this record is for. The allowable values are as follows:
INIT_PROV_REQUEST INIT_PROV_RESPONSE PROV_UPDATE_REQUEST PROV_UPDATE_RESPONSE CLIENT_PROV_RESULTS 
USER_PROFILE_RETRIEVED. 
Activity type will be INIT_PROV_REQUEST for a record indicating YPS received a initial provisioning request from client. 
Activity type will be PROV_UPDATE_REQUEST for a record indicating YPS received a subsequent provisioning request from client. 
Activity type will be “INIT_PROV_RESPONSE” for a record indicating YPS response to a initial provisioning request from client. 
Activity type will be “PROV_UPDATE_RESPONSE” for a record indicating YPS response to a subsequent provisioning request from client. 
Activity type will be “CLIENT_PROV_RESULTS” for a record showing provisioning results posted by client. 
Activity type will be “USER_PROFILE_RETRIEVED” for a record showing that the user profile was fetched from the UGDB and is available at the QAS.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="timestamp" type="tns:EndDateTimeType" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>The timestamp when the event occurred. 
This will be the time of the event as sent by client when activity type = “CLIENT_PROV_RESULTS”. 
This will be the time when request was received at YPS, in case of activity type = “INIT_PROV_REQUEST” and “PROV_UPDATE_REQUEST”. 
This will be the time when response was returned from YPS, in case of activity type = ““INIT_PROV_RESPONSE” and “PROV_UPDATE_RESPONSE” 
This will be the time when user profile was fetched from the UGDB and is available at the QAS, in case of activity type = “USER_PROFILE_RETRIEVED”.</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="applicationId" type="tns:ApplicationIdentifierType" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Application which invoked the API. 
This field will be populated for following activity types - INIT_PROV_REQUEST, PROV_UPDATE_REQUEST,</xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="imsi" type="tns:InternationalMobileSubscriberIdentityStringType" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>Response will have at least one of following fields – imsi, mdn </xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="primaryUserAddress" type="tns:PostalAddressType" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>This field is populated for following activity types - INIT_PROV_RESPONSE, PROV_UPDATE_REQUEST, PROV_UPDATE_RESPONSE, CLIENT_PROV_RESULTS, 
USER_PROFILE_RETRIEVED </xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="ptn" type="tns:MobileDirectoryNumberStringType" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>This field is populated whenever this data is provided by client or when the user profile is fetched from the UGDB and is available at the QAS. </xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="imei" type="tns:InternationalMobileEquipmentIdentifierStringType" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>This field is populated whenever this data is provided by client. </xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="userProvisioningPreviousVersion" type="tns:VersionStringType" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>For records related to request and response, the value of these fields will be the value of version query parameters provided by the client. </xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="systemProvisioningPreviousVersion" type="tns:VersionStringType" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>For records related to request and response, the value of these fields will be the value of version query parameters provided by the client. </xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="userProvisioningCurrentVersion" type="tns:VersionStringType" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>The value of this field will be the user provisioning version being returned in response to provisioning requests and when the user profile is fetched from the UGDB. This value will be populated for records with activity type as “INIT_PROV_RESPONSE” and “PROV_UPDATE_RESPONSE” and USER_PROFILE_RETRIEVED. 
The value of this field will be empty when records are for activity type “INIT_PROV_REQUEST” and “PROV_UPDATE_REQUEST”. 
The value of this field will be empty when initial or subsequent provisioning response resulted in error. </xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="systemProvisioningCurrentVersion" type="tns:VersionStringType" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>The value of this field will be the system provisioning version being returned in response to provisioning requests. This value will be populated for records with activity type as “INIT_PROV_RESPONSE” and “PROV_UPDATE_RESPONSE”. 
The value of this field will be empty when records are for activity type “INIT_PROV_REQUEST” and “PROV_UPDATE_REQUEST”. 
The value of this field will be empty when initial or subsequent provisioning response resulted in error. </xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="provisioningItemResults" type="tns:ProvisioningResultDescriptionType" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>This field is populated for records with activity type “CLIENT_PROV_RESULTS” </xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="isProvisioningSuccess" type="tns:ConfirmMessageTextType" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>This field is populated for records with activity type “CLIENT_PROV_RESULTS”. This is the value reported by client indicating whether provisioning was successful. </xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="provisioningErrorReason" type="tns:ErrorMessageTextType" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>This field is populated for records with activity type “CLIENT_PROV_RESULTS”. This is the reason which is reported by client when client provisioning failed and isSuccess flag is set to No. 
Examples of error reason field value (list may change in future):
An allowed Network Interface was not available 
Transient https failure 
Fatal https failure 
User not found 
Mandatory config item(s) missing </xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="responseCode" type="tns:HypertextTransferProtocolStatusCodeType" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>HTTP response code in the response. 
This field is populated for records with activity type “INIT_PROV_RESPONSE”,”PROV_UPDATE_RESPONSE” </xs:documentation>
				</xs:annotation>
			</xs:element>
			
<xs:element name="responseText" type="tns:HypertextTransferProtocolStatusDescriptionType" minOccurs="0">
				
<xs:annotation>
					
<xs:documentation>HTTP response text. The value of this field is brief description of the response as if it was successful or error, and if error what was the error in brief. 
This field is populated for records with activity type “INIT_PROV_RESPONSE”,”PROV_UPDATE_RESPONSE”. 
For activity type, INIT_PROV_RESPONSE, the following two responseText could be seen: 
“PIN validation failed” and “PIN expired” </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	
<xs:complexType name="RecordListType">
		
<xs:sequence>
			
<xs:element name="record" type="tns:RecordInfoType" maxOccurs="unbounded">
				
<xs:annotation>
					
<xs:documentation>Record Detail</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	
<!---->
	
<!--MVM/Shared Simple Types-->
	
<xs:simpleType name="ActivityCodeType">
		
<xs:annotation>
			
<xs:documentation>Activity Code designates specific activity associated to a specific deed, action or function.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="256"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ApplicationIdentifierType">
		
<xs:annotation>
			
<xs:documentation>Application Identifier uniquely identifies an Application</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="256"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ConfirmMessageTextType">
		
<xs:annotation>
			
<xs:documentation>Confirm Message Text is a string with a confirmation message returned from the called API.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="256"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="DataElementNameType">
		
<xs:annotation>
			
<xs:documentation>Data Element Name is the natural language label that represents an instance of either a database or XML schema a data component name.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="256"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="EndDateTimeType">
		
<xs:annotation>
			
<xs:documentation>End Date Time holds the calendar date and time of day of the cessation of a course of action, pursuit, or activity.</xs:documentation>
			
<xs:documentation>End Date holds the calendar date of the cessation of a course of action, pursuit, or activity.

Elements declared to be of type date must follow this form:  
CCYY-MM-DD
range for CC is: 00-99
range for YY is: 00-99
range for MM is: 01-12
range for DD is: 
01-28 if month is 2
01-29 if month is 2 and the gYear is a leap gYear
01-30 if month is 4, 6, 9, or 11
01-31 if month is 1, 3, 5, 7, 8, 10, or 12

Example: 1999-05-31 represents May 31, 1999</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="256"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="ErrorMessageTextType">
		
<xs:annotation>
			
<xs:documentation>Error Message Text is a textual description of the error message.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="256"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="EventDateTimeType">
		
<xs:annotation>
			
<xs:documentation>Event Date is the calendar date and time on which an event occurred in long format since Epoch</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="256"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="HypertextTransferProtocolStatusCodeType">
		
<xs:annotation>
			
<xs:documentation>Hypertext Transfer Protocol (HTTP) Status Code designates the status of the HTTP response. 

Example values:

302                  Moved Temporarily,                

303                  See Other,                               

304                  Not Modified,                           

305                  Use Proxy,                               

400                  Bad Request,                           

401                  Unauthorized,                          

402                  Payment Required,                  

403                  Forbidden,                               

404                  Not Found,                               

405                  Method Not Allowed,               

406                  Not Acceptable,                       

407                  Proxy Authentication Required,

408                  Request Time-Out,                  

409                  Conflict,                                    

410                  Gone,                                       

411                  Length Required,                     

412                  Precondition Failed,                 

413                  Request Entity Too Large,       

414                  Request-URL Too Large,        

415 -  Unsupported Media Type,      

500 - Server Error.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="256"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="HypertextTransferProtocolStatusDescriptionType">
		
<xs:annotation>
			
<xs:documentation>Hypertext Transfer Protocol (HTTP) Status Description is text describing the status of the HTTP response. 

Example values:

302                  Moved Temporarily,                

303                  See Other,                               

304                  Not Modified,                           

305                  Use Proxy,                               

400                  Bad Request,                           

401                  Unauthorized,                          

402                  Payment Required,                  

403                  Forbidden,                               

404                  Not Found,                               

405                  Method Not Allowed,               

406                  Not Acceptable,                       

407                  Proxy Authentication Required,

408                  Request Time-Out,                  

409                  Conflict,                                    

410                  Gone,                                       

411                  Length Required,                     

412                  Precondition Failed,                 

413                  Request Entity Too Large,       

414                  Request-URL Too Large,        

415 -  Unsupported Media Type,      

500 - Server Error.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="256"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="InternationalMobileEquipmentIdentifierStringType">
		
<xs:annotation>
			
<xs:documentation>International Mobile Equipment Identifier String is the string representation of an equipment identification number, similar to a serial number, used to identify a wireless network access device.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="256"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="InternationalMobileSubscriberIdentityStringType">
		
<xs:annotation>
			
<xs:documentation>International Mobile Subscriber Identity (IMSI) is a unique number associated with all GSM and Universal Mobile Telecommunications System (UMTS) network mobile phone users. It is stored in the Subscriber Identity Module (SIM) inside the phone and is sent by the phone to the network. It is also used to acquire other details of the mobile in the Home Location Register (HLR) or as locally copied in the Visitor Location Register. In order to avoid the subscriber being identified and tracked by eavesdroppers on the radio interface, the IMSI is sent as rarely as possible and a randomly generated TMSI is sent instead.

The IMSI is used in any mobile network that interconnects with other networks, in particular CDMA and EVDO networks as well as GSM nets. This number is provisioned in the phone directly or in the R-UIM card (a CDMA analogue equivalent to a SIM card in GSM)

An IMSI is usually 15 digits long, but can be shorter (for example MTN South Africa's IMSIs are 14 digits). The first 3 digits are the Mobile Country Code (MCC), and is followed by the Mobile Network Code (MNC), either 2 digits (European standard) or 3 digits (North American standard). The remaining digits are the Mobile Subscriber Identification Number (MSIN) within the network's customer base.

The IMSI conforms to the International Telecommunication Union (ITU) E.212 numbering standard.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="256"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="MobileDirectoryNumberStringType">
		
<xs:annotation>
			
<xs:documentation>Mobile Directory Number (MDN) is the actual phone number one would dial to reach a specific mobile phone.



Prior to Wireless Number Portability, MDN was the same number as the Mobile Identification Number (MIN) for many mobile phones. But now that MDNs can be ported (moved) to other carriers, MDN and MIN will be different for ported numbers.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="256"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="MoreRecordsAvailableFlagType">
		
<xs:annotation>
			
<xs:documentation>More Records Available Flag indicates that there are more records available for retrieval.  

Values:
TRUE = 1 (there are more records available for retrieval) 
FALSE = 0 (there are no more records available for retrieval)</xs:documentation>
			
<xs:documentation>More Records Available Flag indicates that there are more records available for retrieval.  

Values:
TRUE = 1 (there are more records available for retrieval) 
FALSE = 0 (there are no more records available for retrieval)</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:boolean"/>
	</xs:simpleType>
	
<xs:simpleType name="PostalAddressType">
		
<xs:annotation>
			
<xs:documentation>Postal Address contains the constituent parts of an address.  An address may be  a Street Address, Post Office Box or Rural Route address. </xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="256"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="RecordIdentifierType">
		
<xs:annotation>
			
<xs:documentation>Record Identifier contains a numeric value that uniquely identifies a record within a group of records.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="256"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="PageBufferRowCountNumberType">
		
<xs:annotation>
			
<xs:documentation>Page Buffer Row Count Number is the number of rows that will be buffered for a requested set of rows.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:integer"/>
	</xs:simpleType>
	
<xs:simpleType name="ProvisioningResultDescriptionType">
		
<xs:annotation>
			
<xs:documentation>Provisioning Result Description is text containing the details of the results of a provisioning event.
Example Value:
OK|2,
E|127|OB
</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string"/>
	</xs:simpleType>
	
<xs:simpleType name="SearchCriteriaTextType">
		
<xs:annotation>
			
<xs:documentation>Search Criteria Text is a text pattern to be used as input for searching values or querying a database.  It may contain wildcards used in the search. </xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="256"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="StartDateTimeType">
		
<xs:annotation>
			
<xs:documentation>Start Date Time contains the first calendar day of a time duration.  For example, in a Collection Case this would be the calendar day and time the Billing Account was put into Collections.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="256"/>
		</xs:restriction>
	</xs:simpleType>
	
<xs:simpleType name="VersionStringType">
		
<xs:annotation>
			
<xs:documentation>Version Number  identifies a release or iteration of a Service, Header, Trailer, Business Transaction, API, etc.</xs:documentation>
			
<xs:documentation>Version Integer holds a string value that identifies a release or iteration of a Service, Header, Trailer, Business Transaction, API, etc.</xs:documentation>
		</xs:annotation>
		
<xs:restriction base="xs:string">
			
<xs:maxLength value="256"/>
		</xs:restriction>
	</xs:simpleType>
	
<!---->
</xs:schema>