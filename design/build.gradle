// specifying version
task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}
buildscript {
    repositories {
        maven {
            url 'https://arm.mo.ca.am.ericsson.se/artifactory/repo'
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
        
    }
    dependencies {
        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '2.2.1')
    }
}

allprojects {
    apply plugin: 'artifactory'
	apply plugin: 'java'
	apply plugin: 'maven'
    apply plugin: 'eclipse'	
	task hello << { task -> println "I'm $task.project.name!" }
}

artifactory {
    contextUrl = "${artifactory_contextUrl}"
    publish {
        repository {
            repoKey = 'proj-rnam_cac-release-local'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
            
        }
    }
    resolve {
        repository {
            repoKey = 'proj-rnam_cac-release'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
            
        }
    }
}

subprojects {
	group = "com.ericsson.cac.sprint"
	repositories {
        maven {
            url 'https://arm.mo.ca.am.ericsson.se/artifactory/repo'
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
        
    }
	dependencies {
		testCompile 'junit:junit:4.11'
		compile(
			[group: 'org.springframework', name: 'spring-core', version: '4.1.1.RELEASE'],
			[group: 'org.springframework', name: 'spring-aop', version: '4.1.1.RELEASE'],
			[group: 'org.springframework', name: 'spring-context', version: '4.1.1.RELEASE'],
			[group: 'org.springframework', name: 'spring-beans', version: '4.1.1.RELEASE'],
			[group: 'org.springframework', name: 'spring-test', version: '4.1.1.RELEASE'],
			[group: 'org.springframework', name: 'spring-web', version: '4.1.1.RELEASE'],
			[group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.7'],
			[group: 'org.aspectj', name: 'aspectjweaver', version: '1.8.4'],
			[group: 'org.aspectj', name: 'aspectjrt', version: '1.8.4'],
			[group: 'com.google.code.gson', name: 'gson', version: '2.2.4'],
			[group: 'commons-lang', name: 'commons-lang', version: '2.6']
		)
	}
	
	task copySources(type: Copy) {
		ext.sourcesDir = file("${buildDir}/src/${project.name}")
		from sourceSets.main.allSource
		include '**/*.java'
		into sourcesDir
	}
	assemble.dependsOn copySources
}

task prepRelease(type: Copy) {
	ext.releaseDirName = file(releaseDir+'/binary/'+binaryReleaseFilename)
	releaseDirName.delete()
	releaseDirName.mkdirs()
	from "web/SprintSelfcare/build/exploded"
	from("web/SprintSelfcare"){
		include 'conf/**'
	}
	into releaseDirName
}

task prepSourceRelease(type: Copy) {
	ext.releaseDirName = file(releaseDir+'/source/'+sourceReleaseFilename)
	releaseDirName.delete()
	releaseDirName.mkdirs()
	subprojects.each { subproject ->
		from "${subproject.buildDir}/src"
	}
	into releaseDirName
}
task makeSourceRelease(type: Zip) {
	classifier(releaseDir+'/'+sourceReleaseFilename)
    from file(releaseDir+'/source')
}
task makeRelease(type: Zip) {
	classifier(releaseDir+'/'+binaryReleaseFilename)
    from file(releaseDir+'/binary')
}
task cleanRelease(type: Delete) {
  delete releaseDir
}
cleanRelease.dependsOn subprojects.clean
prepSourceRelease.dependsOn subprojects.build
makeSourceRelease.dependsOn prepSourceRelease
prepRelease.dependsOn makeSourceRelease
makeRelease.dependsOn prepRelease
